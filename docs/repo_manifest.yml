%YAML 1.2
---
##########################################################################################################
# This YAML file configures repository settings for the Sphinx documentation system.               
# - Specifies base path for cloning and details for each version-controlled set of docs.           
# - See repo[0] for a commented-out demo obj with all optional/overrided field example-use         
# - Most all properties are OPTIONAL; see comment for fallback vals.                               
# - Most path/slashes/are/normalized for you to prevent confusion; use whichever.                  
# - init_clone_path will clone as '{repo_name}-{tag}' or '{repo_name}--{branch}'                   
# - [Unversioned] Double dashes replace path/to/slashes. Eg: '{repo_name}--{path--to--branch}'     
# - It *is safe* (and encouraged) to periodically wipe your source/ _repos-available + content dirs
##########################################################################################################

# - If false, will skip this extension (for faster main doc iteration testing)
# - Defaults to true, if omitted
enable_repo_manager: true

# - If enable_repo_manager && false, will skip this extension locally
#   (useful if you 100% know all repos are up-to-date)
# - Defaults to true, if omitted
enable_repo_manager_local: true

# - Max workers for local sphinx_repo_manager for multi-threading
# - Recommended just 1 if needing *chronological* debugging
# - Defaults to 1 (later 5, once git_helper logs handle async), if omitted
max_workers_local: 5

# - Max workers for ReadTheDocs deployment for multi-threading
# - RTD has max 1 for free accts; use just 1 for debugging or free accts
# - Defaults to 2, if omitted
max_workers_rtd: 1

# - More-verbose logging or debugging 
# - Throws arbitrary err on done with sphinx_repo_manager if local
#   (prevents warning spam)
# - Defaults to false, if omitted
debug_mode: false

# - If true, will stash and continue if working directory is dirty
# - Else throws err (stops); defaults to true, if omitted
stash_and_continue_if_wip: true

# - Default base path for cloning repos relative to this file 
# - (!) On RTD, 'source/' prefix will be removed to resolve RTD bug
# - Normalizes 'os/path/slashes'
# - Defaults to 'source/content', if omitted
base_symlink_path: 'source/content'

# - If repository omits 'branch', this will be the fallback 
# - Defaults to 'master', if omitted
default_branch: 'master'

# - Default path to individual repo dirs we [mostly] want to 
#   clone - instead of the entire repo 
# - *Try* to be consistent between all repos, but can override via individual 
# - Repository `repo_sparse_path` override; normalizes 'explicit/forward/slashes' 
# - The parent dirs outside this will be 99% empty
# - Default to 'docs', if omitted
repo_sparse_path: 'docs'

# - Default base for cloning; normalizes 'os/path/slashes'
# - (!) On RTD, 'source/' prefix will be removed to resolve RTD bug 
# - Defaults to source/_repos-available, if omitted
init_clone_path: 'source/_repos-available'

# - Supports {repo_sparse_path} template 
# - When we symlink from init_clone_path, we may want to set the src deeper
# - Nested than what we cloned; normalizes 'os/path/slashes'
# - If kept default, you can access static content, like images, via `../_static/{repo_name}/images/`
# - Defaults to '{repo_sparse_path}/source', if omitted
init_clone_path_root_symlink_src: '{repo_sparse_path}/source'

## - Allows for `../_static` path to parity local repo _static path to keep image
##   path parity - which only works if `init_clone_path_root_symlink_src` is default
## - Leave null/empty to skip _static symlink
## - Defaults to '_static/content', if omitted
#symlinked_static_docs_path: 'source/content/_static'

# ----------------------------------------------------------------------
# For private repo access when testing with a !premium RTD account,
# set GITLAB_ACCESS_TOKEN in RTD's web dashboard (still use HTTPS urls);
# creds will be swapped @ .readthedocs.yaml
repositories: # Dictionary of <repo_name, repo_data>; defaults to {}, if omitted - essentially the same as !enable_repo_manager[_local]
  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  # Mock repo demonstrating all opts/overrides (pointing to default fallbacks)
  #mock_repo_example:
  ## - .git suffix == optional;
  ## - HTTPS only (until we add cert support in RTD)
  ## - If .readthedocs project name + GITLAB_ACCESS_TOKEN is set in RTD web dash, this can be a private repo
  #url: 'https://gitlab.acceleratxr.com/Core/foo_services'
  #
  ## - Normally named your_repo_name, but static docs is special
  ## - Relative to baseClonePath
  ## - Normalizes os/path/slashes
  ## - Default '{repo_name}-{tag}'
  #symlink_path: 'foo_services'
  #
  ## - Normalizes os/path/slashes
  ## - Default {default_branch}, if omitted
  #branch: 'master'
  #
  ## - You may not want a tag, if you just want the latest branch commit
  ## - (!) Don't forget to prefix with 'v', if target tags include this
  #tag: 'v1.0.0'
  #
  ## - Overrides parent `repo_sparse_path` (if true, requires init_clone_path_root_symlink_src_override)
  ## - Path to individual repo dirs we [mostly] want to clone - instead of the entire repo
  ## - Normalizes 'explicit/forward/slashes'
  ## - The parent dirs outside this will be 99% empty
  ## - Default to {repo_sparse_path}, if omitted; see sdk_unity for use-example
  #repo_sparse_path_override: 'docs'
  #
  ## - Supports {repo_sparse_path} template - will take override ver if present
  ## - If true, overrides init_clone_path_root_symlink_src
  ## - Defaults to {init_clone_path_root_symlink_src}, if omitted; see sdk_unity for use-example
  #init_clone_path_root_symlink_src_override: 'docs'
  #
  ## False would be as if you didn't add the repo entry at all (or commented it out); default true, if omitted
  #active: true  
  #
  # Useful for testing WIP without having it be stashed away or require a commit (still pulls _static images)
  # Default false, if omitted
  #skip_stash_pull: true
  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  # Static >>
  xbe_static_docs:
    url: 'https://gitlab.acceleratxr.com/Core/xbe_static_docs'
    symlink_path: '-'  # Shortened to prevent bloaty url slugs for static, unversioned content
    branch: 'main'
    #skip_stash_pull: false
  # Services >>
  account_services:
    url: 'https://gitlab.acceleratxr.com/Core/account_services'
    branch: 'dev'
  achievements_services:
    url: 'https://gitlab.acceleratxr.com/Core/achievements_services'
    branch: 'dev'
  asset_services:
    url: 'https://gitlab.acceleratxr.com/Core/asset_services'
    branch: 'dev'
  backup_services:
    url: 'https://gitlab.acceleratxr.com/Core/backup_services'
    branch: 'dev'
  economy_services:
    url: 'https://gitlab.acceleratxr.com/Core/economy_services'
    branch: 'dev'
  leaderboard_services:
    url: 'https://gitlab.acceleratxr.com/Core/leaderboard_services'
    branch: 'dev'
  matchmaking_services:
    url: 'https://gitlab.acceleratxr.com/Core/matchmaking_services'
    branch: 'dev'
  notification_services:
    url: 'https://gitlab.acceleratxr.com/Core/notification_services'
    branch: 'dev'
  persona_services:
    url: 'https://gitlab.acceleratxr.com/Core/persona_services'
    branch: 'dev'
  progression_services:
    url: 'https://gitlab.acceleratxr.com/Core/progression_services'
    branch: 'dev'
  purchasing_services:
    url: 'https://gitlab.acceleratxr.com/Core/purchasing_services'
    branch: 'dev'
  quest_services:
    url: 'https://gitlab.acceleratxr.com/Core/quest_services'
    branch: 'dev'
  reporting_services:
    url: 'https://gitlab.acceleratxr.com/Core/reporting_services'
    branch: 'dev'
  scripting_services:
    url: 'https://gitlab.acceleratxr.com/Core/scripting_services'
    branch: 'dev'
  server_instance_services:
    url: 'https://gitlab.acceleratxr.com/Core/server_instance_services'
    branch: 'dev'
  session_services:
    url: 'https://gitlab.acceleratxr.com/Core/session_services'
    branch: 'dev'
  social_services:
    url: 'https://gitlab.acceleratxr.com/Core/social_services'
    branch: 'dev'
  telemetry_services:
    url: 'https://gitlab.acceleratxr.com/Core/telemetry_services'
    branch: 'dev'
  validation_services:
    url: 'https://gitlab.acceleratxr.com/Core/validation_services'
    branch: 'dev'
  world_services:
      url: 'https://gitlab.acceleratxr.com/Core/world_services'
      branch: 'dev'
  # Sdks >>
  sdk_cpp:
    url: 'https://gitlab.acceleratxr.com/Core/sdk/sdk_cpp'
    branch: 'dev'
  sdk_csharp:
    url: 'https://gitlab.acceleratxr.com/Core/sdk/sdk_csharp'
    branch: 'dev'
  sdk_nodejs:
    url: 'https://gitlab.acceleratxr.com/Core/sdk/sdk_nodejs'
    branch: 'dev'
  sdk_unity:
      url: 'https://gitlab.acceleratxr.com/Core/sdk/sdk_unity'
      branch: 'dev'
      repo_sparse_path_override: 'Documentation~'
      init_clone_path_root_symlink_src_override: '{repo_sparse_path}/source'
  sdk_unreal:
      url: 'https://gitlab.acceleratxr.com/Core/sdk/sdk_unreal'
      branch: 'dev'
  # Other Products/Apps >>
  service_monitor:
    url: 'https://gitlab.acceleratxr.com/Core/service_monitor'
    branch: 'dev'
  launcher:
    url: 'https://gitlab.acceleratxr.com/Core/apps/launcher'
    branch: 'dev'
  console:
    url: 'https://gitlab.acceleratxr.com/Core/apps/console'
    branch: 'dev'
  xbeapp:
    url: 'https://gitlab.acceleratxr.com/acceleratxr/apps/xbeapp'
    branch: 'dev'
  # Demos >>
  unitychessgame:
    url: 'https://gitlab.acceleratxr.com/Core/samples/unitychessgame'
    branch: 'dev'
  lyrastartergame:
    url: 'https://gitlab.acceleratxr.com/Core/samples/lyrastartergame'
    branch: 'dev'
#  # Libs/WebApps >>
#  appconfig:
#    url: 'https://gitlab.acceleratxr.com/Core/tools/appconfig'
#    branch: 'dev'
#  react-shared:
#    url: 'https://gitlab.acceleratxr.com/Core/tools/react-shared'
#    branch: 'dev'
#  electron-shared:
#    url: 'https://gitlab.acceleratxr.com/Core/tools/electron-shared'
#    branch: 'dev'
#  # Composer >>
  service-core:
    url: 'https://gitlab.acceleratxr.com/acceleratxr/composerjs/service-core'
    branch: 'dev'
