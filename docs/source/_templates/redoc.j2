<!doctype html>
<html>
<head>
    <title>{{ name | default('API documentation') }}</title>
    <meta charset="{{ encoding | default('utf-8') }}"/>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="{{ pathto('_static/styles/css/redoc.css', 1) }}">
</head>
<body>

<!-- REDOC START -->
<redoc
        {{ 'lazy-rendering' if opts['lazy-rendering'] }}
        {{ 'suppress-warnings' if opts['suppress-warnings'] }}
        {{ 'hide-hostname' if opts['hide-hostname'] }}
        {{ 'required-props-first' if opts['required-props-first'] }}
        {{ 'no-auto-auth' if opts['no-auto-auth'] }}
        {{ 'path-in-middle-panel' if opts['path-in-middle-panel'] }}
        {{ 'hide-loading' if opts['hide-loading'] }}
        {{ 'native-scrollbars' if opts['native-scrollbars'] }}
        {{ 'untrusted-spec' if opts['untrusted-spec'] }}
        {{ 'expand-responses="%s"' % ','.join(opts['expand-responses']) if opts['expand-responses'] }}>
</redoc>

<script src="{{ pathto('_static/redoc.js', 1) }}"></script>
{% if embed %}
    <script type="application/json" id="spec">
    {{ spec }}
    
    </script>
{% endif %}
<script>
	let spec;
	{% if embed %}
		spec = JSON.parse(document.getElementById('spec').innerHTML);
	{% else %}
		spec = "{{ pathto(spec, 1) }}";
	{% endif %}

	// Define the theme configuration directly as a JavaScript object
	const xsuiBrandPinkColor = '#ff005b';
	const xsuiBluishLightestGrayWhiteBg = '#f7faff';
	const xsuiBluishDarkGrayDisabledText = '#a0abb8';
	const xsuiBluishDarkerBlackColor = '#000e1e';
	const xsuiBluishBlackColor = '#00244d';
	const xsuiMarineGreenActionColor = '#00c77e';
	const xsuiBluishDarkerGraySecondaryText = '#747e8a';
	const xsuiBluishLighterPearlGrayTableCell = '#fafbfc';
	const xsuiBrandPinkColorBrighter = '#ffdde9';
	const xsuiBrandPinkColorBright = '#fcaeca';
	const xsuiBrandPinkColorDark = '#80002e';
	const xsuiMarineGreenDarkActionColor = '#006E46';
	const xsuiStartColorGradientBrightSky = '#489dff';
	const xsuiStartColorGradientBlueViolet = '#ac2eff';
	const xsuiBoldOrangeColor = '#ff8111';
	const xsuiDestructionRedColor = '#fc2b55';
	const xsuiBrightenedOrangeYellowColor = '#ffa04c';
	const xsuiBrandBlueColor = '#0073f7';

	const themeConfig = {
		theme: {
			colors: {
				primary: { main: xsuiBrandPinkColor },
				secondary: 'violet',
				tonalOffset: 0.2,  // Adjusts how light/dark variants are generated
				hover: {
					text: xsuiMarineGreenActionColor,
				},
				text: {
					primary: xsuiBluishLightestGrayWhiteBg,
					secondary: xsuiBluishDarkGrayDisabledText,
				},
				background: {
					default: xsuiBluishDarkerBlackColor,
					paper: xsuiBluishBlackColor,
				},
				border: {
					maindark: '#44475a',
				},
				http: {
					// The tiny [VERB] banners
					get: xsuiMarineGreenDarkActionColor,
					post: xsuiBoldOrangeColor,
					patch: xsuiBoldOrangeColor,
					put: xsuiBrandBlueColor,
					delete: xsuiDestructionRedColor,
					options: xsuiStartColorGradientBrightSky,
					head: xsuiBrandPinkColor,
					trace: xsuiBluishDarkerGraySecondaryText,
				},
				responses: {
					// Found in body via the dropdown blocks
					success: {
						color: xsuiBluishLightestGrayWhiteBg,
						backgroundColor: xsuiMarineGreenDarkActionColor,
						borderColor: xsuiBluishLightestGrayWhiteBg,
					},
					error: {
						color: xsuiBrandPinkColorBrighter,
						backgroundColor: xsuiBrandPinkColorDark,
						borderColor: xsuiBrandPinkColor,
					},
					redirect: {
						color: xsuiBluishLightestGrayWhiteBg,
						backgroundColor: '#44475a',
						borderColor: '#bd93f9',
					},
				},
			},
			typography: {
				fontFamily: 'Graphik, Helvetica Neue, Arial, sans-serif !important',
				fontSize: '14px',
				headings: {
					fontFamily: 'Sharp Grotesk, Helvetica Neue, sans-serif !important',
					//fontWeight: 'bold',
					color: xsuiBluishLighterPearlGrayTableCell,
				},
				code: {
					fontFamily: 'Source Code Pro, Consolas, monospace !important',
					fontSize: '13px',
					color: xsuiBluishLighterPearlGrayTableCell,
				},
				links: {
					color: xsuiMarineGreenActionColor,
					visited: xsuiMarineGreenDarkActionColor,
					hover: xsuiStartColorGradientBrightSky,
				},
			},
			sidebar: {
				backgroundColor: xsuiBluishDarkerBlackColor,
				textColor: xsuiBluishLighterPearlGrayTableCell,
			},
			rightPanel: {
				backgroundColor: xsuiBluishDarkerBlackColor,
				textColor: xsuiBluishLighterPearlGrayTableCell,
			},
		},
	};

	Redoc.init(spec, themeConfig); // Apply the themeConfig object
</script>
<!-- REDOC END -->

</body>
</html>
