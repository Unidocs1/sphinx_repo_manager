{"openapi":"3.1.0","info":{"version":"2024.08.0-rc.0","x-logo":"../../../_static/images/xbe_static_docs/logo.png"},"paths":{"/status":{"x-name":"StatusRoute","get":{"description":"Returns information about the service and it's operational status.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"object"}}}}},"tags":["Operations"],"x-name":"get"}},"/admin/service-monitor/clear-cache":{"x-name":"AdminRoute","get":{"description":"Flushes the second-level cache so that subsequent requests will pull directly from the database.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"tags":["Operations"],"x-name":"clearCache"}},"/admin/service-monitor/release-notes":{"x-name":"AdminRoute","get":{"description":"Returns the release notes file for the service.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"text/x-rst":{"schema":{"type":"string"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"text/x-rst":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"tags":["Release Notes"],"x-name":"get"}},"/admin/service-monitor/restart":{"x-name":"AdminRoute","get":{"description":"Immediately restarts the service.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"tags":["Operations"],"x-name":"restart"}},"/":{"x-name":"OpenAPIRoute","get":{"description":"Returns the OpenAPI specification for the service in HTML format.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"text/html":{"schema":{"type":"string"}}}}},"tags":["Other"],"x-name":"getHTML"}},"/openapi.json":{"x-name":"OpenAPIRoute","get":{"description":"Returns the OpenAPI specification for the service in JSON format.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"string"}}}}},"tags":["Other"],"x-name":"getJSON"}},"/openapi.yaml":{"x-name":"OpenAPIRoute","get":{"description":"Returns the OpenAPI specification for the service in YAML format.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"text/yaml":{"schema":{"type":"string"}}}}},"tags":["Other"],"x-name":"getYAML"}},"/admin/account-services/clear-cache":{"x-name":"AdminRoute","get":{"description":"Flushes the second-level cache so that subsequent requests will pull directly from the database.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"clearCache","tags":["Operations"]}},"/debug/logs/account-services":{"x-name":"AdminRoute","x-upgrade":true,"get":{"description":"Establishes a connection to the live log socket.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"logs","tags":["Logs"]}},"/admin/account-services/release-notes":{"x-name":"AdminRoute","get":{"description":"Returns the release notes file for the service.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"text/x-rst":{"schema":{"type":"string"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"text/x-rst":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"get","tags":["Release Notes"]}},"/admin/account-services/restart":{"x-name":"AdminRoute","get":{"description":"Immediately restarts the service.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"restart","tags":["Operations"]}},"/acls":{"x-schema":"AccessControlListMongo","x-name":"_a","post":{"description":"Creates one or more access control lists.","requestBody":{"content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/AccessControlListMongo"},{"type":"array","items":{"$ref":"#/components/schemas/AccessControlListMongo"}}]}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/AccessControlListMongo"},{"type":"array","items":{"$ref":"#/components/schemas/AccessControlListMongo"}}]}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"create","tags":["IAM"]},"put":{"description":"Saves modifications for the given collection of access control lists.","requestBody":{"content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/AccessControlListMongo"}}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/AccessControlListMongo"}}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"updateBulk","tags":["IAM"]},"head":{"description":"Returns the total number of access control lists matching the given search criteria.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"count","tags":["IAM"]},"get":{"description":"Returns a collection of access control lists matching the given search criteria.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"oneOf":[{"type":"array"},{"$ref":"#/components/schemas/AccessControlListMongo"}]}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"findAll","tags":["IAM"]}},"/acls/:id":{"parameters":[{"$ref":"#/components/parameters/id"}],"x-schema":"AccessControlListMongo","x-name":"_a","delete":{"description":"Deletes the access control list with the given unique identifier and optional version.","parameters":[{"$ref":"#/components/parameters/version"}],"responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"delete","tags":["IAM"]},"get":{"description":"Returns the access control list with the given unique identifier.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AccessControlListMongo"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"findById","tags":["IAM"]},"put":{"description":"Saves modifications to existing access control list with the given unique identifier.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AccessControlListMongo"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AccessControlListMongo"}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"update","tags":["IAM"]}},"/metrics/account-services":{"x-name":"MetricsRoute","get":{"description":"Returns all Prometheus metrics emitted by this service.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"text/plain; version=0.0.4; charset=utf-8":{"schema":{"type":"string"}}}}},"x-name":"getMetrics","tags":["IAM"]}},"/metrics/account-services/:metric":{"parameters":[{"name":"metric","in":"path","required":true,"schema":{"type":"string"}}],"x-name":"MetricsRoute","get":{"description":"Returns the Prometheus metric emitted by this service with the given name.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"text/plain; version=0.0.4; charset=utf-8":{"schema":{"type":"string"}}}}},"x-name":"getSingleMetric","tags":["IAM"]}},"/auth/password":{"x-name":"routes.AuthBasicRoute","get":{"description":"Authenticates the user using HTTP Basic and returns a JSON Web Token access token to be used with future API requests. If the user's Multi-factor Authentication (MFA) is enabled, the response will redirect the client to the `/auth/totp` endpoint where they can provide a valid MFA token.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.AuthToken"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"basic":[]}],"summary":"Authenticate Password","x-name":"authenticatePassword","tags":["IAM"]}},"/auth/discord":{"x-name":"routes.AuthDiscordRoute","get":{"description":"Authenticates the user using a provided Discord access token and returns a JSON Web Token access token to be used with future API requests.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.AuthToken"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"discord":[]}],"summary":"Authenticate","x-name":"authenticate","tags":["IAM"]}},"/auth/discord/token":{"x-name":"routes.AuthDiscordRoute","get":{"description":"Authenticates the user using a provided Discord access token and returns a JSON Web Token access token to be used with future API requests.","parameters":[{"name":"authenticateToken","in":"query","schema":{"type":"string"}},{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.AuthToken"}}}}},"summary":"Authenticate Token","x-name":"authenticateToken","tags":["IAM"]}},"/auth/discord/connect":{"x-name":"routes.AuthDiscordRoute","get":{"description":"Links an existing account to a given Discord login.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Connect","x-name":"connect","tags":["IAM"]}},"/auth/discord/connect/token":{"x-name":"routes.AuthDiscordRoute","get":{"description":"Authenticates a provided token.","parameters":[{"name":"connectToken","in":"query","schema":{"type":"string"}},{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Authenticate Token","x-name":"connectToken","tags":["IAM"]}},"/auth/email/:id":{"parameters":[{"$ref":"#/components/parameters/id"}],"x-name":"routes.AuthEmailRoute","post":{"description":"Authenticates the user using a provided OTP access token and returns a JSON Web Token access token to be used with future API requests.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.AuthToken"}}}}},"summary":"Authenticate Email","x-name":"authenticate","tags":["IAM"]},"get":{"description":"Sends a OTP code to the user's referenced email address.","parameters":[{"name":"sendEmail","in":"query","schema":{"type":"string"}}],"responses":{"204":{"description":"No Content"}},"summary":"Send OTP Email","x-name":"sendEmail","tags":["IAM"]}},"/auth/facebook":{"x-name":"routes.AuthFacebookRoute","get":{"description":"Authenticates the user using a provided Facebook access token and returns a JSON Web Token access token to be used with future API requests.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.AuthToken"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"facebook-token":[]}],"summary":"Authenticate","x-name":"authenticate","tags":["IAM"]}},"/auth/facebook/connect":{"x-name":"routes.AuthFacebookRoute","get":{"description":"Links an existing account to a given Facebook login.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Connect","x-name":"connect","tags":["IAM"]}},"/auth/google":{"x-name":"routes.AuthGoogleRoute","get":{"description":"Authenticates the user using a provided Google access token and returns a JSON Web Token access token to be used with future API requests.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.AuthToken"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"google":[]}],"summary":"Authenticate","x-name":"authenticate","tags":["IAM"]}},"/auth/google/connect":{"x-name":"routes.AuthGoogleRoute","get":{"description":"Links an existing account to a given Google login.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Auth Google","x-name":"connect","tags":["IAM"]}},"/auth":{"x-name":"routes.AuthMethodsRoute","get":{"description":"Returns a list of all authentication methods supported by this service.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"array","items":{"type":"object"}}}}}},"summary":"Authentication Methods","x-name":"getAuthMethods","tags":["IAM"]}},"/auth/oauth/:id":{"parameters":[{"$ref":"#/components/parameters/id"}],"x-name":"routes.AuthOAuthRoute","get":{"description":"Retrieves an authorization URL for the OAuth provider with the given id.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"object"}}}}},"summary":"Authenticate","x-name":"authenticate","tags":["IAM"]},"post":{"description":"Authenticates the user against the OAuth compatible provider associated with the specified id.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"object"}}}}},"summary":"Authenticate","x-name":"exchangeToken","tags":["IAM"]}},"/auth/oauth/:id/connect":{"parameters":[{"$ref":"#/components/parameters/id"}],"x-name":"routes.AuthOAuthRoute","post":{"description":"Links an existing account to a given OAuth login.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Connect","x-name":"connect","tags":["IAM"]}},"/auth/phone/:id":{"parameters":[{"$ref":"#/components/parameters/id"}],"x-name":"routes.AuthPhoneRoute","post":{"description":"Authenticates the user using a provided OTP access token and returns a JSON Web Token access token to be used with future API requests.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.AuthToken"}}}}},"summary":"Authenticate","x-name":"authenticate","tags":["IAM"]},"get":{"description":"Sends an SMS message to the user's phone number containing an OTP authentication code.","responses":{"204":{"description":"No Content"}},"summary":"Send OTP Code","x-name":"sendSMS","tags":["IAM"]}},"/auth/refresh":{"x-name":"routes.AuthRefreshRoute","get":{"description":"Authenticates the user using a provided OTP access token and returns a JSON Web Token access token to be used with future API requests.","parameters":[{"name":"authenticateToken","in":"query","schema":{"type":"string"}},{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.AuthToken"}}}}},"summary":"Authenticate","x-name":"authenticateToken","tags":["IAM"]}},"/auth/steam":{"x-name":"routes.AuthSteamRoute","get":{"description":"Authenticates the user using a provided OTP access token and returns a JSON Web Token access token to be used with future API requests.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.AuthToken"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"steam":[]}],"summary":"Authenticate","x-name":"authenticate","tags":["IAM"]}},"/auth/steam/connect":{"x-name":"routes.AuthSteamRoute","get":{"description":"Links an existing account to a given Steam login.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Connect","x-name":"connect","tags":["IAM"]}},"/auth/totp/:id":{"parameters":[{"$ref":"#/components/parameters/id"}],"x-name":"routes.AuthTotpRoute","get":{"description":"Sends a OTP code to the user account referenced.","parameters":[{"name":"sendCode","in":"query","schema":{"type":"string"}}],"responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Send OTP Code","x-name":"sendCode","tags":["IAM"]}},"/auth/totp":{"x-name":"routes.AuthTotpRoute","post":{"description":"Authenticates the user using a provided OTP access token and returns a JSON Web Token access token to be used with future API requests.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.AuthToken"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Authenticate","x-name":"authenticate","tags":["IAM"]}},"/auth/twitter":{"x-name":"routes.AuthTwitterRoute","get":{"description":"Authenticates the user using a provided Twitter access token and returns a JSON Web Token access token to be used with future API requests.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.AuthToken"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"twitter":[]}],"summary":"Authenticate","x-name":"authenticate","tags":["IAM"]}},"/auth/twitter/connect":{"x-name":"routes.AuthTwitterRoute","get":{"description":"Links an existing account to a given Twitter login.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Connect","x-name":"connect","tags":["IAM"]}},"/auth/xsolla":{"x-name":"routes.AuthXsollaRoute","get":{"description":"Authenticates the user using a provided Xsolla Account access token and returns a JSON Web Token access token to be used with future API requests.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.AuthToken"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"xsolla":[]}],"summary":"Authenticate","x-name":"authenticate","tags":["IAM"]}},"/auth/xsolla/token":{"x-name":"routes.AuthXsollaRoute","get":{"description":"Validate the authentication token","parameters":[{"name":"authenticateToken","in":"query","schema":{"type":"string"}},{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.AuthToken"}}}}},"summary":"Authenticate Token","x-name":"authenticateToken","tags":["IAM"]}},"/auth/xsolla/connect":{"x-name":"routes.AuthXsollaRoute","get":{"description":"Links an existing account to a given Xsolla Account login.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Connect","x-name":"connect","tags":["IAM"]}},"/auth/xsolla/connect/token":{"x-name":"routes.AuthXsollaRoute","get":{"description":"Connect Token Description","parameters":[{"name":"connectToken","in":"query","schema":{"type":"string"}},{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Connect Token","x-name":"connectToken","tags":["IAM"]}},"/config/passwords":{"x-name":"routes.ConfigPasswordsRoute","get":{"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"object"}}}}},"x-name":"authenticatePassword","tags":["IAM"]}},"/config/users":{"x-name":"routes.ConfigUsersRoute","get":{"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"object"}}}}},"x-name":"getUsersConfig","tags":["IAM"]}},"/oauth/clients":{"x-schema":"models.OAuthClient","x-name":"routes.OAuthClientRoute","head":{"description":"Returns the count of objects in the header as `Content-Length`.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"object"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Count OAuth Clients","x-name":"count","tags":["IAM"]},"get":{"description":"Returns all objects from the system that the user has access to","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/models.OAuthClient"}}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find All OAuth Clients","x-name":"findAll","tags":["IAM"]},"post":{"description":"Create a new OAuthClient","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.OAuthClient"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/models.OAuthClient"},{"type":"array","items":{"$ref":"#/components/schemas/models.OAuthClient"}}]}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Create OAuth Client","x-name":"create","tags":["IAM"]},"put":{"description":"","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.OAuthClient"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/models.OAuthClient"}}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"","x-name":"updateBulk","tags":["IAM"]},"delete":{"description":"Removes all organization records from the datastore.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Truncate OAuth Clients","x-name":"truncate","tags":["IAM"]}},"/oauth/clients/:id":{"parameters":[{"$ref":"#/components/parameters/id"}],"x-schema":"models.OAuthClient","x-name":"routes.OAuthClientRoute","get":{"description":"Returns a single OAuthClient from the system that the user has access to","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.OAuthClient"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find OAuth Client By ID","x-name":"findById","tags":["IAM"]},"put":{"description":"Updates a single OAuthClient","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.OAuthClient"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.OAuthClient"}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Update OAuth Client","x-name":"update","tags":["IAM"]},"delete":{"description":"Deletes the OAuthClient","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Delete OAuth Client","x-name":"delete","tags":["IAM"]}},"/oauth/providers":{"x-schema":"models.OAuthProvider","x-name":"routes.OAuthProviderRoute","head":{"description":"Returns the count of oauth providers in the header as `Content-Length`.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"object"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Count OAuth Providers","x-name":"count","tags":["IAM"]},"get":{"description":"Returns all oauth providers from the datastore that the user has access to","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/models.OAuthProvider"}}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find All OAuth Providers","x-name":"findAll","tags":["IAM"]},"post":{"description":"Create a new OAuth Provider","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.OAuthProvider"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/models.OAuthProvider"},{"type":"array","items":{"$ref":"#/components/schemas/models.OAuthProvider"}}]}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Create OAuth Providers","x-name":"create","tags":["IAM"]},"put":{"description":"Bulk Update OAuth Providers","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.OAuthProvider"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/models.OAuthProvider"}}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Bulk Update OAuth Providers","x-name":"updateBulk","tags":["IAM"]},"delete":{"description":"Removes all organization records from the datastore.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Truncate OAuth Provider","x-name":"truncate","tags":["IAM"]}},"/oauth/providers/:id":{"parameters":[{"$ref":"#/components/parameters/id"}],"x-schema":"models.OAuthProvider","x-name":"routes.OAuthProviderRoute","get":{"description":"Returns a single OAuthProvider from the datastore that the user has access to","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.OAuthProvider"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find OAuth Provider By ID","x-name":"findById","tags":["IAM"]},"put":{"description":"Updates a single OAuthProvider","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.OAuthProvider"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.OAuthProvider"}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Update OAuth Provider","x-name":"update","tags":["IAM"]},"delete":{"description":"Deletes the OAuthProvider","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Delete OAuth Provider","x-name":"delete","tags":["IAM"]}},"/oauth/authorize":{"x-name":"routes.OAuthRoute","get":{"description":"Returns a authentication url.","parameters":[{"name":"getAuthURL","in":"query","schema":{"type":"string"}},{"name":"getAuthURL","in":"query","schema":{"type":"string"}},{"name":"getAuthURL","in":"query","schema":{"type":"string"}},{"name":"getAuthURL","in":"query","schema":{"type":"string"}},{"name":"getAuthURL","in":"query","schema":{"type":"string"}},{"name":"getAuthURL","in":"query","schema":{"type":"string"}},{"name":"getAuthURL","in":"query","schema":{"type":"string"}},{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"object"}}}}},"summary":"Authenticate","x-name":"getAuthURL","tags":["IAM"]},"post":{"description":"Returns a authentication redirect url.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"object"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Authorize","x-name":"authorize","tags":["IAM"]}},"/oauth/token":{"x-name":"routes.OAuthRoute","post":{"description":"Authenticate the token","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"object"}}}}},"summary":"Auth Token","x-name":"token","tags":["IAM"]}},"/organizations":{"x-schema":"models.Organization","x-name":"routes.OrganizationRoute","head":{"description":"Returns the count of organizations in the header as `Content-Length`.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"object"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Count Organizations","x-name":"count","tags":["IAM"]},"get":{"description":"Returns all Roles from the system that the user has access to","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/models.Organization"}}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find All Organizations","x-name":"findAll","tags":["IAM"]},"post":{"description":"Create a new Organization","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Organization"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"organization"}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Create Organization","x-name":"create","tags":["IAM"]},"put":{"description":"Update organizations in bulk","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Organization"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/models.Organization"}}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Bulk Update By ID","x-name":"updateBulk","tags":["IAM"]},"delete":{"description":"Removes all organization records from the datastore.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Truncate Organizations","x-name":"truncate","tags":["IAM"]}},"/organizations/:id":{"parameters":[{"$ref":"#/components/parameters/id"}],"x-schema":"models.Organization","x-name":"routes.OrganizationRoute","get":{"description":"Returns a single Organization from the system that the user has access to","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Organization"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find Organization By ID","x-name":"findById","tags":["IAM"]},"put":{"description":"Updates a single Organization","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Organization"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Organization"}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Update Organization By ID","x-name":"update","tags":["IAM"]},"delete":{"description":"Deletes the Organization","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Delete Organization By ID","x-name":"delete","tags":["IAM"]}},"/roles":{"x-schema":"models.Role","x-name":"routes.RoleRoute","delete":{"description":"Removes all role records from the data store.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Truncate Roles","x-name":"truncate","tags":["IAM"]},"head":{"description":"Returns the total count of the Roles in the header as `Content-Length`.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"object"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Count Roles","x-name":"count","tags":["IAM"]},"get":{"description":"Returns all Roles from the system that the user has access to","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/models.Role"}}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find All Roles","x-name":"findAll","tags":["IAM"]},"post":{"description":"Create a new Role","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Role"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/models.Role"},{"type":"array","items":{"$ref":"#/components/schemas/models.Role"}}]}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Create Role","x-name":"create","tags":["IAM"]},"put":{"description":"Update roles in bulk","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Role"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/models.Role"}}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Bulk Update By ID","x-name":"bulkUpdate","tags":["IAM"]}},"/roles/:id":{"parameters":[{"$ref":"#/components/parameters/id"}],"x-schema":"models.Role","x-name":"routes.RoleRoute","head":{"description":"Returns a single Role from the system that the user has access to","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Validate User Has Role By ID","x-name":"exists","tags":["IAM"]},"get":{"description":"Returns a single Role from the system that the user has access to","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Role"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"summary":"Find Role By ID","x-name":"findById","tags":["IAM"]},"put":{"description":"Updates a single Role","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Role"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Role"}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Update Role By ID","x-name":"update","tags":["IAM"]},"delete":{"description":"Deletes the Role","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Delete Role By ID","x-name":"delete","tags":["IAM"]}},"/roles/:id/:propertyName":{"parameters":[{"$ref":"#/components/parameters/id"},{"name":"propertyName","in":"path","required":true,"schema":{"type":"string"}}],"x-schema":"models.Role","x-name":"routes.RoleRoute","put":{"description":"Updates a single role's property with the given name.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Role"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Role"}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Update Role Property By ID & Property Name","x-name":"updateProperty","tags":["IAM"]}},"/users":{"x-schema":"models.User","x-name":"routes.UserRoute","delete":{"description":"Deletes all users from the service.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Truncate Users","x-name":"truncate","tags":["IAM"]},"head":{"description":"Returns the count of users based on the given criteria in the header as `Content-Length`.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"object"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Count Users","x-name":"count","tags":["IAM"]},"get":{"description":"Returns all users from the system that the user has access to based upon the given criteria.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/models.User"}}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find All Users","x-name":"findAll","tags":["IAM"]},"post":{"description":"Registers a new user to the service.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.User"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/models.NewUser"},{"type":"array","items":{"$ref":"#/components/schemas/models.NewUser"}}]}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"summary":"Create User","x-name":"create","tags":["IAM"]},"put":{"description":"Update users in bulk.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.User"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/models.User"}}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"summary":"Bulk Update Users By ID","x-name":"updateBulk","tags":["IAM"]}},"/users/:id":{"parameters":[{"$ref":"#/components/parameters/id"}],"x-schema":"models.User","x-name":"routes.UserRoute","head":{"description":"Checks that a single user exists.","responses":{"204":{"description":"No Content"},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"summary":"User Exist","x-name":"exists","tags":["IAM"]},"get":{"description":"Returns a single user from the system that the user has access to.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.User"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find user by ID","x-name":"findById","tags":["IAM"]},"put":{"description":"Updates a single user.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.User"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.User"}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Update User By ID","x-name":"update","tags":["IAM"]},"delete":{"description":"Deletes the user from the service.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Delete User By ID","x-name":"delete","tags":["IAM"]}},"/users/:id/recover":{"parameters":[{"$ref":"#/components/parameters/id"}],"x-schema":"models.User","x-name":"routes.UserRoute","get":{"description":"Resets a user's password and emails them a recovery email.","responses":{"204":{"description":"No Content"},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"summary":"Account Recovery By ID","x-name":"recover","tags":["IAM"]}},"/users/:id/send-verify/:type":{"parameters":[{"$ref":"#/components/parameters/id"},{"name":"type","in":"path","required":true,"schema":{"type":"string"}}],"x-schema":"models.User","x-name":"routes.UserRoute","get":{"description":"Requests account verification for a given type.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Send User Verification Code By ID & Type","x-name":"sendVerify","tags":["IAM"]}},"/users/:id/verify":{"parameters":[{"$ref":"#/components/parameters/id"}],"x-schema":"models.User","x-name":"routes.UserRoute","post":{"description":"Sets the `verified` flag on the user account with the given id to `true`.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.User"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.User"}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Verify Email By ID","x-name":"verify","tags":["IAM"]}},"/users/:id/verify/:type":{"parameters":[{"$ref":"#/components/parameters/id"},{"name":"type","in":"path","required":true,"schema":{"type":"string"}}],"x-schema":"models.User","x-name":"routes.UserRoute","post":{"description":"Sets the `verified` flag on the user account with the given id to `true`.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.User"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.User"}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Verify Type By ID & Type","x-name":"verifyType","tags":["IAM"]}},"/users/:id/welcome":{"parameters":[{"$ref":"#/components/parameters/id"}],"x-schema":"models.User","x-name":"routes.UserRoute","get":{"description":"Sends the user a welcome email.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Welcome Email By ID","x-name":"welcome","tags":["IAM"]}},"/users/:id/:propertyName":{"parameters":[{"$ref":"#/components/parameters/id"},{"name":"propertyName","in":"path","required":true,"schema":{"type":"string"}}],"x-schema":"models.User","x-name":"routes.UserRoute","put":{"description":"Updates a single user's property with the given name.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.User"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.User"}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Update User Property By ID & Property Name","x-name":"updateProperty","tags":["IAM"]}},"/users/:userId/secrets":{"parameters":[{"name":"userId","in":"path","required":true,"schema":{"type":"string"}}],"x-schema":"models.UserSecret","x-name":"routes.UserSecretRoute","head":{"description":"Returns the count of UserSecret objects for a given user in the header as `Content-Type`.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"object"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Count User Secrets","x-name":"count","tags":["IAM"]},"get":{"description":"Returns all secrets for a given user.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/models.UserSecret"}}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find User Secrets By User ID","x-name":"findAll","tags":["IAM"]},"post":{"description":"Create a new user secret.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.UserSecret"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.UserSecret"}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Create User Secret By User ID","x-name":"create","tags":["IAM"]}},"/users/:userId/secrets/password":{"parameters":[{"name":"userId","in":"path","required":true,"schema":{"type":"string"}}],"x-schema":"models.UserSecret","x-name":"routes.UserSecretRoute","put":{"description":"Sets the password for the user with the given unique identifier.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.UserSecret"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.UserSecret"}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Set User Password By User ID","x-name":"setPassword","tags":["IAM"]}},"/users/:userId/secrets/:id":{"parameters":[{"name":"userId","in":"path","required":true,"schema":{"type":"string"}},{"$ref":"#/components/parameters/id"}],"x-schema":"models.UserSecret","x-name":"routes.UserSecretRoute","get":{"description":"Returns a single UserSecret for a specified user.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.UserSecret"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find User Secret By User ID & ID","x-name":"findById","tags":["IAM"]},"put":{"description":"Updates a single User Secret","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.UserSecret"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.UserSecret"}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Update User Secret By User ID & ID","x-name":"update","tags":["IAM"]},"delete":{"description":"Deletes a user secret","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Delete User Secret By User ID & ID","x-name":"delete","tags":["IAM"]}},"/users/:userId/secrets/:id/enroll":{"parameters":[{"name":"userId","in":"path","required":true,"schema":{"type":"string"}},{"$ref":"#/components/parameters/id"}],"x-schema":"models.UserSecret","x-name":"routes.UserSecretRoute","put":{"description":"Confirms the enrollment of an MFA secret.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.UserSecret"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.UserSecret"}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Enroll MFA Secret By User ID & ID","x-name":"enroll","tags":["IAM"]}},"/admin/achievement-services/clear-cache":{"x-name":"AdminRoute","get":{"description":"Flushes the second-level cache so that subsequent requests will pull directly from the database.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"clearCache","tags":["Operations"]}},"/debug/logs/achievement-services":{"x-name":"AdminRoute","x-upgrade":true,"get":{"description":"Establishes a connection to the live log socket.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"logs","tags":["Logs"]}},"/admin/achievement-services/release-notes":{"x-name":"AdminRoute","get":{"description":"Returns the release notes file for the service.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"text/x-rst":{"schema":{"type":"string"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"text/x-rst":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"get","tags":["Release Notes"]}},"/admin/achievement-services/restart":{"x-name":"AdminRoute","get":{"description":"Immediately restarts the service.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"restart","tags":["Operations"]}},"/metrics/achievement-services":{"x-name":"MetricsRoute","get":{"description":"Returns all Prometheus metrics emitted by this service.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"text/plain; version=0.0.4; charset=utf-8":{"schema":{"type":"string"}}}}},"x-name":"getMetrics","tags":["Achievements"]}},"/metrics/achievement-services/:metric":{"parameters":[{"name":"metric","in":"path","required":true,"schema":{"type":"string"}}],"x-name":"MetricsRoute","get":{"description":"Returns the Prometheus metric emitted by this service with the given name.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"text/plain; version=0.0.4; charset=utf-8":{"schema":{"type":"string"}}}}},"x-name":"getSingleMetric","tags":["Achievements"]}},"/achievements":{"x-schema":"models.AchievementDefinition","x-name":"routes.AchievementDefinitionRoute","head":{"description":"Returns the count of Achievement objects that a given user has unlocked in the header as `Content-Length`.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"object"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"summary":"Count Achievement Definition","x-name":"count","tags":["Achievements"]},"delete":{"description":"Deletes all achievement definitions from the service.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Truncate Achievement Definitions","x-name":"truncate","tags":["Achievements"]},"get":{"description":"Returns all achievement definitions from the system that the user has access to based upon the given criteria.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/models.AchievementDefinition"}}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"summary":"Find All Achievement Definitions","x-name":"findAll","tags":["Achievements"]},"post":{"description":"Creates a new achievement definition.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.AchievementDefinition"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/models.AchievementDefinition"},{"type":"array","items":{"$ref":"#/components/schemas/models.AchievementDefinition"}}]}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Create Achievement Definition","x-name":"create","tags":["Achievements"]}},"/achievements/:id":{"parameters":[{"$ref":"#/components/parameters/id"}],"x-schema":"models.AchievementDefinition","x-name":"routes.AchievementDefinitionRoute","get":{"description":"Returns a single achievement definition from the system that the user has access to.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.AchievementDefinition"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"summary":"Find Achievement Definition By ID","x-name":"findById","tags":["Achievements"]},"put":{"description":"Updates a single achievement definition.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.AchievementDefinition"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.AchievementDefinition"}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Update Achievement Definition By ID","x-name":"update","tags":["Achievements"]},"delete":{"description":"Deletes the achievement definition from the service.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Delete Achievement Definition By ID","x-name":"delete","tags":["Achievements"]}},"/achievements/:id/unlock":{"parameters":[{"$ref":"#/components/parameters/id"}],"x-schema":"models.AchievementDefinition","x-name":"routes.AchievementDefinitionRoute","get":{"description":"Unlocks the achievement with the given id for the authenticated user.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Achievement"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Unlock Achievement By ID","x-name":"unlock","tags":["Achievements"]}},"/users/_userUid/achievements":{"parameters":[{"name":"userUid","in":"path","required":true,"schema":{"type":"string"}}],"x-schema":"models.Achievement","x-name":"routes.AchievementRoute","head":{"description":"Returns the count of Achievement objects that a given user has unlocked in the header as `Content-Length`.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Count Achievements","x-name":"count","tags":["Achievements"]},"get":{"description":"Returns all achievements that the given user has unlocked.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find All Achievements","x-name":"findAll","tags":["Achievements"]}},"/admin/backup-services/clear-cache":{"x-name":"AdminRoute","get":{"description":"Flushes the second-level cache so that subsequent requests will pull directly from the database.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"clearCache","tags":["Operations"]}},"/debug/logs/backup-services":{"x-name":"AdminRoute","x-upgrade":true,"get":{"description":"Establishes a connection to the live log socket.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"logs","tags":["Logs"]}},"/admin/backup-services/release-notes":{"x-name":"AdminRoute","get":{"description":"Returns the release notes file for the service.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"text/x-rst":{"schema":{"type":"string"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"text/x-rst":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"get","tags":["Release Notes"]}},"/admin/backup-services/restart":{"x-name":"AdminRoute","get":{"description":"Immediately restarts the service.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"restart","tags":["Operations"]}},"/metrics/backup-services":{"x-name":"MetricsRoute","get":{"description":"Returns all Prometheus metrics emitted by this service.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"text/plain; version=0.0.4; charset=utf-8":{"schema":{"type":"string"}}}}},"x-name":"getMetrics","tags":["Backups"]}},"/metrics/backup-services/:metric":{"parameters":[{"name":"metric","in":"path","required":true,"schema":{"type":"string"}}],"x-name":"MetricsRoute","get":{"description":"Returns the Prometheus metric emitted by this service with the given name.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"text/plain; version=0.0.4; charset=utf-8":{"schema":{"type":"string"}}}}},"x-name":"getSingleMetric","tags":["Backups"]}},"/admin/backups":{"x-schema":"models.Backup","x-name":"routes.BackupRoute","head":{"description":"Returns the total number of backups based upon the given criteria + in the header as `Content-Length`.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"object"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Count Backups","x-name":"count","tags":["Backups"]},"delete":{"description":"Deletes all backups from the service.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Truncate Backups","x-name":"truncate","tags":["Backups"]},"get":{"description":"Returns all backups from the system that the user has access to based upon the given criteria.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/models.Backup"}}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find All Backups","x-name":"findAll","tags":["Backups"]},"post":{"description":"Create a new backup","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Backup"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/models.Backup"},{"type":"array","items":{"$ref":"#/components/schemas/models.Backup"}}]}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Create Backup","x-name":"create","tags":["Backups"]}},"/admin/backups/_id":{"parameters":[{"$ref":"#/components/parameters/id"}],"x-schema":"models.Backup","x-name":"routes.BackupRoute","get":{"description":"Returns a single backup job from the system that the user has access to.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Backup"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find Backup By ID","x-name":"findById","tags":["Backups"]},"put":{"description":"Updates a single backup job.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Backup"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Backup"}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Update Backup By ID","x-name":"update","tags":["Backups"]},"delete":{"description":"Deletes the backup job from the service.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Delete Backup By ID","x-name":"delete","tags":["Backups"]}},"/admin/restores":{"x-schema":"models.Restore","x-name":"routes.RestoreRoute","head":{"description":"Returns the total number of restorations based upon the given criteria in the header as `Content-Length`.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"object"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Count Backup Restores","x-name":"count","tags":["Backups"]},"delete":{"description":"Deletes all restorations from the service.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Truncate Backup Restore","x-name":"truncate","tags":["Backups"]},"get":{"description":"Returns all restorations from the system that the user has access to based upon the given criteria.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/models.Restore"}}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find All Backup Restores","x-name":"findAll","tags":["Backups"]},"post":{"description":"Create a new restoration job.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Restore"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/models.Restore"},{"type":"array","items":{"$ref":"#/components/schemas/models.Restore"}}]}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Create Backup Restore","x-name":"create","tags":["Backups"]}},"/admin/restores/_id":{"parameters":[{"$ref":"#/components/parameters/id"}],"x-schema":"models.Restore","x-name":"routes.RestoreRoute","get":{"description":"Returns a single restoration job from the system that the user has access to.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Restore"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find Restore By ID","x-name":"findById","tags":["Backups"]},"delete":{"description":"Deletes the restoration job from the service.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Delete Backup Restore By ID","x-name":"delete","tags":["Backups"]}},"/admin/snapshots":{"x-schema":"models.Snapshot","x-name":"routes.SnapshotRoute","head":{"description":"Returns the total number of snapshots based upon the given criteria.NaN","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"object"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Count Snapshots","x-name":"count","tags":["Backups"]},"delete":{"description":"Deletes all snapshots from the datastore.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Truncate Snapshots","x-name":"truncate","tags":["Backups"]},"get":{"description":"Returns all snapshots from the system that the user has access to based upon the given criteria.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/models.Snapshot"}}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find All Snapshots","x-name":"findAll","tags":["Backups"]}},"/admin/snapshots/_id":{"parameters":[{"$ref":"#/components/parameters/id"}],"x-schema":"models.Snapshot","x-name":"routes.SnapshotRoute","get":{"description":"Returns a single snapshot from the system that the user has access to.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Snapshot"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find Snapshot By ID","x-name":"findById","tags":["Backups"]},"delete":{"description":"Deletes the snapshot from the service.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Delete Snapshot By ID","x-name":"delete","tags":["Backups"]}},"/admin/backup-locations":{"x-schema":"models.StorageLocation","x-name":"routes.StorageLocationRoute","head":{"description":"Returns the total number of storage locations based upon the given criteria in the header as `Content-Length`.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"object"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Count Storage Locations","x-name":"count","tags":["Backups"]},"delete":{"description":"Deletes all storage locations from the service.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Truncate Storage Locations","x-name":"truncate","tags":["Backups"]},"get":{"description":"Returns all storage locations from the system that the user has access to based upon the given criteria.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/models.StorageLocation"}}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find All Storage Locations","x-name":"findAll","tags":["Backups"]},"post":{"description":"Create a new storage location.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.StorageLocation"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/models.StorageLocation"},{"type":"array","items":{"$ref":"#/components/schemas/models.StorageLocation"}}]}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Create Storage Location","x-name":"create","tags":["Backups"]}},"/admin/backup-locations/_id":{"parameters":[{"$ref":"#/components/parameters/id"}],"x-schema":"models.StorageLocation","x-name":"routes.StorageLocationRoute","get":{"description":"Returns a single storage location from the system that the user has access to.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.StorageLocation"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find Storage Location By ID","x-name":"findById","tags":["Backups"]},"put":{"description":"Updates a single storage location.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.StorageLocation"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.StorageLocation"}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Update Storage Location By ID","x-name":"update","tags":["Backups"]},"delete":{"description":"Deletes the storage location from the service.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Delete Storage Location By ID","x-name":"delete","tags":["Backups"]}},"/admin/economy-services/clear-cache":{"x-name":"AdminRoute","get":{"description":"Flushes the second-level cache so that subsequent requests will pull directly from the database.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"clearCache","tags":["Operations"]}},"/debug/logs/economy-services":{"x-name":"AdminRoute","x-upgrade":true,"get":{"description":"Establishes a connection to the live log socket.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"logs","tags":["Logs"]}},"/admin/economy-services/release-notes":{"x-name":"AdminRoute","get":{"description":"Returns the release notes file for the service.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"text/x-rst":{"schema":{"type":"string"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"text/x-rst":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"get","tags":["Release Notes"]}},"/admin/economy-services/restart":{"x-name":"AdminRoute","get":{"description":"Immediately restarts the service.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"restart","tags":["Operations"]}},"/metrics/economy-services":{"x-name":"MetricsRoute","get":{"description":"Returns all Prometheus metrics emitted by this service.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"text/plain; version=0.0.4; charset=utf-8":{"schema":{"type":"string"}}}}},"x-name":"getMetrics","tags":["Economy"]}},"/metrics/economy-services/:metric":{"parameters":[{"name":"metric","in":"path","required":true,"schema":{"type":"string"}}],"x-name":"MetricsRoute","get":{"description":"Returns the Prometheus metric emitted by this service with the given name.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"text/plain; version=0.0.4; charset=utf-8":{"schema":{"type":"string"}}}}},"x-name":"getSingleMetric","tags":["Economy"]}},"/inventory":{"x-schema":"models.PersonaResource","x-name":"routes.PersonaResourceRoute","head":{"description":"Returns the total number of resources matching the given criteria in the header as `Content-Length`","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Count Persona Resources","x-name":"count","tags":["Economy"]},"get":{"description":"Returns all inventories from the system that the user has access to.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find All Persona Resources","x-name":"findAll","tags":["Economy"]}},"/personas/:personaUid/resources":{"parameters":[{"name":"personaUid","in":"path","required":true,"schema":{"type":"string"}}],"x-schema":"models.PersonaResource","x-name":"routes.PersonaResourceRoute","head":{"description":"Returns the total number of resources matching the given criteria in the header as `Content-Length`","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Count Persona Resources","x-name":"count","tags":["Economy"]},"get":{"description":"Returns all inventories from the system that the user has access to.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find All Persona Resources","x-name":"findAll","tags":["Economy"]}},"/inventory/:id":{"parameters":[{"$ref":"#/components/parameters/id"}],"x-schema":"models.PersonaResource","x-name":"routes.PersonaResourceRoute","get":{"description":"Returns a single inventory resource from the system that the user has access to","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find Persona Resources By ID","x-name":"findById","tags":["Economy"]}},"/personas/:personaUid/resources/:id":{"parameters":[{"name":"personaUid","in":"path","required":true,"schema":{"type":"string"}},{"$ref":"#/components/parameters/id"}],"x-schema":"models.PersonaResource","x-name":"routes.PersonaResourceRoute","get":{"description":"Returns a single inventory resource from the system that the user has access to","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find Persona Resources By ID","x-name":"findById","tags":["Economy"]}},"/resources":{"x-schema":"models.Resource","x-name":"routes.ResourceRoute","head":{"description":"Returns the total number of resources matching the given criteria in the header as `Content-Length`.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"object"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"summary":"Count Resource","x-name":"count","tags":["Economy"]},"get":{"description":"Returns all resources from the system that the user has access to.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/models.Resource"}}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"summary":"Find All Resources","x-name":"findAll","tags":["Economy"]},"post":{"description":"Create a new resource.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Resource"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/models.Resource"},{"type":"array","items":{"$ref":"#/components/schemas/models.Resource"}}]}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Create Resource","x-name":"create","tags":["Economy"]},"delete":{"description":"Deletes all resources from the service matching the given criteria.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Truncate Resource","x-name":"truncate","tags":["Economy"]}},"/resources/:id":{"parameters":[{"$ref":"#/components/parameters/id"}],"x-schema":"models.Resource","x-name":"routes.ResourceRoute","get":{"description":"Returns a single resource from the system that the user has access to","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Resource"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"summary":"Find Resource By ID","x-name":"findById","tags":["Economy"]},"put":{"description":"Updates a single resource","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Resource"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Resource"}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Update Resource By ID","x-name":"update","tags":["Economy"]},"delete":{"description":"Deletes the resource","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Delete Resource By ID","x-name":"delete","tags":["Economy"]}},"/transactions":{"x-schema":"models.Transaction","x-name":"routes.TransactionRoute","head":{"description":"Returns the total number of resources matching the given criteria in the header as `Content-Length`","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"object"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Count Transactions","x-name":"count","tags":["Economy"]},"get":{"description":"Returns all transactions from the system that the user has access to.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/models.Transaction"}}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find All Transactions","x-name":"findAll","tags":["Economy"]},"post":{"description":"Create a new transaction.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Transaction"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/models.Transaction"},{"type":"array","items":{"$ref":"#/components/schemas/models.Transaction"}}]}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Create Transaction","x-name":"create","tags":["Economy"]},"delete":{"description":"Deletes all resources from the service matching the given criteria.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Truncate Transaction","x-name":"truncate","tags":["Economy"]}},"/transactions/:id":{"parameters":[{"$ref":"#/components/parameters/id"}],"x-schema":"models.Transaction","x-name":"routes.TransactionRoute","get":{"description":"Returns a single transaction from the system that the user has access to","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Transaction"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find Transaction By ID","x-name":"findById","tags":["Economy"]},"put":{"description":"Updates a single resource","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Transaction"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Transaction"}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Update Transaction By ID","x-name":"update","tags":["Economy"]},"delete":{"description":"Deletes the resource","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Delete Transaction By ID","x-name":"delete","tags":["Economy"]}},"/admin/leaderboard-services/clear-cache":{"x-name":"AdminRoute","get":{"description":"Flushes the second-level cache so that subsequent requests will pull directly from the database.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"clearCache","tags":["Operations"]}},"/debug/logs/leaderboard-services":{"x-name":"AdminRoute","x-upgrade":true,"get":{"description":"Establishes a connection to the live log socket.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"logs","tags":["Logs"]}},"/admin/leaderboard-services/release-notes":{"x-name":"AdminRoute","get":{"description":"Returns the release notes file for the service.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"text/x-rst":{"schema":{"type":"string"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"text/x-rst":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"get","tags":["Release Notes"]}},"/admin/leaderboard-services/restart":{"x-name":"AdminRoute","get":{"description":"Immediately restarts the service.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"restart","tags":["Operations"]}},"/metrics/leaderboard-services":{"x-name":"MetricsRoute","get":{"description":"Returns all Prometheus metrics emitted by this service.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"text/plain; version=0.0.4; charset=utf-8":{"schema":{"type":"string"}}}}},"x-name":"getMetrics","tags":["Leaderboards"]}},"/metrics/leaderboard-services/:metric":{"parameters":[{"name":"metric","in":"path","required":true,"schema":{"type":"string"}}],"x-name":"MetricsRoute","get":{"description":"Returns the Prometheus metric emitted by this service with the given name.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"text/plain; version=0.0.4; charset=utf-8":{"schema":{"type":"string"}}}}},"x-name":"getSingleMetric","tags":["Leaderboards"]}},"/leaderboards/:leaderboardId/records":{"parameters":[{"name":"leaderboardId","in":"path","required":true,"schema":{"type":"string"}}],"x-schema":"models.LeaderboardRecord","x-name":"routes.LeaderboardRecordRoute","head":{"description":"Returns the count of records in a given leaderboard based on the given criteria in the header as `Content-Length`","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"object"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"summary":"Count Leaderboard Records","x-name":"count","tags":["Leaderboards"]},"get":{"description":"Returns all the records for a single leaderboard from the system that the user has access to based upon the given criteria.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/models.LeaderboardRecord"}}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"summary":"Find All Leaderboard Records By Leaderboard ID","x-name":"findAll","tags":["Leaderboards"]},"post":{"description":"Creates a new leaderboard record.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.LeaderboardRecord"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.LeaderboardRecord"}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Create Leaderboard Record","x-name":"create","tags":["Leaderboards"]},"delete":{"description":"Deletes all the leaderboard's records from the datastore.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Truncate Leaderboard Records","x-name":"truncate","tags":["Leaderboards"]}},"/leaderboards/:leaderboardId/records/near/:personaId":{"parameters":[{"name":"leaderboardId","in":"path","required":true,"schema":{"type":"string"}},{"name":"personaId","in":"path","required":true,"schema":{"type":"string"}}],"x-schema":"models.LeaderboardRecord","x-name":"routes.LeaderboardRecordRoute","get":{"description":"Retrieves the ranked records surrounding a specified persona's position on a given leaderboard. 'Nearby' refers to returning a range of records centered on the persona's rank. For example, if 100 records are requested and the persona is ranked 50, the function will return records ranked from 0 to 100. If the persona's rank is 200, it will return records ranked from 150 to 250.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/models.LeaderboardRecord"}}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"summary":"Find Persona ID Near Leaderboard ID Query","x-name":"findNear","tags":["Leaderboards"]}},"/leaderboards/:leaderboardId/records/top":{"parameters":[{"name":"leaderboardId","in":"path","required":true,"schema":{"type":"string"}}],"x-schema":"models.LeaderboardRecord","x-name":"routes.LeaderboardRecordRoute","get":{"description":"Returns the top 100 ranked records for a given leaderboard, unless otherwise specified via limit property, and page property.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/models.LeaderboardRecord"}}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"summary":"Find Top Leaderboard Records By Leaderboard ID","x-name":"findTop","tags":["Leaderboards"]}},"/leaderboards":{"x-schema":"models.Leaderboard","x-name":"routes.LeaderboardRoute","head":{"description":"Returns the count of leaderboard definitions based on the given criteria in the header as `Content-Length`","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"object"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"summary":"Count Leaderboards","x-name":"count","tags":["Leaderboards"]},"get":{"description":"Returns all leaderboard definitions from the system that the user has access to based upon the given criteria.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/models.Leaderboard"}}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"summary":"Find All Leaderboards","x-name":"findAll","tags":["Leaderboards"]},"post":{"description":"Creates a new leaderboard definition.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Leaderboard"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/models.Leaderboard"},{"type":"array","items":{"$ref":"#/components/schemas/models.Leaderboard"}}]}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Create Leaderboard","x-name":"create","tags":["Leaderboards"]},"delete":{"description":"Deletes all leaderboard definitions from the service.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Truncate Leaderboards","x-name":"truncate","tags":["Leaderboards"]}},"/leaderboards/:id":{"parameters":[{"$ref":"#/components/parameters/id"}],"x-schema":"models.Leaderboard","x-name":"routes.LeaderboardRoute","get":{"description":"Returns a single leaderboard definition from the system that the user has access to.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Leaderboard"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"summary":"Find Leaderboard By ID","x-name":"findById","tags":["Leaderboards"]},"put":{"description":"Updates a single leaderboard definition.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Leaderboard"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Leaderboard"}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Update Leaderboard By ID","x-name":"update","tags":["Leaderboards"]},"delete":{"description":"Deletes the leaderboard from the service.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Delete Leaderboard By ID","x-name":"delete","tags":["Leaderboards"]}},"/admin/matchmaking-services/clear-cache":{"x-name":"AdminRoute","get":{"description":"Flushes the second-level cache so that subsequent requests will pull directly from the database.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"clearCache","tags":["Operations"]}},"/debug/logs/matchmaking-services":{"x-name":"AdminRoute","x-upgrade":true,"get":{"description":"Establishes a connection to the live log socket.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"logs","tags":["Logs"]}},"/admin/matchmaking-services/release-notes":{"x-name":"AdminRoute","get":{"description":"Returns the release notes file for the service.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"text/x-rst":{"schema":{"type":"string"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"text/x-rst":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"get","tags":["Release Notes"]}},"/admin/matchmaking-services/restart":{"x-name":"AdminRoute","get":{"description":"Immediately restarts the service.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"restart","tags":["Operations"]}},"/metrics/matchmaking-services":{"x-name":"MetricsRoute","get":{"description":"Returns all Prometheus metrics emitted by this service.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"text/plain; version=0.0.4; charset=utf-8":{"schema":{"type":"string"}}}}},"x-name":"getMetrics","tags":["Matchmaking"]}},"/metrics/matchmaking-services/:metric":{"parameters":[{"name":"metric","in":"path","required":true,"schema":{"type":"string"}}],"x-name":"MetricsRoute","get":{"description":"Returns the Prometheus metric emitted by this service with the given name.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"text/plain; version=0.0.4; charset=utf-8":{"schema":{"type":"string"}}}}},"x-name":"getSingleMetric","tags":["Matchmaking"]}},"/tickets":{"x-schema":"models.Ticket","x-name":"routes.TicketRoute","head":{"description":"Returns the count of tickets in the header as `Content-Length`","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"object"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Count Tickets","x-name":"count","tags":["Matchmaking"]},"get":{"description":"Returns all tickets from the datastore that the user has access to.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/models.Ticket"}}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find All Tickets","x-name":"findAll","tags":["Matchmaking"]},"post":{"description":"Create a new ticket.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Ticket"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Ticket"}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Create Ticket","x-name":"create","tags":["Matchmaking"]},"delete":{"description":"Removes all tickets from the datastore.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Truncate Tickets","x-name":"truncate","tags":["Matchmaking"]}},"/tickets/:id":{"parameters":[{"$ref":"#/components/parameters/id"}],"x-schema":"models.Ticket","x-name":"routes.TicketRoute","get":{"description":"Returns a single ticket from the datastore that the user has access to","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Ticket"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find Ticket By ID","x-name":"findById","tags":["Matchmaking"]},"put":{"description":"Updates a single ticket","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Ticket"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Ticket"}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Update Ticket By ID","x-name":"update","tags":["Matchmaking"]},"delete":{"description":"Deletes the ticket","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Delete Ticket By ID","x-name":"delete","tags":["Matchmaking"]}},"/admin/notification-services/clear-cache":{"x-name":"AdminRoute","get":{"description":"Flushes the second-level cache so that subsequent requests will pull directly from the database.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"clearCache","tags":["Operations"]}},"/debug/logs/notification-services":{"x-name":"AdminRoute","x-upgrade":true,"get":{"description":"Establishes a connection to the live log socket.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"logs","tags":["Logs"]}},"/admin/notification-services/release-notes":{"x-name":"AdminRoute","get":{"description":"Returns the release notes file for the service.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"text/x-rst":{"schema":{"type":"string"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"text/x-rst":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"get","tags":["Release Notes"]}},"/admin/notification-services/restart":{"x-name":"AdminRoute","get":{"description":"Immediately restarts the service.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"restart","tags":["Operations"]}},"/metrics/notification-services":{"x-name":"MetricsRoute","get":{"description":"Returns all Prometheus metrics emitted by this service.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"text/plain; version=0.0.4; charset=utf-8":{"schema":{"type":"string"}}}}},"x-name":"getMetrics","tags":["Notifications"]}},"/metrics/notification-services/:metric":{"parameters":[{"name":"metric","in":"path","required":true,"schema":{"type":"string"}}],"x-name":"MetricsRoute","get":{"description":"Returns the Prometheus metric emitted by this service with the given name.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"text/plain; version=0.0.4; charset=utf-8":{"schema":{"type":"string"}}}}},"x-name":"getSingleMetric","tags":["Notifications"]}},"/notifications":{"x-name":"routes.NotificationRoute","x-upgrade":true,"get":{"description":"Establishes a WebSocket connection for forwarding push notification messages from the backend to connected clients. Also, automatically notifies social services with the user's online presence status on connect/disconnect.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Connect","x-name":"connect","tags":["Notifications"]}},"/admin/persona-services/clear-cache":{"x-name":"AdminRoute","get":{"description":"Flushes the second-level cache so that subsequent requests will pull directly from the database.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"clearCache","tags":["Operations"]}},"/debug/logs/persona-services":{"x-name":"AdminRoute","x-upgrade":true,"get":{"description":"Establishes a connection to the live log socket.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"logs","tags":["Logs"]}},"/admin/persona-services/release-notes":{"x-name":"AdminRoute","get":{"description":"Returns the release notes file for the service.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"text/x-rst":{"schema":{"type":"string"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"text/x-rst":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"get","tags":["Release Notes"]}},"/admin/persona-services/restart":{"x-name":"AdminRoute","get":{"description":"Immediately restarts the service.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"restart","tags":["Operations"]}},"/metrics/persona-services":{"x-name":"MetricsRoute","get":{"description":"Returns all Prometheus metrics emitted by this service.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"text/plain; version=0.0.4; charset=utf-8":{"schema":{"type":"string"}}}}},"x-name":"getMetrics","tags":["Persona"]}},"/metrics/persona-services/:metric":{"parameters":[{"name":"metric","in":"path","required":true,"schema":{"type":"string"}}],"x-name":"MetricsRoute","get":{"description":"Returns the Prometheus metric emitted by this service with the given name.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"text/plain; version=0.0.4; charset=utf-8":{"schema":{"type":"string"}}}}},"x-name":"getSingleMetric","tags":["Persona"]}},"/personas":{"x-schema":"models.Persona","x-name":"routes.PersonaRoute","head":{"description":"Returns the total count of personas in the header as `Content-Length`.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"object"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Count Personas","x-name":"count","tags":["Persona"]},"get":{"description":"Returns all personas from the system that the user has access to","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/models.Persona"}}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find All Personas","x-name":"findAll","tags":["Persona"]},"post":{"description":"Create a new persona.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Persona"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/models.Persona"},{"type":"array","items":{"$ref":"#/components/schemas/models.Persona"}}]}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Create Persona","x-name":"create","tags":["Persona"]},"put":{"description":"Update Personas in bulk.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Persona"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/models.Persona"}}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Bulk Update Personas By ID","x-name":"updateBulk","tags":["Persona"]}},"/personas/:id":{"parameters":[{"$ref":"#/components/parameters/id"}],"x-schema":"models.Persona","x-name":"routes.PersonaRoute","get":{"description":"Returns a single persona from the system that the user has access to","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Persona"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find Persona By ID","x-name":"findById","tags":["Persona"]},"put":{"description":"Updates a single persona","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Persona"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Persona"}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Update Persona By ID","x-name":"update","tags":["Persona"]},"delete":{"description":"Deletes the persona from the datastore.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Delete Persona By ID","x-name":"delete","tags":["Persona"]}},"/personastatsdefinitions":{"x-schema":"models.PersonaStatDefinition","x-name":"routes.PersonaStatDefinitionRoute","head":{"description":"Returns the total count of persona stat definitions in the header as `Content-Length`.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"object"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"summary":"Count Persona Stat Definitions","x-name":"count","tags":["Persona"]},"get":{"description":"Returns all persona stat definitions from the system that the user has access to","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/models.PersonaStatDefinition"}}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"summary":"Find All Persona Stat Definitions","x-name":"findAll","tags":["Persona"]},"put":{"description":"Update persona stat definitions in bulk.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.PersonaStatDefinition"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/models.PersonaStatDefinition"}}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Bulk Update Persona Stat Definitions By ID","x-name":"updateBulk","tags":["Persona"]},"post":{"description":"Creates a new persona stat definition.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.PersonaStatDefinition"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/models.PersonaStatDefinition"},{"type":"array","items":{"$ref":"#/components/schemas/models.PersonaStatDefinition"}}]}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Create Persona Stat Definition","x-name":"create","tags":["Persona"]}},"/personastatsdefinitions/:id":{"parameters":[{"$ref":"#/components/parameters/id"}],"x-schema":"models.PersonaStatDefinition","x-name":"routes.PersonaStatDefinitionRoute","get":{"description":"Returns a single persona stat definition from the system that the user has access to","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.PersonaStatDefinition"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"summary":"Find Persona Stat Definition By ID","x-name":"findById","tags":["Persona"]},"put":{"description":"Updates a single persona stat definition","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.PersonaStatDefinition"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.PersonaStatDefinition"}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Update Persona Stat Definition By ID","x-name":"update","tags":["Persona"]},"delete":{"description":"Deletes the persona stat definition","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Delete Persona Stat Definition By ID","x-name":"delete","tags":["Persona"]}},"/personastats":{"x-schema":"models.PersonaStat","x-name":"routes.PersonaStatRoute","head":{"description":"Returns the count of persona stats in the header as `Content-Length`","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"object"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Count Persona Stats","x-name":"count","tags":["Persona"]},"get":{"description":"Returns all persona stats from the datastore that the user has access to","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/models.PersonaStat"}}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find All Persona Stats","x-name":"findAll","tags":["Persona"]},"post":{"description":"Create a new stat for a persona","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.PersonaStat"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/models.PersonaStat"},{"type":"array","items":{"$ref":"#/components/schemas/models.PersonaStat"}}]}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Create Persona State","x-name":"create","tags":["Persona"]},"put":{"description":"Update persona stats in bulk.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.PersonaStat"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/models.PersonaStat"}}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Bulk Update Persona Stats","x-name":"updateBulk","tags":["Persona"]}},"/personastats/:id":{"parameters":[{"$ref":"#/components/parameters/id"}],"x-schema":"models.PersonaStat","x-name":"routes.PersonaStatRoute","get":{"description":"Returns a single persona stat from the datastore that the user has access to","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.PersonaStat"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find Persona Stat By ID","x-name":"findById","tags":["Persona"]},"put":{"description":"Updates a single persona stat","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.PersonaStat"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.PersonaStat"}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Update Persona Stat By ID","x-name":"update","tags":["Persona"]},"delete":{"description":"Deletes the persona stat","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Delete Persona Stat by ID","x-name":"delete","tags":["Persona"]}},"/personas/:personaUid/stats":{"parameters":[{"name":"personaUid","in":"path","required":true,"schema":{"type":"string"}}],"x-schema":"models.PersonaStat","x-name":"routes.PersonaStatRoute","get":{"description":"Returns all persona stats from the datastore that the user has access to","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/models.PersonaStat"}}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find All Persona Stats By Persona ID","x-name":"findAllByPersonaId","tags":["Persona"]},"delete":{"description":"Deletes all persona stats from the datastore for a given persona.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Truncate Persona Stat By Persona ID","x-name":"deleteAllByPersonaId","tags":["Persona"]}},"/personas/:personaUid/stats/:statUid":{"parameters":[{"name":"personaUid","in":"path","required":true,"schema":{"type":"string"}},{"name":"statUid","in":"path","required":true,"schema":{"type":"string"}}],"x-schema":"models.PersonaStat","x-name":"routes.PersonaStatRoute","get":{"description":"Returns a single persona stat from the system that the user has access to","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.PersonaStat"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Get Persona Stat By Persona ID & Stat ID","x-name":"findByStatIdAndPersonaId","tags":["Persona"]},"put":{"description":"Updates a single persona stat","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.PersonaStat"}}}},"responses":{"204":{"description":"No Content"},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Update Persona Stat By Persona ID & Stat ID","x-name":"updateByStatIdAndPersonaId","tags":["Persona"]},"delete":{"description":"Deletes the persona stat","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Delete Persona Stat By Persona ID & Stat ID","x-name":"deleteByStatIdAndPersonaId","tags":["Persona"]}},"/admin/progression-services/clear-cache":{"x-name":"AdminRoute","get":{"description":"Flushes the second-level cache so that subsequent requests will pull directly from the database.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"clearCache","tags":["Operations"]}},"/debug/logs/progression-services":{"x-name":"AdminRoute","x-upgrade":true,"get":{"description":"Establishes a connection to the live log socket.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"logs","tags":["Logs"]}},"/admin/progression-services/release-notes":{"x-name":"AdminRoute","get":{"description":"Returns the release notes file for the service.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"text/x-rst":{"schema":{"type":"string"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"text/x-rst":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"get","tags":["Release Notes"]}},"/admin/progression-services/restart":{"x-name":"AdminRoute","get":{"description":"Immediately restarts the service.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"restart","tags":["Operations"]}},"/metrics/progression-services":{"x-name":"MetricsRoute","get":{"description":"Returns all Prometheus metrics emitted by this service.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"text/plain; version=0.0.4; charset=utf-8":{"schema":{"type":"string"}}}}},"x-name":"getMetrics","tags":["Progression"]}},"/metrics/progression-services/:metric":{"parameters":[{"name":"metric","in":"path","required":true,"schema":{"type":"string"}}],"x-name":"MetricsRoute","get":{"description":"Returns the Prometheus metric emitted by this service with the given name.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"text/plain; version=0.0.4; charset=utf-8":{"schema":{"type":"string"}}}}},"x-name":"getSingleMetric","tags":["Progression"]}},"/archetypes":{"x-schema":"models.ArchetypeDefinition","x-name":"routes.ArchetypeDefinitionRoute","head":{"description":"Returns the count of archetype definitions based on the given criteria in the header as `Content-Length`.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"object"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"summary":"Count Archetype Definitions","x-name":"count","tags":["Progression"]},"get":{"description":"Returns all archetype definitions from the system that the persona has access to based upon the given criteria.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/models.ArchetypeDefinition"}}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"summary":"Find All Archetype Definitions","x-name":"findAll","tags":["Progression"]},"post":{"description":"Creates a new archetype definition.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.ArchetypeDefinition"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/models.ArchetypeDefinition"},{"type":"array","items":{"$ref":"#/components/schemas/models.ArchetypeDefinition"}}]}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Create Archetype Definition","x-name":"create","tags":["Progression"]},"delete":{"description":"Deletes all archetype definitions from the service.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Truncate Archetype Definitions","x-name":"truncate","tags":["Progression"]}},"/archetypes/:id":{"parameters":[{"$ref":"#/components/parameters/id"}],"x-schema":"models.ArchetypeDefinition","x-name":"routes.ArchetypeDefinitionRoute","get":{"description":"Returns a single archetype definition from the system that the persona has access to.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.ArchetypeDefinition"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"summary":"Find Archetype Definition By ID","x-name":"findById","tags":["Progression"]},"put":{"description":"Updates a single archetype definition.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.ArchetypeDefinition"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.ArchetypeDefinition"}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Update Archetype Definition By ID","x-name":"update","tags":["Progression"]},"delete":{"description":"Deletes the archetype from the service.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Delete Archetype Definition By ID","x-name":"delete","tags":["Progression"]}},"/personas/_personaUid/archetypes":{"parameters":[{"name":"personaUid","in":"path","required":true,"schema":{"type":"string"}}],"x-name":"routes.ArchetypeRoute","head":{"description":"Returns the count of archetypes that a persona has activated.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"object"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Count Archetypes","x-name":"count","tags":["Progression"]},"get":{"description":"Returns all archetypes that the given persona has activated.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/models.ArchetypeDefinition"}}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find All Archetypes","x-name":"findAll","tags":["Progression"]},"delete":{"description":"Stops tracking all progress for all archetypes and persona.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Stop Tracking All Archetypes By Persona ID","x-name":"deactivateAll","tags":["Progression"]}},"/personas/_personaUid/archetypes/count":{"parameters":[{"name":"personaUid","in":"path","required":true,"schema":{"type":"string"}}],"x-name":"routes.ArchetypeRoute","get":{"description":"Returns the total count of archetypes that a persona has activated in the given scope.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"number"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Count Active Archetypes By Persona ID","x-name":"countGet","tags":["Progression"]}},"/personas/_personaUid/archetypes/:archetypeUid":{"parameters":[{"name":"personaUid","in":"path","required":true,"schema":{"type":"string"}},{"name":"archetypeUid","in":"path","required":true,"schema":{"type":"string"}}],"x-name":"routes.ArchetypeRoute","get":{"description":"Returns the archetype definition.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.ArchetypeDefinition"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find Archetype By ID","x-name":"findById","tags":["Progression"]},"delete":{"description":"Stops tracking all progress for the given archetype and persona.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Deactivate Progress Tracking By Archetype ID & Persona ID","x-name":"deactivate","tags":["Progression"]},"put":{"description":"Toggles the activation state of all skill progress for a given archetype and persona.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Toggle Progress By Archetype ID & Persona ID","x-name":"toggle","tags":["Progression"]}},"/personas/_personaUid/archetypes/:archetypeUid/skills":{"parameters":[{"name":"personaUid","in":"path","required":true,"schema":{"type":"string"}},{"name":"archetypeUid","in":"path","required":true,"schema":{"type":"string"}}],"x-schema":"models.Skill","x-name":"routes.PersonaSkillRoute","head":{"description":"Returns the count of skills that a persona and archetype has in progress or has completed.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"object"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"summary":"Count In-Progress or Completed Persona Skills By Archetype ID","x-name":"countByArchetype","tags":["Progression"]},"get":{"description":"Returns progress data for all skills that the given persona and archetype has started or completed.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/models.Skill"}}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"summary":"Find All Persona Skill Progress By Archetype ID","x-name":"findAllByArchetype","tags":["Progression"]},"delete":{"description":"Resets all the persona's skill progress for the given archetype.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Truncate Persona Skill Progress History By Archetype ID","x-name":"truncateByArchetype","tags":["Progression"]}},"/personas/_personaUid/archetypes/:archetypeUid/skills/:skillUid":{"parameters":[{"name":"personaUid","in":"path","required":true,"schema":{"type":"string"}},{"name":"archetypeUid","in":"path","required":true,"schema":{"type":"string"}},{"name":"skillUid","in":"path","required":true,"schema":{"type":"string"}}],"x-schema":"models.Skill","x-name":"routes.PersonaSkillRoute","get":{"description":"Returns the progress for a given skill and persona and archetype.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Skill"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"summary":"Find Persona Skill Progress By Archetype ID & Skill ID","x-name":"findByIdAndArchetype","tags":["Progression"]},"delete":{"description":"Deletes the persona's progress for a given skill and archetype.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Delete Persona Skill Progress By Archetype ID and Skill ID","x-name":"delete","tags":["Progression"]}},"/personas/_personaUid/skills":{"parameters":[{"name":"personaUid","in":"path","required":true,"schema":{"type":"string"}}],"x-schema":"models.Skill","x-name":"routes.PersonaSkillRoute","head":{"description":"Returns the count of skills that a persona has in progress or has completed in the header as `Content-Length`.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"object"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"summary":"Count In-Progress Or Completed Persona Skills","x-name":"count","tags":["Progression"]},"get":{"description":"Returns progress data for all skills that the given persona has started or completed.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/models.Skill"}}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"summary":"Find All In-Progress Or Completed Persona Skills","x-name":"findAll","tags":["Progression"]}},"/personas/_personaUid/skills/:skillUid":{"parameters":[{"name":"personaUid","in":"path","required":true,"schema":{"type":"string"}},{"name":"skillUid","in":"path","required":true,"schema":{"type":"string"}}],"x-schema":"models.Skill","x-name":"routes.PersonaSkillRoute","get":{"description":"Returns progress data for all skills that the given persona has started or completed.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Skill"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"summary":"Find Persona Skill Progress By ID","x-name":"findById","tags":["Progression"]}},"/personas/_personaUid/skills/:skillUid/products/:productUid":{"parameters":[{"name":"personaUid","in":"path","required":true,"schema":{"type":"string"}},{"name":"skillUid","in":"path","required":true,"schema":{"type":"string"}},{"name":"productUid","in":"path","required":true,"schema":{"type":"string"}}],"x-schema":"models.Skill","x-name":"routes.PersonaSkillRoute","get":{"description":"Returns progress data for all skills that the given persona has started or completed.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Skill"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"summary":"Find Persona Skills By Persona ID & Product ID","x-name":"findByIdAndProduct","tags":["Progression"]}},"/skills":{"x-schema":"models.SkillDefinition","x-name":"routes.SkillDefinitionRoute","head":{"description":"Returns the count of skill definitions based on the given criteria in the header as `Content-Length`.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"object"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"summary":"Count Skill Definitions","x-name":"count","tags":["Progression"]},"get":{"description":"Returns all skill definitions from the system that the persona has access to based upon the given criteria.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/models.SkillDefinition"}}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"summary":"Find All Skill Definition","x-name":"findAll","tags":["Progression"]},"post":{"description":"Creates a new skill definition.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.SkillDefinition"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/models.SkillDefinition"},{"type":"array","items":{"$ref":"#/components/schemas/models.SkillDefinition"}}]}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Create Skill Definition","x-name":"create","tags":["Progression"]},"delete":{"description":"Deletes all skill definitions from the datastore.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Truncate Skill Definitions","x-name":"truncate","tags":["Progression"]}},"/skills/:id":{"parameters":[{"$ref":"#/components/parameters/id"}],"x-schema":"models.SkillDefinition","x-name":"routes.SkillDefinitionRoute","get":{"description":"Returns a single skill definition from the datastore that the persona has access to.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.SkillDefinition"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"summary":"Find Skill Definition By ID","x-name":"findById","tags":["Progression"]},"put":{"description":"Updates a single skill definition.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.SkillDefinition"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.SkillDefinition"}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Update Skill Definition By ID","x-name":"update","tags":["Progression"]},"delete":{"description":"Deletes the skill from the datastore.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Delete Skill Definition By ID","x-name":"delete","tags":["Progression"]}},"/skillsprogress":{"x-schema":"models.Skill","x-name":"routes.SkillRoute","head":{"description":"Returns the count of skill definitions based on the given criteria in the header as `Content-Length`.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"object"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Count Skills","x-name":"count","tags":["Progression"]},"get":{"description":"Returns all skill definitions from the system that the persona has access to based upon the given criteria.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/models.Skill"}}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find All Skills","x-name":"findAll","tags":["Progression"]}},"/skillsprogress/:id":{"parameters":[{"$ref":"#/components/parameters/id"}],"x-schema":"models.Skill","x-name":"routes.SkillRoute","get":{"description":"Returns a single skill definition from the system that the persona has access to.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Skill"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find Skill By ID","x-name":"findById","tags":["Progression"]}},"/admin/scripting-services/clear-cache":{"x-name":"AdminRoute","get":{"description":"Flushes the second-level cache so that subsequent requests will pull directly from the database.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"clearCache","tags":["Operations"]}},"/debug/logs/scripting-services":{"x-name":"AdminRoute","x-upgrade":true,"get":{"description":"Establishes a connection to the live log socket.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"logs","tags":["Logs"]}},"/admin/scripting-services/release-notes":{"x-name":"AdminRoute","get":{"description":"Returns the release notes file for the service.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"text/x-rst":{"schema":{"type":"string"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"text/x-rst":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"get","tags":["Release Notes"]}},"/admin/scripting-services/restart":{"x-name":"AdminRoute","get":{"description":"Immediately restarts the service.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"restart","tags":["Operations"]}},"/metrics/scripting-services":{"x-name":"MetricsRoute","get":{"description":"Returns all Prometheus metrics emitted by this service.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"text/plain; version=0.0.4; charset=utf-8":{"schema":{"type":"string"}}}}},"x-name":"getMetrics","tags":["Live Scripting"]}},"/metrics/scripting-services/:metric":{"parameters":[{"name":"metric","in":"path","required":true,"schema":{"type":"string"}}],"x-name":"MetricsRoute","get":{"description":"Returns the Prometheus metric emitted by this service with the given name.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"text/plain; version=0.0.4; charset=utf-8":{"schema":{"type":"string"}}}}},"x-name":"getSingleMetric","tags":["Live Scripting"]}},"/scripts/scripting-services/compile":{"x-schema":"ScriptMongo","x-name":"ScriptRouteMongo","post":{"description":"Attempts to compile the given script and check for errors.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ScriptMongo"}}}},"responses":{"204":{"description":"No Content"},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"x-name":"compile","tags":["Live Scripting"]}},"/scripts/scripting-services/dependencies":{"x-schema":"ScriptMongo","x-name":"ScriptRouteMongo","get":{"description":"Returns the set of NodeJS dependencies for the service needed to compile scripts.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"object"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"dependencies","tags":["Live Scripting"]}},"/scripts":{"x-schema":"ScriptMongo","x-name":"ScriptRouteMongo","head":{"description":"Returns the total number of scripts matching the given search criteria.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"204":{"description":"No Content"},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"x-name":"count","tags":["Live Scripting"]},"get":{"description":"Returns the collection of scripts matching the given search criteria.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ScriptMongo"}}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"x-name":"findAll","tags":["Live Scripting"]},"post":{"description":"Saves a new version of a given script.","requestBody":{"content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/ScriptMongo"},{"type":"array","items":{"$ref":"#/components/schemas/ScriptMongo"}}]}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/ScriptMongo"},{"type":"array","items":{"$ref":"#/components/schemas/ScriptMongo"}}]}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"x-name":"create","tags":["Live Scripting"]}},"/scripts/scripting-services/:id":{"parameters":[{"$ref":"#/components/parameters/id"}],"x-schema":"ScriptMongo","x-name":"ScriptRouteMongo","get":{"description":"Returns the script with the given unique identifier.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ScriptMongo"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"x-name":"findById","tags":["Live Scripting"]},"put":{"description":"Saves the modifications to an existing script with the given unique identifier.","parameters":[{"$ref":"#/components/parameters/version"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ScriptMongo"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ScriptMongo"}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"x-name":"update","tags":["Live Scripting"]},"delete":{"description":"Deletes the script with the given unique identifier and optional version. This is a soft-delete that will not destroy data. To permanently destroy the script call with query parameter `purge=true`.","parameters":[{"name":"delete","in":"query","schema":{"type":"string"}},{"$ref":"#/components/parameters/version"}],"responses":{"204":{"description":"No Content"},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"x-name":"delete","tags":["Live Scripting"]}},"/scripts/scripting-services/:id/publish":{"parameters":[{"$ref":"#/components/parameters/id"}],"x-schema":"ScriptMongo","x-name":"ScriptRouteMongo","get":{"description":"Publishes and activates the script with the given identifier and optional version. This has the effect of restarting the service to apply changes.","parameters":[{"$ref":"#/components/parameters/version"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ScriptMongo"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"x-name":"publish","tags":["Live Scripting"]}},"/admin/session-services/clear-cache":{"x-name":"AdminRoute","get":{"description":"Flushes the second-level cache so that subsequent requests will pull directly from the database.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"clearCache","tags":["Operations"]}},"/debug/logs/session-services":{"x-name":"AdminRoute","x-upgrade":true,"get":{"description":"Establishes a connection to the live log socket.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"logs","tags":["Logs"]}},"/admin/session-services/release-notes":{"x-name":"AdminRoute","get":{"description":"Returns the release notes file for the service.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"text/x-rst":{"schema":{"type":"string"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"text/x-rst":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"get","tags":["Release Notes"]}},"/admin/session-services/restart":{"x-name":"AdminRoute","get":{"description":"Immediately restarts the service.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"restart","tags":["Operations"]}},"/metrics/session-services":{"x-name":"MetricsRoute","get":{"description":"Returns all Prometheus metrics emitted by this service.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"text/plain; version=0.0.4; charset=utf-8":{"schema":{"type":"string"}}}}},"x-name":"getMetrics","tags":["Sessions"]}},"/metrics/session-services/:metric":{"parameters":[{"name":"metric","in":"path","required":true,"schema":{"type":"string"}}],"x-name":"MetricsRoute","get":{"description":"Returns the Prometheus metric emitted by this service with the given name.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"text/plain; version=0.0.4; charset=utf-8":{"schema":{"type":"string"}}}}},"x-name":"getSingleMetric","tags":["Sessions"]}},"/sessions":{"x-schema":"models.Session","x-name":"routes.SessionRoute","head":{"description":"Returns the total count of sessions in the datastore in the header as `Content-Length`.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"object"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Count Sessions","x-name":"count","tags":["Sessions"]},"get":{"description":"Returns all sessions from the system that the user has access to","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/models.Session"}}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find All Sessions","x-name":"findAll","tags":["Sessions"]},"post":{"description":"Create a new session.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Session"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Session"}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Create Session","x-name":"create","tags":["Sessions"]},"delete":{"description":"Removes all sessions from the datastore.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Truncate Sessions","x-name":"truncate","tags":["Sessions"]}},"/sessions/:id":{"parameters":[{"$ref":"#/components/parameters/id"}],"x-schema":"models.Session","x-name":"routes.SessionRoute","get":{"description":"Returns a single session from the system that the user has access to","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Session"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find Session By ID","x-name":"findById","tags":["Sessions"]},"put":{"description":"Updates a single session","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Session"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Session"}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Update Session By ID","x-name":"update","tags":["Sessions"]},"delete":{"description":"Deletes the session","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Delete Session By ID","x-name":"delete","tags":["Sessions"]}},"/sessions/:id/data":{"parameters":[{"$ref":"#/components/parameters/id"}],"x-schema":"models.Session","x-name":"routes.SessionRoute","put":{"description":"Updates a session's data property.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Session"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Session"}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Update Session By ID","x-name":"updateData","tags":["Sessions"]}},"/sessions/:id/join":{"parameters":[{"$ref":"#/components/parameters/id"}],"x-schema":"models.Session","x-name":"routes.SessionRoute","get":{"description":"Adds the authenticated user to the session with the specified identifier.","parameters":[{"name":"join","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Session"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Join Session","x-name":"join","tags":["Sessions"]}},"/sessions/:id/leave":{"parameters":[{"$ref":"#/components/parameters/id"}],"x-schema":"models.Session","x-name":"routes.SessionRoute","get":{"description":"Removes the authenticated user from the session with the specified identifier.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Leave Session By ID","x-name":"leave","tags":["Sessions"]}},"/sessions/:id/assign-server":{"parameters":[{"$ref":"#/components/parameters/id"}],"x-schema":"models.Session","x-name":"routes.SessionRoute","post":{"description":"Request a server instance to be assigned to the session with the session id.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Session"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Session"}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Assign Server Instance To Session By ID","x-name":"assignServerInstance","tags":["Sessions"]}},"/sessions/:id/connect":{"parameters":[{"$ref":"#/components/parameters/id"}],"x-schema":"models.Session","x-name":"routes.SessionRoute","x-upgrade":true,"get":{"parameters":[{"name":"connect","in":"query","schema":{"type":"string"}}],"responses":{"204":{"description":"No Content"},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"x-name":"connect","tags":["Sessions"]}},"/admin/social-services/clear-cache":{"x-name":"AdminRoute","get":{"description":"Flushes the second-level cache so that subsequent requests will pull directly from the database.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"clearCache","tags":["Operations"]}},"/debug/logs/social-services":{"x-name":"AdminRoute","x-upgrade":true,"get":{"description":"Establishes a connection to the live log socket.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"logs","tags":["Logs"]}},"/admin/social-services/release-notes":{"x-name":"AdminRoute","get":{"description":"Returns the release notes file for the service.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"text/x-rst":{"schema":{"type":"string"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"text/x-rst":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"get","tags":["Release Notes"]}},"/admin/social-services/restart":{"x-name":"AdminRoute","get":{"description":"Immediately restarts the service.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"restart","tags":["Operations"]}},"/metrics/social-services":{"x-name":"MetricsRoute","get":{"description":"Returns all Prometheus metrics emitted by this service.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"text/plain; version=0.0.4; charset=utf-8":{"schema":{"type":"string"}}}}},"x-name":"getMetrics","tags":["Social"]}},"/metrics/social-services/:metric":{"parameters":[{"name":"metric","in":"path","required":true,"schema":{"type":"string"}}],"x-name":"MetricsRoute","get":{"description":"Returns the Prometheus metric emitted by this service with the given name.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"text/plain; version=0.0.4; charset=utf-8":{"schema":{"type":"string"}}}}},"x-name":"getSingleMetric","tags":["Social"]}},"/messages":{"x-schema":"models.Message","x-name":"routes.MessageRoute","head":{"description":"Returns the count of messages in the header as `Content-Length`","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"object"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Count Messages","x-name":"count","tags":["Social"]},"get":{"description":"Returns all messages from the system that the user has access to","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/models.Message"}}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find All Messages","x-name":"findAll","tags":["Social"]},"post":{"description":"Send a new message to a given receiver ID.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Message"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Message"}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Send New Message","x-name":"create","tags":["Social"]}},"/messages/:id":{"parameters":[{"$ref":"#/components/parameters/id"}],"x-schema":"models.Message","x-name":"routes.MessageRoute","get":{"description":"Returns a single message from the system that the user has access to","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Message"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find Message By ID","x-name":"findById","tags":["Social"]},"delete":{"description":"Deletes the message","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Delete Message By ID","x-name":"delete","tags":["Social"]}},"/messages/:id/read":{"parameters":[{"$ref":"#/components/parameters/id"}],"x-schema":"models.Message","x-name":"routes.MessageRoute","delete":{"description":"Marks the message with the given id as having been read.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Mark Message Read By ID","x-name":"markRead","tags":["Social"]}},"/users/:userUid/messages/inbox":{"parameters":[{"name":"userUid","in":"path","required":true,"schema":{"type":"string"}}],"x-schema":"models.Message","x-name":"routes.MessageRoute","get":{"description":"Returns all of the messages from the system that have been sent to the given user.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/models.Message"}}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Message Inbox","x-name":"findInboxByUserUid","tags":["Social"]}},"/users/:userUid/messages/sent":{"parameters":[{"name":"userUid","in":"path","required":true,"schema":{"type":"string"}}],"x-schema":"models.Message","x-name":"routes.MessageRoute","get":{"description":"Returns all of the messages from the system that have been sent by the given user.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/models.Message"}}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find Message Sent By User ID","x-name":"findSentByUserUid","tags":["Social"]}},"/users/:userUid/messages/:id":{"parameters":[{"name":"userUid","in":"path","required":true,"schema":{"type":"string"}},{"$ref":"#/components/parameters/id"}],"x-schema":"models.Message","x-name":"routes.MessageRoute","get":{"description":"Returns the messages from the system with the given id that was sent to the given user.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Message"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find Message By Message ID & User ID","x-name":"findByIdAndUserUid","tags":["Social"]},"delete":{"description":"Deletes the message with the given id that sent to the given user.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Delete Message By Message ID & User ID","x-name":"deleteByIdAndUserUid","tags":["Social"]}},"/users/:userUid/messages/:id/read":{"parameters":[{"name":"userUid","in":"path","required":true,"schema":{"type":"string"}},{"$ref":"#/components/parameters/id"}],"x-schema":"models.Message","x-name":"routes.MessageRoute","delete":{"description":"Marks the message with the given id as having been read.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Mark Message Read By ID","x-name":"markReadByIdAndUserId","tags":["Social"]}},"/users/:userUid/chat":{"parameters":[{"name":"userUid","in":"path","required":true,"schema":{"type":"string"}}],"x-name":"routes.PrivateMessageRoute","post":{"description":"Create a new private message.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Send Private Message","x-name":"create","tags":["Social"]}},"/profiles":{"x-schema":"models.Profile","x-name":"routes.ProfileRoute","head":{"description":"Returns the count of profiles in the header as `Content-Length`.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"object"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Count Profile","x-name":"count","tags":["Social"]},"get":{"description":"Returns all profiles from the system that the user has access to","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/models.Profile"}}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find All Profiles","x-name":"findAll","tags":["Social"]},"post":{"description":"Create a new profile.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Profile"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Profile"}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Create Profile","x-name":"create","tags":["Social"]}},"/profiles/:id":{"parameters":[{"$ref":"#/components/parameters/id"}],"x-schema":"models.Profile","x-name":"routes.ProfileRoute","get":{"description":"Returns a single profile from the system that the user has access to","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Profile"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find Profile By ID","x-name":"findById","tags":["Social"]},"put":{"description":"Updates a single profile","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Profile"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Profile"}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Update Profile By ID","x-name":"update","tags":["Social"]},"delete":{"description":"Deletes the profile","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Delete Profile By ID","x-name":"delete","tags":["Social"]}},"/profiles/:id/presence":{"parameters":[{"$ref":"#/components/parameters/id"}],"x-schema":"models.Profile","x-name":"routes.ProfileRoute","get":{"description":"Returns the profile presence data for the given user.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"object"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Get Profile By ID","x-name":"getUserPresence","tags":["Social"]},"put":{"description":"Sets the profile presence data for the given user.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Profile"}}}},"responses":{"204":{"description":"No Content"},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Set Profile By ID","x-name":"setUserPresence","tags":["Social"]}},"/users/:userUid/profile":{"parameters":[{"name":"userUid","in":"path","required":true,"schema":{"type":"string"}}],"x-schema":"models.Profile","x-name":"routes.ProfileRoute","get":{"description":"Returns the profile from the system for the given user.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Profile"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find Profile By User ID","x-name":"findByUserUid","tags":["Social"]},"put":{"description":"Creates or updates the profile for the given user.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Profile"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Profile"}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Create or Update Profile By User ID","x-name":"updateByUserUid","tags":["Social"]},"delete":{"description":"Deletes the profile for the given user.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Delete Profile By User ID","x-name":"deleteByUserUid","tags":["Social"]}},"/users/:userUid/profile/presence":{"parameters":[{"name":"userUid","in":"path","required":true,"schema":{"type":"string"}}],"x-schema":"models.Profile","x-name":"routes.ProfileRoute","get":{"description":"Returns the profile presence data for the given user.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"object"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Get Profile Presence By User ID","x-name":"getUserPresenceByUserId","tags":["Social"]},"put":{"description":"Sets the profile presence data for the given user.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Profile"}}}},"responses":{"204":{"description":"No Content"},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Set Profile Presence By User ID","x-name":"setUserPresenceByUserId","tags":["Social"]}},"/userlinks":{"x-schema":"models.UserLink","x-name":"routes.UserLinkRoute","head":{"description":"Returns the count of links in the header as `Content-Length`.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"object"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Count User Links","x-name":"count","tags":["Social"]},"get":{"description":"Returns all links from the system that the user has access to","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/models.UserLink"}}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find All User Links","x-name":"findAll","tags":["Social"]},"post":{"description":"Creates a new link or updates an existing link.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.UserLink"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.UserLink"}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Create Or Update User Link","x-name":"createOrUpdate","tags":["Social"]}},"/userlinks/:id":{"parameters":[{"$ref":"#/components/parameters/id"}],"x-schema":"models.UserLink","x-name":"routes.UserLinkRoute","get":{"description":"Returns a single link from the system that the user has access to","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.UserLink"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find User Link By ID","x-name":"findById","tags":["Social"]},"put":{"description":"Updates a single link","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.UserLink"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.UserLink"}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Update User Link By ID","x-name":"update","tags":["Social"]},"delete":{"description":"Deletes the link","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Delete User Link By ID","x-name":"delete","tags":["Social"]}},"/users/:userUid/links":{"parameters":[{"name":"userUid","in":"path","required":true,"schema":{"type":"string"}}],"x-schema":"models.UserLink","x-name":"routes.UserLinkRoute","get":{"description":"Returns all links associated with a given user.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/models.UserLink"}}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find User Link By User ID","x-name":"findByUserUid","tags":["Social"]},"post":{"description":"Creates a new link for a given user.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.UserLink"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.UserLink"}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Create New User Link By User ID","x-name":"createByUserUid","tags":["Social"]},"put":{"description":"Sets the list of all links for a given user.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.UserLink"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/models.UserLink"}}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Set User Links By User ID","x-name":"setByUserUid","tags":["Social"]},"delete":{"description":"Deletes all links for a given user.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Truncate User Links By User ID","x-name":"deleteByUserUid","tags":["Social"]}},"/users/:userUid/links/:id":{"parameters":[{"name":"userUid","in":"path","required":true,"schema":{"type":"string"}},{"$ref":"#/components/parameters/id"}],"x-schema":"models.UserLink","x-name":"routes.UserLinkRoute","get":{"description":"Returns a single link for the given user and id.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.UserLink"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find User Link By User ID & Link ID","x-name":"findByIdAndUserUid","tags":["Social"]},"put":{"description":"Updates a single link for a given user and id.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.UserLink"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.UserLink"}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Update User Link By User ID & Link ID","x-name":"updateByIdAndUserUid","tags":["Social"]},"delete":{"description":"Deletes the link for the given user and id.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Delete User Link By User ID & Link ID","x-name":"deleteByIdAndUserUid","tags":["Social"]}},"/admin/telemetry-services/clear-cache":{"x-name":"AdminRoute","get":{"description":"Flushes the second-level cache so that subsequent requests will pull directly from the database.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"clearCache","tags":["Operations"]}},"/debug/logs/telemetry-services":{"x-name":"AdminRoute","x-upgrade":true,"get":{"description":"Establishes a connection to the live log socket.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"logs","tags":["Logs"]}},"/admin/telemetry-services/release-notes":{"x-name":"AdminRoute","get":{"description":"Returns the release notes file for the service.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"text/x-rst":{"schema":{"type":"string"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"text/x-rst":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"get","tags":["Release Notes"]}},"/admin/telemetry-services/restart":{"x-name":"AdminRoute","get":{"description":"Immediately restarts the service.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"restart","tags":["Operations"]}},"/metrics/telemetry-services":{"x-name":"MetricsRoute","get":{"description":"Returns all Prometheus metrics emitted by this service.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"text/plain; version=0.0.4; charset=utf-8":{"schema":{"type":"string"}}}}},"x-name":"getMetrics","tags":["Telemetry"]}},"/metrics/telemetry-services/:metric":{"parameters":[{"name":"metric","in":"path","required":true,"schema":{"type":"string"}}],"x-name":"MetricsRoute","get":{"description":"Returns the Prometheus metric emitted by this service with the given name.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"text/plain; version=0.0.4; charset=utf-8":{"schema":{"type":"string"}}}}},"x-name":"getSingleMetric","tags":["Telemetry"]}},"/events":{"x-schema":"models.Event","x-name":"routes.EventRoute","head":{"description":"Returns the count of telemetry events in the datastore based on the given criteria in the header as `Content-Length`.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"object"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Count Telemetry Events","x-name":"count","tags":["Telemetry"]},"get":{"description":"Returns all events from the system that the user has access to based upon the given criteria.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/models.Event"}}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find All Telemetry Events","x-name":"findAll","tags":["Telemetry"]},"post":{"description":"Creates a new event record in the database.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Event"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Event"}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Create Telemetry Event","x-name":"create","tags":["Telemetry"]},"delete":{"description":"Removes all role records from the datastore.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Truncate Telemetry Events","x-name":"truncate","tags":["Telemetry"]}},"/events/:id":{"parameters":[{"$ref":"#/components/parameters/id"}],"x-schema":"models.Event","x-name":"routes.EventRoute","get":{"description":"Returns a single event from the system that the user has access to.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Event"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find Telemetry Event By ID","x-name":"findById","tags":["Telemetry"]}},"/heatmap":{"x-name":"routes.HeatmapRoute","get":{"description":"Returns telemetry event heatmap data from the datastore.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"object"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Get Telemetry Event Heatmap Data","x-name":"get","tags":["Telemetry"]}},"/allstatus":{"x-name":"routes.StatusRoute","head":{"description":"Returns the count of healthy XBE services running in the cluster.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"object"}}}}},"x-name":"countAllStatus"},"get":{"description":"Returns the health status of all XBE services running in the cluster.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"object"}}}}},"x-name":"getAllStatus"}},"/allstatus/:name":{"parameters":[{"name":"name","in":"path","required":true,"schema":{"type":"string"}}],"x-name":"routes.StatusRoute","head":{"description":"Returns the health status of one XBE services running in the cluster.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"object"}}}}},"x-name":"countServiceStatus"},"get":{"description":"Returns the health status of all XBE services running in the cluster.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"object"}}}}},"x-name":"getServiceStatus"}},"/admin/asset-services/clear-cache":{"x-name":"AdminRoute","get":{"description":"Flushes the second-level cache so that subsequent requests will pull directly from the database.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"clearCache","tags":["Operations"]}},"/debug/logs/asset-services":{"x-name":"AdminRoute","x-upgrade":true,"get":{"description":"Establishes a connection to the live log socket.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"logs","tags":["Logs"]}},"/admin/asset-services/release-notes":{"x-name":"AdminRoute","get":{"description":"Returns the release notes file for the service.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"text/x-rst":{"schema":{"type":"string"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"text/x-rst":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"get","tags":["Release Notes"]}},"/admin/asset-services/restart":{"x-name":"AdminRoute","get":{"description":"Immediately restarts the service.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"restart","tags":["Operations"]}},"/metrics/asset-services":{"x-name":"MetricsRoute","get":{"description":"Returns all Prometheus metrics emitted by this service.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"text/plain; version=0.0.4; charset=utf-8":{"schema":{"type":"string"}}}}},"x-name":"getMetrics","tags":["Assets"]}},"/metrics/asset-services/:metric":{"parameters":[{"name":"metric","in":"path","required":true,"schema":{"type":"string"}}],"x-name":"MetricsRoute","get":{"description":"Returns the Prometheus metric emitted by this service with the given name.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"text/plain; version=0.0.4; charset=utf-8":{"schema":{"type":"string"}}}}},"x-name":"getSingleMetric","tags":["Assets"]}},"/assets":{"x-schema":"models.Asset","x-name":"routes.AssetRoute","head":{"description":"Returns the total number of assets matching the given criteria in the header as `Content-Length`.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"object"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Count Assets","x-name":"count","tags":["Assets"]},"get":{"description":"Returns all assets from the system that the user has access to matching the given criteria.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/models.Asset"}}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find All Assets","x-name":"findAll","tags":["Assets"]},"post":{"description":"Uploads one or more files to the service.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Asset"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/models.Asset"},{"type":"array","items":{"$ref":"#/components/schemas/models.Asset"}}]}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Upload Asset","x-name":"create","tags":["Assets"]},"delete":{"description":"Deletes all assets from the service matching the given criteria.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Truncate Assets","x-name":"truncate","tags":["Assets"]}},"/assets/:id":{"parameters":[{"$ref":"#/components/parameters/id"}],"x-schema":"models.Asset","x-name":"routes.AssetRoute","get":{"description":"Returns a single asset from the system that the user has access to.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"object"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find Assets By ID","x-name":"findById","tags":["Assets"]},"delete":{"description":"Deletes the asset from the service.","parameters":[{"name":"delete","in":"query","schema":{"type":"string"}},{"$ref":"#/components/parameters/version"}],"responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Delete Asset By ID","x-name":"delete","tags":["Assets"]}},"/admin/asset-locations":{"x-schema":"models.StorageLocation","x-name":"routes.StorageLocationRoute","head":{"description":"Returns the total number of storage locations matching the given criteria in the header as `Content-Length`.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"object"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Count Asset Storage Locations","x-name":"count","tags":["Assets"]},"get":{"description":"Returns all storage locations from the datastore that the user has access to matching the given criteria.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/models.StorageLocation"}}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find All Asset Storage Locations","x-name":"findAll","tags":["Assets"]},"post":{"description":"Creates one or more new Storage Location objects.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.StorageLocation"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/models.StorageLocation"},{"type":"array","items":{"$ref":"#/components/schemas/models.StorageLocation"}}]}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Create Asset Storage Location","x-name":"create","tags":["Assets"]},"put":{"description":"Updates one or more existing Storage Location objects.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.StorageLocation"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.StorageLocation"}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Bulk Update Asset Storage Locations By ID","x-name":"bulkUpdate","tags":["Assets"]},"delete":{"description":"Deletes all storage locations from the datastore matching the given criteria.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Truncate Asset Storage Locations","x-name":"truncate","tags":["Assets"]}},"/admin/asset-locations/_id":{"parameters":[{"$ref":"#/components/parameters/id"}],"x-schema":"models.StorageLocation","x-name":"routes.StorageLocationRoute","get":{"description":"Returns a single storage location from the datastore that the user has access to.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.StorageLocation"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find Asset Storage Location By ID","x-name":"findById","tags":["Assets"]},"put":{"description":"Updates a single storage location.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.StorageLocation"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.StorageLocation"}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Update Asset Storage Location By ID","x-name":"update","tags":["Assets"]},"delete":{"description":"Deletes the storage location from the datastore.","parameters":[{"name":"delete","in":"query","schema":{"type":"string"}},{"$ref":"#/components/parameters/version"}],"responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Delete Asset Storage Location By ID","x-name":"delete","tags":["Assets"]}},"/admin/quest-services/clear-cache":{"x-name":"AdminRoute","get":{"description":"Flushes the second-level cache so that subsequent requests will pull directly from the database.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"clearCache","tags":["Operations"]}},"/debug/logs/quest-services":{"x-name":"AdminRoute","x-upgrade":true,"get":{"description":"Establishes a connection to the live log socket.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"logs","tags":["Logs"]}},"/admin/quest-services/release-notes":{"x-name":"AdminRoute","get":{"description":"Returns the release notes file for the service.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"text/x-rst":{"schema":{"type":"string"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"text/x-rst":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"get","tags":["Release Notes"]}},"/admin/quest-services/restart":{"x-name":"AdminRoute","get":{"description":"Immediately restarts the service.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"restart","tags":["Operations"]}},"/metrics/quest-services":{"x-name":"MetricsRoute","get":{"description":"Returns all Prometheus metrics emitted by this service.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"text/plain; version=0.0.4; charset=utf-8":{"schema":{"type":"string"}}}}},"x-name":"getMetrics","tags":["Quests"]}},"/metrics/quest-services/:metric":{"parameters":[{"name":"metric","in":"path","required":true,"schema":{"type":"string"}}],"x-name":"MetricsRoute","get":{"description":"Returns the Prometheus metric emitted by this service with the given name.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"text/plain; version=0.0.4; charset=utf-8":{"schema":{"type":"string"}}}}},"x-name":"getSingleMetric","tags":["Quests"]}},"/quests":{"x-schema":"models.QuestDefinition","x-name":"routes.QuestDefinitionRoute","head":{"description":"Returns the count of quest definitions based on the given criteria in the header as `Content-Length`.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"object"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"summary":"Count Quest Definitions","x-name":"count","tags":["Quests"]},"get":{"description":"Returns all quest definitions from the datastore that the persona has access to based upon the given criteria.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/models.QuestDefinition"}}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"summary":"Find All Quest Definitions","x-name":"findAll","tags":["Quests"]},"post":{"description":"Creates a new quest definition.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.QuestDefinition"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/models.QuestDefinition"},{"type":"array","items":{"$ref":"#/components/schemas/models.QuestDefinition"}}]}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Create Quest Definition","x-name":"create","tags":["Quests"]},"delete":{"description":"Deletes all quest definitions from the datastore.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Truncate Quest Definitions","x-name":"truncate","tags":["Quests"]}},"/quests/:id":{"parameters":[{"$ref":"#/components/parameters/id"}],"x-schema":"models.QuestDefinition","x-name":"routes.QuestDefinitionRoute","get":{"description":"Returns a single quest definition from the datastore that the persona has access to.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.QuestDefinition"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"summary":"Find Quest Definition By ID","x-name":"findById","tags":["Quests"]},"put":{"description":"Updates a single quest definition.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.QuestDefinition"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.QuestDefinition"}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Update Quest Definition By ID","x-name":"update","tags":["Quests"]},"delete":{"description":"Deletes the quest from the datastore.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Delete Quest Definition By ID","x-name":"delete","tags":["Quests"]}},"/personas/_personaUid/quests":{"parameters":[{"name":"personaUid","in":"path","required":true,"schema":{"type":"string"}}],"x-schema":"models.Quest","x-name":"routes.QuestRoute","head":{"description":"Returns the count of quests that a persona has in progress or has completed in the header as `Content-Length`.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"object"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Count Quests","x-name":"count","tags":["Quests"]},"get":{"description":"Returns progress data for all quests that the given persona has started or completed.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/models.Quest"}}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find All Persona Quests","x-name":"findAllForPersona","tags":["Quests"]},"post":{"description":"Starts progress of the given quest for the specified persona.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Quest"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/models.Quest"},{"type":"array","items":{"$ref":"#/components/schemas/models.Quest"}}]}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Create Quest By Persona ID","x-name":"create","tags":["Quests"]},"delete":{"description":"Deletes all the persona's quest progress.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Truncate Quests By Persona ID","x-name":"truncate","tags":["Quests"]}},"/personas/quests":{"x-schema":"models.Quest","x-name":"routes.QuestRoute","head":{"description":"Returns the count of quests that a persona has in progress or has completed.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"object"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Count All Quests","x-name":"countAll","tags":["Quests"]},"get":{"description":"Returns progress data for all quests that the given persona has started or completed.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/models.Quest"}}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find AlL Persona Quests","x-name":"findAll","tags":["Quests"]}},"/personas/_personaUid/quests/:questUid":{"parameters":[{"name":"personaUid","in":"path","required":true,"schema":{"type":"string"}},{"name":"questUid","in":"path","required":true,"schema":{"type":"string"}}],"x-schema":"models.Quest","x-name":"routes.QuestRoute","get":{"description":"Returns the progress for a given quest and persona.","parameters":[{"name":"findById","in":"query","schema":{"type":"string"}},{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Quest"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find Quests By Quest ID & Persona ID","x-name":"findById","tags":["Quests"]},"delete":{"description":"Deletes the persona's progress for a given quest.","parameters":[{"name":"delete","in":"query","schema":{"type":"string"}},{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Delete Quest By Quest ID & Persona ID","x-name":"delete","tags":["Quests"]}},"/personas/_personaUid/quests/:questUid/start":{"parameters":[{"name":"personaUid","in":"path","required":true,"schema":{"type":"string"}},{"name":"questUid","in":"path","required":true,"schema":{"type":"string"}}],"x-schema":"models.Quest","x-name":"routes.QuestRoute","get":{"description":"Starts tracking the persona's progress for a given quest.","parameters":[{"name":"start","in":"query","schema":{"type":"string"}},{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Quest"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Start Quest By Quest ID & Persona ID","x-name":"start","tags":["Quests"]}},"/personas/_personaUid/quests/:questUid/unlock":{"parameters":[{"name":"personaUid","in":"path","required":true,"schema":{"type":"string"}},{"name":"questUid","in":"path","required":true,"schema":{"type":"string"}}],"x-schema":"models.Quest","x-name":"routes.QuestRoute","get":{"description":"Marks the quest has unlocked and able to be started by the specified persona. Game Server or Admin","parameters":[{"name":"unlock","in":"query","schema":{"type":"string"}},{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Quest"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Unlock Quest By Quest ID & Persona ID","x-name":"unlock","tags":["Quests"]}},"/admin/reporting-services/clear-cache":{"x-name":"AdminRoute","get":{"description":"Flushes the second-level cache so that subsequent requests will pull directly from the database.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"clearCache","tags":["Operations"]}},"/debug/logs/reporting-services":{"x-name":"AdminRoute","x-upgrade":true,"get":{"description":"Establishes a connection to the live log socket.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"logs","tags":["Logs"]}},"/admin/reporting-services/release-notes":{"x-name":"AdminRoute","get":{"description":"Returns the release notes file for the service.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"text/x-rst":{"schema":{"type":"string"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"text/x-rst":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"get","tags":["Release Notes"]}},"/admin/reporting-services/restart":{"x-name":"AdminRoute","get":{"description":"Immediately restarts the service.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"restart","tags":["Operations"]}},"/metrics/reporting-services":{"x-name":"MetricsRoute","get":{"description":"Returns all Prometheus metrics emitted by this service.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"text/plain; version=0.0.4; charset=utf-8":{"schema":{"type":"string"}}}}},"x-name":"getMetrics","tags":["Crash Reports"]}},"/metrics/reporting-services/:metric":{"parameters":[{"name":"metric","in":"path","required":true,"schema":{"type":"string"}}],"x-name":"MetricsRoute","get":{"description":"Returns the Prometheus metric emitted by this service with the given name.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"text/plain; version=0.0.4; charset=utf-8":{"schema":{"type":"string"}}}}},"x-name":"getSingleMetric","tags":["Crash Reports"]}},"/admin/reports":{"x-schema":"models.Report","x-name":"routes.ReportRoute","head":{"description":"Returns the total number of crash reports matching the given criteria.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"promise"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"count","tags":["Crash Reports"]},"get":{"description":"Returns all crash reports from the system that the user has access to matching the given criteria.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"promise"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"findAll","tags":["Crash Reports"]},"delete":{"description":"Deletes all crash reports from the service matching the given criteria.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"promise"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"truncate","tags":["Crash Reports"]},"post":{"description":"Creates a new generic report with the service.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Report"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"promise"}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"x-name":"uploadGeneric","tags":["Crash Reports"]}},"/admin/reports/electron":{"x-schema":"models.Report","x-name":"routes.ReportRoute","post":{"description":"Creates a new crash report with the service for Electron based applications.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Report"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"promise"}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"x-name":"uploadCrashElectron","tags":["Crash Reports"]}},"/admin/reports/unreal":{"x-schema":"models.Report","x-name":"routes.ReportRoute","post":{"description":"Creates a new crash report with the service for Unreal based applications.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Report"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"promise"}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"x-name":"uploadCrashUnreal","tags":["Crash Reports"]}},"/admin/reports/_id":{"parameters":[{"$ref":"#/components/parameters/id"}],"x-schema":"models.Report","x-name":"routes.ReportRoute","get":{"description":"Returns a single crash from the system that the user has access to.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"promise"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"findById","tags":["Crash Reports"]},"delete":{"description":"Deletes the crash from the service.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"promise"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"delete","tags":["Crash Reports"]}},"/admin/report-locations":{"x-schema":"models.ReportStorageLocation","x-name":"routes.ReportStorageLocationRoute","head":{"description":"Returns the total number of storage locations matching the given criteria.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"promise"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Count Report Storage Locations","x-name":"count","tags":["Crash Reports"]},"get":{"description":"Returns all storage locations from the system that the user has access to matching the given criteria.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"promise"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find All Report Storage Locations","x-name":"findAll","tags":["Crash Reports"]},"post":{"description":"Creates one or more new Storage Location objects.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.ReportStorageLocation"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"promise"}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Create Report Storage Location","x-name":"create","tags":["Crash Reports"]},"delete":{"description":"Deletes all storage locations from the service matching the given criteria.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"promise"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Truncate Report Storage Location","x-name":"truncate","tags":["Crash Reports"]}},"/admin/report-locations/_id":{"parameters":[{"$ref":"#/components/parameters/id"}],"x-schema":"models.ReportStorageLocation","x-name":"routes.ReportStorageLocationRoute","get":{"description":"Returns a single storage location from the system that the user has access to.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"promise"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find Report Storage Locations By ID","x-name":"findById","tags":["Crash Reports"]},"put":{"description":"Updates a single storage location.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.ReportStorageLocation"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"promise"}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Update Report Storage Location By ID","x-name":"update","tags":["Crash Reports"]},"delete":{"description":"Deletes the storage location from the service.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"promise"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Delete Report Storage Location By ID","x-name":"delete","tags":["Crash Reports"]}},"/admin/server-instance-services/clear-cache":{"x-name":"AdminRoute","get":{"description":"Flushes the second-level cache so that subsequent requests will pull directly from the database.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"clearCache","tags":["Operations"]}},"/debug/logs/server-instance-services":{"x-name":"AdminRoute","x-upgrade":true,"get":{"description":"Establishes a connection to the live log socket.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"logs","tags":["Logs"]}},"/admin/server-instance-services/release-notes":{"x-name":"AdminRoute","get":{"description":"Returns the release notes file for the service.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"text/x-rst":{"schema":{"type":"string"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"text/x-rst":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"get","tags":["Release Notes"]}},"/admin/server-instance-services/restart":{"x-name":"AdminRoute","get":{"description":"Immediately restarts the service.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"restart","tags":["Operations"]}},"/metrics/server-instance-services":{"x-name":"MetricsRoute","get":{"description":"Returns all Prometheus metrics emitted by this service.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"text/plain; version=0.0.4; charset=utf-8":{"schema":{"type":"string"}}}}},"x-name":"getMetrics","tags":["Server Instances"]}},"/metrics/server-instance-services/:metric":{"parameters":[{"name":"metric","in":"path","required":true,"schema":{"type":"string"}}],"x-name":"MetricsRoute","get":{"description":"Returns the Prometheus metric emitted by this service with the given name.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"text/plain; version=0.0.4; charset=utf-8":{"schema":{"type":"string"}}}}},"x-name":"getSingleMetric","tags":["Server Instances"]}},"/serverinstances":{"x-schema":"models.ServerInstance","x-name":"routes.ServerInstanceRoute","head":{"description":"Returns the count of Servers in the header as `Content-Length`.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"object"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Count Server Instances","x-name":"count","tags":["Server Instances"]},"delete":{"description":"Deletes all server instances from the datastore.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Truncate Service Instances","x-name":"truncate","tags":["Server Instances"]},"get":{"description":"Returns all server instances from the datastore that the user has access to based upon the given criteria.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/models.ServerInstance"}}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find All Server Instances","x-name":"findAll","tags":["Server Instances"]},"post":{"description":"Creates a new server instance.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.ServerInstance"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/models.ServerInstance"},{"type":"array","items":{"$ref":"#/components/schemas/models.ServerInstance"}}]}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Create Server Instance","x-name":"create","tags":["Server Instances"]}},"/serverinstances/assign":{"x-schema":"models.ServerInstance","x-name":"routes.ServerInstanceRoute","post":{"description":"Requests a new server instance assignment.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.ServerInstance"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.ServerInstance"}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Assign Server Instance","x-name":"assign","tags":["Server Instances"]}},"/serverinstances/products":{"x-schema":"models.ServerInstance","x-name":"routes.ServerInstanceRoute","get":{"description":"Returns an array of available products.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"array","items":{"type":"string"}}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"List Available Products","x-name":"getProducts","tags":["Server Instances"]}},"/serverinstances/regions":{"x-schema":"models.ServerInstance","x-name":"routes.ServerInstanceRoute","get":{"description":"Returns an array of available server regions.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"array","items":{"type":"string"}}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"List Regions","x-name":"getRegions","tags":["Server Instances"]}},"/serverinstances/versions":{"x-schema":"models.ServerInstance","x-name":"routes.ServerInstanceRoute","get":{"description":"Returns an array of available server build versions","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"array","items":{"type":"string"}}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"List Versions","x-name":"getVersions","tags":["Server Instances"]}},"/serverinstances/:id":{"parameters":[{"$ref":"#/components/parameters/id"}],"x-schema":"models.ServerInstance","x-name":"routes.ServerInstanceRoute","get":{"description":"Returns a single server instance from the system that the user has access to.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.ServerInstance"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find Server Instance By ID","x-name":"findById","tags":["Server Instances"]},"put":{"description":"Updates a single server instance in the datastore.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.ServerInstance"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.ServerInstance"}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Update Server Instance By ID","x-name":"update","tags":["Server Instances"]},"delete":{"description":"Deletes the server instance from the service.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Delete Server Instance By ID","x-name":"delete","tags":["Server Instances"]}},"/serverinstances/:id/heartbeat":{"parameters":[{"$ref":"#/components/parameters/id"}],"x-schema":"models.ServerInstance","x-name":"routes.ServerInstanceRoute","get":{"description":"Updates the heartbeat for a given server instance.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.ServerInstance"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Update Server Instance Heartbeat By ID","x-name":"updateHeartbeat","tags":["Server Instances"]}},"/admin/world-services/clear-cache":{"x-name":"AdminRoute","get":{"description":"Flushes the second-level cache so that subsequent requests will pull directly from the database.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"clearCache","tags":["Operations"]}},"/debug/logs/world-services":{"x-name":"AdminRoute","x-upgrade":true,"get":{"description":"Establishes a connection to the live log socket.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"logs","tags":["Logs"]}},"/admin/world-services/release-notes":{"x-name":"AdminRoute","get":{"description":"Returns the release notes file for the service.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"text/x-rst":{"schema":{"type":"string"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"text/x-rst":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"get","tags":["Release Notes"]}},"/admin/world-services/restart":{"x-name":"AdminRoute","get":{"description":"Immediately restarts the service.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"restart","tags":["Operations"]}},"/metrics/world-services":{"x-name":"MetricsRoute","get":{"description":"Returns all Prometheus metrics emitted by this service.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"text/plain; version=0.0.4; charset=utf-8":{"schema":{"type":"string"}}}}},"x-name":"getMetrics","tags":["Virtual World Services"]}},"/metrics/world-services/:metric":{"parameters":[{"name":"metric","in":"path","required":true,"schema":{"type":"string"}}],"x-name":"MetricsRoute","get":{"description":"Returns the Prometheus metric emitted by this service with the given name.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"text/plain; version=0.0.4; charset=utf-8":{"schema":{"type":"string"}}}}},"x-name":"getSingleMetric","tags":["Virtual World Services"]}},"/scalingpolicies":{"x-schema":"models.ScalingPolicy","x-name":"routes.ScalingPolicyRoute","head":{"description":"Returns the count of policies in the datastore in the header as `Content-Length`.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"object"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Count Scaling Policies","x-name":"count","tags":["Virtual World Services"]},"get":{"description":"Returns all policies from the system that the user has access to based upon the given criteria.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/models.ScalingPolicy"}}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find All Scaling Policies","x-name":"findAll","tags":["Virtual World Services"]},"delete":{"description":"Deletes all policies from the service.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Truncate Scaling Policies","x-name":"truncate","tags":["Virtual World Services"]},"post":{"description":"Creates a new policy.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.ScalingPolicy"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/models.ScalingPolicy"},{"type":"array","items":{"$ref":"#/components/schemas/models.ScalingPolicy"}}]}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Create Scaling Policy","x-name":"create","tags":["Virtual World Services"]}},"/scalingpolicies/:id":{"parameters":[{"$ref":"#/components/parameters/id"}],"x-schema":"models.ScalingPolicy","x-name":"routes.ScalingPolicyRoute","get":{"description":"Returns a single policy from the system that the user has access to.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.ScalingPolicy"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find Scaling Policy By ID","x-name":"findById","tags":["Virtual World Services"]},"put":{"description":"Updates a single policy.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.ScalingPolicy"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.ScalingPolicy"}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Update Scaling Policy By ID","x-name":"update","tags":["Virtual World Services"]},"delete":{"description":"Deletes the policy from the datastore.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Delete Scaling Policy","x-name":"delete","tags":["Virtual World Services"]}},"/shards":{"x-schema":"models.Shard","x-name":"routes.ShardRoute","head":{"description":"Returns the count of shards in the datastore in the header as `Content-Type`.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"object"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Count Shard","x-name":"count","tags":["Virtual World Services"]},"delete":{"description":"Deletes all shards from the datastore.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Truncate Shard By ID","x-name":"truncate","tags":["Virtual World Services"]},"get":{"description":"Returns all shards from the datastore that the user has access to based upon the given criteria.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/models.Shard"}}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find All Shards","x-name":"findAll","tags":["Virtual World Services"]}},"/shards/:id":{"parameters":[{"$ref":"#/components/parameters/id"}],"x-schema":"models.Shard","x-name":"routes.ShardRoute","delete":{"description":"Deletes the shard from the service.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"promise"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Delete Shard By ID","x-name":"delete","tags":["Virtual World Services"]},"get":{"description":"Returns a single shard from the system that the user has access to.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Shard"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find Shard By ID","x-name":"findById","tags":["Virtual World Services"]},"put":{"description":"Updates a single shard.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Shard"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"promise"}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Update Shard By ID","x-name":"update","tags":["Virtual World Services"]}},"/shards/:id/heartbeat":{"parameters":[{"$ref":"#/components/parameters/id"}],"x-schema":"models.Shard","x-name":"routes.ShardRoute","get":{"description":"Updates the heartbeat timestamp for a single shard.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Shard"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Update Heartbeat By Shard ID","x-name":"updateHeartbeat","tags":["Virtual World Services"]}},"/shards/:id/join":{"parameters":[{"$ref":"#/components/parameters/id"}],"x-schema":"models.Shard","x-name":"routes.ShardRoute","get":{"description":"Requests that the authenticated user wants to join the specified shard.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Shard"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Join Shard By ID","x-name":"join","tags":["Virtual World Services"]}},"/shards/:id/leave":{"parameters":[{"$ref":"#/components/parameters/id"}],"x-schema":"models.Shard","x-name":"routes.ShardRoute","get":{"description":"Requests that the authenticated user wants to leave the specified shard.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Leave Shard By ID","x-name":"leave","tags":["Virtual World Services"]}},"/zones/:id/shards":{"parameters":[{"$ref":"#/components/parameters/id"}],"x-schema":"models.Shard","x-name":"routes.ShardRoute","head":{"description":"Returns the count of shards","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"object"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Count By Zone ID","x-name":"countByZoneUid","tags":["Virtual World Services"]},"get":{"description":"Returns all shards from the system within a given zone.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/models.Shard"}}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find All By Zone ID","x-name":"findAllByZoneUid","tags":["Virtual World Services"]}},"/zones/:zoneUid/shards/preferred":{"parameters":[{"name":"zoneUid","in":"path","required":true,"schema":{"type":"string"}}],"x-schema":"models.Shard","x-name":"routes.ShardRoute","get":{"description":"Returns a list of preferred shards from the system within a given zone for the authenticated user, sorted from most preferable to least.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/models.Shard"}}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find Preferred By Zone ID","x-name":"findPreferredByZoneUid","tags":["Virtual World Services"]}},"/zones":{"x-schema":"models.Zone","x-name":"routes.ZoneRoute","head":{"description":"Returns the count of zones","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"object"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Count Zones","x-name":"count","tags":["Virtual World Services"]},"delete":{"description":"Deletes all zones from the service.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Truncate Zones","x-name":"truncate","tags":["Virtual World Services"]},"get":{"description":"Returns all zones from the system that the user has access to based upon the given criteria.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/models.Zone"}}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find All Zones","x-name":"findAll","tags":["Virtual World Services"]},"post":{"description":"Creates a new zone.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Zone"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"object"}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Create Zone","x-name":"create","tags":["Virtual World Services"]}},"/zones/:id":{"parameters":[{"$ref":"#/components/parameters/id"}],"x-schema":"models.Zone","x-name":"routes.ZoneRoute","get":{"description":"Returns a single zone from the system that the user has access to.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Zone"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find Zone By ID","x-name":"findById","tags":["Virtual World Services"]},"put":{"description":"Updates a single zone.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Zone"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Zone"}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Update Zone By ID","x-name":"update","tags":["Virtual World Services"]},"delete":{"description":"Deletes the zone from the service.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Delete Zone By ID","x-name":"delete","tags":["Virtual World Services"]}},"/admin/purchasing-services/clear-cache":{"x-name":"AdminRoute","get":{"description":"Flushes the second-level cache so that subsequent requests will pull directly from the database.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"clearCache","tags":["Operations"]}},"/debug/logs/purchasing-services":{"x-name":"AdminRoute","x-upgrade":true,"get":{"description":"Establishes a connection to the live log socket.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"logs","tags":["Logs"]}},"/admin/purchasing-services/release-notes":{"x-name":"AdminRoute","get":{"description":"Returns the release notes file for the service.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"text/x-rst":{"schema":{"type":"string"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"text/x-rst":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"get","tags":["Release Notes"]}},"/admin/purchasing-services/restart":{"x-name":"AdminRoute","get":{"description":"Immediately restarts the service.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"x-name":"restart","tags":["Operations"]}},"/metrics/purchasing-services":{"x-name":"MetricsRoute","get":{"description":"Returns all Prometheus metrics emitted by this service.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"text/plain; version=0.0.4; charset=utf-8":{"schema":{"type":"string"}}}}},"x-name":"getMetrics","tags":["Purchasing"]}},"/metrics/purchasing-services/:metric":{"parameters":[{"name":"metric","in":"path","required":true,"schema":{"type":"string"}}],"x-name":"MetricsRoute","get":{"description":"Returns the Prometheus metric emitted by this service with the given name.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"text/plain; version=0.0.4; charset=utf-8":{"schema":{"type":"string"}}}}},"x-name":"getSingleMetric","tags":["Purchasing"]}},"/contacts":{"x-schema":"models.Contact","x-name":"routes.ContactRoute","head":{"description":"Returns the count of contact in the header as `Content-Length`","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"object"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Count Contacts","x-name":"count","tags":["Purchasing"]},"delete":{"description":"Deletes all contacts from the datastore.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Truncate Contacts","x-name":"truncate","tags":["Purchasing"]},"get":{"description":"Returns all contacts from the system that the user has access to based upon the given criteria.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/models.Contact"}}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find All Contacts","x-name":"findAll","tags":["Purchasing"]},"post":{"description":"Stores a new contact in the datastore.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Contact"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/models.Contact"},{"type":"array","items":{"$ref":"#/components/schemas/models.Contact"}}]}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Create New Contact","x-name":"create","tags":["Purchasing"]}},"/contacts/:id":{"parameters":[{"$ref":"#/components/parameters/id"}],"x-schema":"models.Contact","x-name":"routes.ContactRoute","get":{"description":"Returns a single contact from the datastore that the user has access to.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Contact"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find Contact By ID","x-name":"findById","tags":["Purchasing"]},"put":{"description":"Updates a single contact.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Contact"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Contact"}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Update Contact By ID","x-name":"update","tags":["Purchasing"]},"delete":{"description":"Deletes the contact from the datastore.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Delete Contact By ID","x-name":"delete","tags":["Purchasing"]}},"/launch-profiles":{"x-schema":"models.LaunchProfile","x-name":"routes.LaunchProfileRoute","head":{"description":"Returns the count of launch profiles in the header as `Content-Length`.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"object"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Count Launch Profiles","x-name":"count","tags":["Purchasing"]},"get":{"description":"Returns all launch profiles from the system that the user has access to based upon the given criteria.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/models.LaunchProfile"}}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"summary":"Find All Launch Profiles","x-name":"findAll","tags":["Purchasing"]},"post":{"description":"Creates a new launch profile.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.LaunchProfile"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/models.LaunchProfile"},{"type":"array","items":{"$ref":"#/components/schemas/models.LaunchProfile"}}]}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Create Launch Profile","x-name":"create","tags":["Purchasing"]},"delete":{"description":"Deletes all launch profiles from the datastore.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Truncate Launch Profiles","x-name":"truncate","tags":["Purchasing"]}},"/launch-profiles/:id":{"parameters":[{"$ref":"#/components/parameters/id"}],"x-schema":"models.LaunchProfile","x-name":"routes.LaunchProfileRoute","get":{"description":"Returns a single launch profile from the datastore that the user has access to.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.LaunchProfile"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"summary":"Find Launch Profile By ID","x-name":"findById","tags":["Purchasing"]},"put":{"description":"Updates a single launch profile.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.LaunchProfile"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.LaunchProfile"}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Update Launch Profile By ID","x-name":"update","tags":["Purchasing"]},"delete":{"description":"Deletes the launch profile from the datastore.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Delete Launch Profile By ID","x-name":"delete","tags":["Purchasing"]}},"/orders":{"x-schema":"models.Order","x-name":"routes.OrderRoute","head":{"description":"Returns the count of orders in the header as `Content-Length`","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"object"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Count Orders","x-name":"count","tags":["Purchasing"]},"get":{"description":"Returns all orders from the datastore that the user has access to based upon the given criteria.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/models.Order"}}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find All Orders","x-name":"findAll","tags":["Purchasing"]},"post":{"description":"Creates a new order.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Order"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Order"}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Create Order","x-name":"create","tags":["Purchasing"]},"delete":{"description":"Deletes all orders from the service.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Truncate Orders","x-name":"truncate","tags":["Purchasing"]}},"/orders/:id":{"parameters":[{"$ref":"#/components/parameters/id"}],"x-schema":"models.Order","x-name":"routes.OrderRoute","get":{"description":"Returns a single order from the datastore that the user has access to.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find Order By ID","x-name":"findById","tags":["Purchasing"]},"delete":{"description":"Deletes the order from the datastore.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Delete Order By ID","x-name":"delete","tags":["Purchasing"]},"put":{"description":"Updates an existing order.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Order"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Order"}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Update Order By ID","x-name":"update","tags":["Purchasing"]}},"/payment-methods":{"x-schema":"models.PaymentMethod","x-name":"routes.PaymentMethodRoute","head":{"description":"Returns the count of payments in the header as `Content-Length`.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"object"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Count Payment Methods","x-name":"count","tags":["Purchasing"]},"get":{"description":"Returns all payments methods from the datastore that the user has access to based upon the given criteria.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/models.PaymentMethod"}}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find All Payment Methods","x-name":"findAll","tags":["Purchasing"]},"post":{"description":"Creates a new payment method.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.PaymentMethod"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.PaymentMethod"}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Create Payment Method","x-name":"create","tags":["Purchasing"]},"delete":{"description":"Deletes all payment methods from the datastore.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Truncate Payment Methods","x-name":"truncate","tags":["Purchasing"]}},"/payment-methods/:id":{"parameters":[{"$ref":"#/components/parameters/id"}],"x-schema":"models.PaymentMethod","x-name":"routes.PaymentMethodRoute","get":{"description":"Returns a single payment method from the datastore that the user has access to.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.PaymentMethod"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find Payment Method By ID","x-name":"findById","tags":["Purchasing"]},"put":{"description":"Updates a single payment method in the datastore.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.PaymentMethod"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.PaymentMethod"}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Update Payment Method By ID","x-name":"update","tags":["Purchasing"]},"delete":{"description":"Deletes the payment method from the datastore.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Delete Payment Method By ID","x-name":"delete","tags":["Purchasing"]}},"/payments":{"x-schema":"models.Payment","x-name":"routes.PaymentRoute","head":{"description":"Returns the count of payments in the header as `Content-Length`.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Count Payments","x-name":"count","tags":["Purchasing"]},"get":{"description":"Returns all payments from the datastore that the user has access to based upon the given criteria.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/models.Payment"}}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find All Payments","x-name":"findAll","tags":["Purchasing"]},"post":{"description":"Creates a new payment.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Payment"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Payment"}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Create Payment","x-name":"create","tags":["Purchasing"]}},"/payments/:id":{"parameters":[{"$ref":"#/components/parameters/id"}],"x-schema":"models.Payment","x-name":"routes.PaymentRoute","get":{"description":"Returns a single payment from the datastore that the user has access to.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Payment"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find Payment By ID","x-name":"findById","tags":["Purchasing"]},"put":{"description":"Updates a single payment in the datastore.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Payment"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Payment"}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Update Payment By ID","x-name":"update","tags":["Purchasing"]},"delete":{"description":"Deletes the payment from the service.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Delete Payment By ID","x-name":"delete","tags":["Purchasing"]}},"/product-categories":{"x-schema":"models.ProductCategory","x-name":"routes.ProductCategoryRoute","head":{"description":"Returns the count of product categories in the header as `Content-Length`.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"object"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"summary":"Count Product Categories","x-name":"count","tags":["Purchasing"]},"get":{"description":"Returns all product categories from the system that the user has access to based upon the given criteria.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/models.ProductCategory"}}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"summary":"Find All Product Categories","x-name":"findAll","tags":["Purchasing"]},"post":{"description":"Creates a new product category.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.ProductCategory"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/models.ProductCategory"},{"type":"array","items":{"$ref":"#/components/schemas/models.ProductCategory"}}]}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Create Product Category","x-name":"create","tags":["Purchasing"]},"delete":{"description":"Deletes all product categories from the datastore.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Truncate Product Categories","x-name":"truncate","tags":["Purchasing"]}},"/product-categories/:id":{"parameters":[{"$ref":"#/components/parameters/id"}],"x-schema":"models.ProductCategory","x-name":"routes.ProductCategoryRoute","get":{"description":"Returns a single product category from the datastore that the user has access to.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.ProductCategory"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"summary":"Find Product Category By ID","x-name":"findById","tags":["Purchasing"]},"put":{"description":"Updates a single product category in the datastore.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.ProductCategory"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.ProductCategory"}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Update Product Category By ID","x-name":"update","tags":["Purchasing"]},"delete":{"description":"Deletes the product category from the datastore.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Delete Product Category By ID","x-name":"delete","tags":["Purchasing"]}},"/product-features":{"x-schema":"models.ProductFeature","x-name":"routes.ProductFeatureRoute","head":{"description":"Returns the count of product features in the header as `Content-Length`.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"object"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"summary":"Count Product Feature","x-name":"count","tags":["Purchasing"]},"get":{"description":"Returns all product features from the datastore that the user has access to based upon the given criteria.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/models.ProductFeature"}}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"summary":"Find All Product Features","x-name":"findAll","tags":["Purchasing"]},"post":{"description":"Creates a new product feature.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.ProductFeature"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/models.ProductFeature"},{"type":"array","items":{"$ref":"#/components/schemas/models.ProductFeature"}}]}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Create Product Feature","x-name":"create","tags":["Purchasing"]},"delete":{"description":"Deletes all product features from the datastore.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Truncate Product Features","x-name":"truncate","tags":["Purchasing"]}},"/product-features/:id":{"parameters":[{"$ref":"#/components/parameters/id"}],"x-schema":"models.ProductFeature","x-name":"routes.ProductFeatureRoute","get":{"description":"Returns a single product feature from the datastore that the user has access to.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.ProductFeature"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"summary":"Find Product Feature By ID","x-name":"findById","tags":["Purchasing"]},"put":{"description":"Updates a single product feature in the datastore.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.ProductFeature"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.ProductFeature"}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Update Product Feature By ID","x-name":"update","tags":["Purchasing"]},"delete":{"description":"Deletes the product feature from the datastore.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Delete Product Feature By ID","x-name":"delete","tags":["Purchasing"]}},"/products":{"x-schema":"models.Product","x-name":"routes.ProductRoute","head":{"description":"Returns the count of product categories in the header as `Content-Length`.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"object"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"summary":"Count Products","x-name":"count","tags":["Purchasing"]},"get":{"description":"Returns all products from the system that the user has access to based upon the given criteria.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/models.Product"}}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"summary":"Find All Products","x-name":"findAll","tags":["Purchasing"]},"post":{"description":"Creates a new product.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Product"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/models.Product"},{"type":"array","items":{"$ref":"#/components/schemas/models.Product"}}]}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Create Product","x-name":"create","tags":["Purchasing"]},"delete":{"description":"Deletes all products from the service.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Truncate Products","x-name":"truncate","tags":["Purchasing"]}},"/products/:id":{"parameters":[{"$ref":"#/components/parameters/id"}],"x-schema":"models.Product","x-name":"routes.ProductRoute","get":{"description":"Returns a single product from the system that the user has access to.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Product"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"summary":"Find Product By ID","x-name":"findById","tags":["Purchasing"]},"put":{"description":"Updates a single product in the datastore.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Product"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Product"}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Update Product By ID","x-name":"update","tags":["Purchasing"]},"delete":{"description":"Deletes the product from the service.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Delete Product By ID","x-name":"delete","tags":["Purchasing"]}},"/promocodes":{"x-schema":"models.PromoCode","x-name":"routes.PromoCodeRoute","head":{"description":"Returns the count of promo codes in the header as `Content-Length`.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"object"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Count Promo Codes","x-name":"count","tags":["Purchasing"]},"get":{"description":"Returns all promotional codes from the datastore that the user has access to based upon the given criteria.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/models.PromoCode"}}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find All Promo Codes","x-name":"findAll","tags":["Purchasing"]},"post":{"description":"Creates a new promotional code.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.PromoCode"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/models.PromoCode"},{"type":"array","items":{"$ref":"#/components/schemas/models.PromoCode"}}]}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Create Promo Code","x-name":"create","tags":["Purchasing"]},"delete":{"description":"Deletes all promotional codes from the datastore.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Truncate Promo Codes","x-name":"truncate","tags":["Purchasing"]}},"/promocodes/:id":{"parameters":[{"$ref":"#/components/parameters/id"}],"x-schema":"models.PromoCode","x-name":"routes.PromoCodeRoute","get":{"description":"Returns a single promotional code from the datastore that the user has access to.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.PromoCode"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find Promo Code By ID","x-name":"findById","tags":["Purchasing"]},"put":{"description":"Updates a single promotional code.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.PromoCode"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.PromoCode"}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Update Promo Code By ID","x-name":"update","tags":["Purchasing"]},"delete":{"description":"Deletes the promotional code from the datastore.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Delete Promo Code By ID","x-name":"delete","tags":["Purchasing"]}},"/purchases":{"x-schema":"models.Purchase","x-name":"routes.PurchaseRoute","head":{"description":"Returns the count of purchases in the header as `Content-Length`.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"object"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Count Purchases","x-name":"count","tags":["Purchasing"]},"get":{"description":"Returns all purchases from the datastore that the user has access to based upon the given criteria.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/models.Purchase"}}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find All Purchases","x-name":"findAll","tags":["Purchasing"]},"post":{"description":"Creates a new purchase.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Purchase"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Purchase"}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Create Purchase","x-name":"create","tags":["Purchasing"]},"delete":{"description":"Deletes all purchases from the datastore.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Truncate Purchases","x-name":"truncate","tags":["Purchasing"]}},"/purchases/:id":{"parameters":[{"$ref":"#/components/parameters/id"}],"x-schema":"models.Purchase","x-name":"routes.PurchaseRoute","get":{"description":"Returns a single purchase from the datastore that the user has access to.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Purchase"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find Purchase By ID","x-name":"findById","tags":["Purchasing"]},"put":{"description":"Updates a single purchase.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Purchase"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Purchase"}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Update Purchase By ID","x-name":"update","tags":["Purchasing"]},"delete":{"description":"Deletes the purchase from the datastore.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Delete Purchase By ID","x-name":"delete","tags":["Purchasing"]}},"/purchases/validate/apple":{"x-name":"routes.ValidateRoute","post":{"description":"Validates an in-app purchase with the Apple Store.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Validate Apple Purchase","x-name":"validateApple","tags":["Purchasing"]}},"/purchases/validate/google":{"x-name":"routes.ValidateRoute","post":{"description":"Validates an in-app purchase with the Google Play store.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Validate Google Purchase","x-name":"validateGoogle","tags":["Purchasing"]}},"/wallets":{"x-schema":"models.Wallet","x-name":"routes.WalletRoute","head":{"description":"Returns the count of wallets in the header as `Content-Length`","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"object"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Count Wallets","x-name":"count","tags":["Purchasing"]},"get":{"description":"Returns all wallets from the system that the user has access to based upon the given criteria.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/models.Wallet"}}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find All Wallets","x-name":"findAll","tags":["Purchasing"]},"post":{"description":"Creates a new wallet.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Wallet"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/models.Wallet"},{"type":"array","items":{"$ref":"#/components/schemas/models.Wallet"}}]}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Create Wallet","x-name":"create","tags":["Purchasing"]},"delete":{"description":"Deletes all wallets from the service.","parameters":[{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/sort"}],"responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Truncate Wallets","x-name":"truncate","tags":["Purchasing"]}},"/wallets/:id":{"parameters":[{"$ref":"#/components/parameters/id"}],"x-schema":"models.Wallet","x-name":"routes.WalletRoute","get":{"description":"Returns a single wallet from the system that the user has access to.","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Wallet"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Find Wallet By ID","x-name":"findById","tags":["Purchasing"]},"put":{"description":"Updates a single wallet.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Wallet"}}}},"responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/models.Wallet"}}}},"400":{"description":"Returned when the request content is invalid.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Update Wallet By ID","x-name":"update","tags":["Purchasing"]},"delete":{"description":"Deletes the wallet from the service.","responses":{"204":{"description":"No Content"},"401":{"description":"Returned when a valid authentication token is not provided.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"403":{"description":"Returned when the user does not have permission to perform this action.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"security":[{"jwt":[]}],"summary":"Delete Wallet By ID","x-name":"delete","tags":["Purchasing"]}},"/store/webhook/_id":{"parameters":[{"$ref":"#/components/parameters/id"}],"x-name":"routes.WebhookRoute","post":{"description":"Handle webhook requests from payment providers to notify datastore of changes","responses":{"200":{"description":"Returned when the operation is successful.","content":{"application/json":{"schema":{"type":"object"}}}}},"summary":"Handle Webhook","x-name":"handleWebhook","tags":["Purchasing"]}}},"components":{"schemas":{"Error":{"description":"Describes an error that has occurred within the service.","type":"object","properties":{"message":{"description":"The textual description of the error.","type":"string"},"stack":{"description":"The stack trace of the error. Only available when `environment` is set to `dev`.","type":"object"},"status":{"description":"The HTTP status code of the error.","type":"number","example":400}}},"models.AuthToken":{"description":"Authorization Token","type":"object","properties":{"expiresIn":{"default":"","description":"The token expiration date.","example":"1 Hour","type":"string"},"refresh":{"default":"","description":"The refresh token.","example":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...","type":"string"},"token":{"default":"","description":"The authorization token.","example":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...","type":"string"},"type":{"default":"ACCESS","description":"The type of access token this object represents.","example":"ACCESS","type":"string"},"userUid":{"default":"","description":"The unique identifier of the authenticated user.","example":"38b5ae7b-49a2-452c-b533-0843d3a0b6b3","type":"string"}},"required":["expiresIn","refresh","token","type","userUid"],"x-baseClass":""},"models.NewUser":{"description":"The object that is returned when a new user is created containing the user and authentication token.","type":"object","properties":{"refresh":{"default":"","description":"The JWT refresh token that the client can use to re-authenticate.","type":"string"},"token":{"default":"","description":"The JWT token that the client can use to authenticate future requests.","type":"string"},"user":{"default":{"uid":"a8b13b2f-41fe-438a-9ba2-921ef1064e70","dateCreated":"2024-09-20T02:01:38.142Z","dateModified":"2024-09-20T02:01:38.142Z","version":0,"name":"","email":null,"givenName":null,"familyName":null,"birthdate":null,"locale":null,"orgs":[],"phone":null,"roles":[],"externalIds":[],"verified":{"email":false,"phone":false},"lastLogin":null},"description":"User that was successfully registered.","$ref":"#/components/schemas/models.User"}},"required":["refresh","token","user"],"x-baseClass":""},"models.OAuthClient":{"description":"Represents a third-party application that will use the OAuth 2.0 protocol for single-sign on authentication and/or to access to platform resources on behalf of an existing user.","type":"object","properties":{"uid":{"default":"randomUUID()","description":"The universally unique identifier of the entity.","type":"string","x-identifier":true},"dateCreated":{"default":"new Date()","description":"The date and time that the entity was created.","format":"date","type":"string"},"dateModified":{"default":"new Date()","description":"The date and time that the entity was last modified.","format":"date","type":"string"},"version":{"default":0,"description":"The optimistic lock version.","type":"number"},"icon":{"default":"","description":"The URL to the client application icon to display to users requesting OAuth connection.","type":"string"},"name":{"default":"","description":"The name of the client application to display to users requesting OAuth connection.","type":"string"},"ownerUid":{"default":"","description":"The uid of the user or organization that owns this object.","type":"string"},"privacyUrl":{"default":"","description":"The URL to the application's Privacy Policy.","type":"string"},"redirectURIs":{"default":[],"description":"The list of redirection URIs that the OAuth client may use.","type":"array"},"secret":{"default":"","description":"The shared secret used to authenticate the OAuth client.","type":"string"},"tosUrl":{"default":"","description":"The URL to the application's Terms of Service.","type":"string"}},"required":["uid","dateCreated","dateModified","version","icon","name","ownerUid","privacyUrl","redirectURIs","secret","tosUrl"],"x-baseClass":"BaseMongoEntity","x-cache":30,"x-datastore":"static"},"models.OAuthProvider":{"description":"Represents an external authentication method that can be used to authenticate new and existing users using supported OAuth protocols.","type":"object","properties":{"uid":{"default":"randomUUID()","description":"The universally unique identifier of the entity.","type":"string","x-identifier":true},"dateCreated":{"default":"new Date()","description":"The date and time that the entity was created.","format":"date","type":"string"},"dateModified":{"default":"new Date()","description":"The date and time that the entity was last modified.","format":"date","type":"string"},"version":{"default":0,"description":"The optimistic lock version.","type":"number"},"name":{"default":"","description":"The unique name of the provider that can be used for authentication.","type":"string","x-identifier":true},"authClass":{"default":"oauth.DefaultOAuth2Handler","description":"The name of the authorization class that will handle OAuth requests for this provider. Default is `oauth.DefaultOAuth2Handler`.","type":"string"},"clientID":{"default":"","description":"The unique identifier that has been provided by the OAuth provider.","type":"string"},"clientSecret":{"default":"","description":"The shared secret that has been provided by the OAuth provider.","type":"string"},"enabled":{"default":true,"description":"Set to `true` to indicate that this provider is active and can be used to login, otherwise set to `false`.","type":"boolean"},"otherConfig":{"default":null,"description":"A structure containing additional configuration for the provider required by the authClass.","type":"object"},"pkce":{"default":false,"description":"Indicates whether PKCE is required by the OAuth provider. Optionally, set the value to the desired algorithm of the PKCE challenge method (E.g., `S256`).","type":"object"},"profileMap":{"description":"An object that describes how to map the properties of the profile obtained from the provider's profileURL to the format that we expect internally. The keys of the map, of the name, of the properties we expect. The values for each key is a snippet of JavaScript code that can be executed to compute the desired value.","example":{"id":"profile.id","alias":"profile.global_name || profile.username","avatar":"profile.avatar","email":"profile.email","locale":"profile.locale","username":"profile.username","verified":"json.verified"},"type":"object"},"protocol":{"default":"oauth2","description":"The OAuth protocol version supported by the provider.","type":"string"},"redirectURIs":{"default":[],"description":"The list of callback URIs that have been registered with the OAuth provider.","type":"array"},"scope":{"default":[],"description":"The list of scopes to request during the authentication process.","type":"array"}},"required":["uid","dateCreated","dateModified","version","name","authClass","clientID","clientSecret","enabled","otherConfig","pkce","protocol","redirectURIs","scope"],"x-baseClass":"BaseMongoEntity","x-cache":30,"x-datastore":"static"},"models.Organization":{"description":"Describes a collection of users that all have the same role. Roles are used to grant permissions.","type":"object","properties":{"uid":{"default":"randomUUID()","description":"The universally unique identifier of the entity.","type":"string","x-identifier":true},"dateCreated":{"default":"new Date()","description":"The date and time that the entity was created.","format":"date","type":"string"},"dateModified":{"default":"new Date()","description":"The date and time that the entity was last modified.","format":"date","type":"string"},"version":{"default":0,"description":"The optimistic lock version.","type":"number"},"name":{"default":"","description":"The unique name of the organization.","type":"string","x-identifier":true},"title":{"default":null,"description":"A textual name of the organization.","type":"string"},"description":{"default":null,"description":"A textual description of the purpose, of the organization and its members.","type":"string"},"members":{"default":[],"description":"The list of UUIDs for each user that is a member of the organization.","type":"array"},"owners":{"default":[],"description":"The list of UUIDs for each user that is an owner of the organization. Owners can add and remove other users to and from the organization.","type":"array"},"parentUid":{"default":null,"description":"The unique identifier of the parent organization.","type":"string"}},"required":["uid","dateCreated","dateModified","version","name","title","description","members","owners","parentUid"],"x-baseClass":"BaseMongoEntity","x-cache":30,"x-datastore":"user","x-shard":{"key":{"uid":1},"unique":false,"options":{}}},"models.Role":{"description":"Describes a collection of users that all have the same role. Roles are used to grant permissions.","type":"object","properties":{"uid":{"default":"randomUUID()","description":"The universally unique identifier of the entity.","type":"string","x-identifier":true},"dateCreated":{"default":"new Date()","description":"The date and time that the entity was created.","format":"date","type":"string"},"dateModified":{"default":"new Date()","description":"The date and time that the entity was last modified.","format":"date","type":"string"},"version":{"default":0,"description":"The optimistic lock version.","type":"number"},"name":{"default":"","description":"The unique name of the role.","type":"string","x-identifier":true},"title":{"default":null,"description":"A textual name of the role.","type":"string"},"description":{"default":null,"description":"A textual description of the purpose, of the role and its members.","type":"string"},"members":{"default":[],"description":"The list of UUIDs for each user that is a member of the role.","type":"array"},"owners":{"default":[],"description":"The list of UUIDs for each user that is an owner of the role. Owners can add and remove other users to and from the role.","type":"array"}},"required":["uid","dateCreated","dateModified","version","name","title","description","members","owners"],"x-baseClass":"BaseMongoEntity","x-cache":30,"x-datastore":"static","x-shard":{"key":{"uid":1},"unique":false,"options":{}}},"models.User":{"description":"Describes a single authorized user in the Xsolla Backend ecosystem.","type":"object","properties":{"uid":{"default":"randomUUID()","description":"The universally unique identifier of the entity.","type":"string","x-identifier":true},"dateCreated":{"default":"new Date()","description":"The date and time that the entity was created.","format":"date","type":"string"},"dateModified":{"default":"new Date()","description":"The date and time that the entity was last modified.","format":"date","type":"string"},"version":{"default":0,"description":"The optimistic lock version.","type":"number"},"name":{"default":"","description":"The unique name of the user.","type":"string","x-identifier":true},"email":{"default":null,"description":"The unique e-mail address of the user.","type":"string","x-identifier":true},"givenName":{"default":null,"description":"The user's given (first) name.","type":"string"},"familyName":{"default":null,"description":"The user's family name or surname.","type":"string"},"birthdate":{"default":null,"description":"The user's date of birth expressed as a string of the form DD/MM/YYYY.","type":"string"},"locale":{"default":null,"description":"The user's detected or preferred geographic locale. (E.g., en-US)","type":"string"},"orgs":{"default":[],"description":"The list of organizations that the user is a part of and will assume privileges for. (E.g., ['uid', 'uid'])","type":"array"},"phone":{"default":null,"description":"The user's telephone number.","type":"string","x-identifier":true},"roles":{"default":[],"description":"The list of roles (by name) that the user is a part of and will assume privileges for. (E.g., ['admin', 'console'])","type":"array"},"externalIds":{"default":[],"description":"The list of unique identifiers for each third-party platform the user is linked to. (E.g., ['uid', 'uid'])","type":"array"},"verified":{"default":{"email":false,"phone":false},"description":"Indicates if the account verification status of the user.","type":"object"},"lastLogin":{"default":null,"description":"The user's last name or surname.","format":"date","type":"string"}},"required":["uid","dateCreated","dateModified","version","name","email","givenName","familyName","birthdate","locale","orgs","phone","roles","externalIds","verified","lastLogin"],"x-baseClass":"BaseMongoEntity","x-cache":30,"x-datastore":"user","x-shard":{"key":{"uid":1},"unique":false,"options":{}}},"models.UserSecret":{"type":"object","properties":{"uid":{"default":"randomUUID()","description":"The universally unique identifier of the entity.","type":"string","x-identifier":true},"dateCreated":{"default":"new Date()","description":"The date and time that the entity was created.","format":"date","type":"string"},"dateModified":{"default":"new Date()","description":"The date and time that the entity was last modified.","format":"date","type":"string"},"version":{"default":0,"description":"The optimistic lock version.","type":"number"},"description":{"default":null,"description":"A textual description of the secret that can be displayed to the user.","type":"string"},"userId":{"default":"","description":"The universally unique identifier of the user account associated with the secret.","type":"string"},"type":{"default":"","description":"The type of secret that is being stored.","type":"string"},"secret":{"default":"","description":"The underlying secret that is being stored.","type":"string"}},"required":["uid","dateCreated","dateModified","version","description","userId","type","secret"],"x-baseClass":"BaseMongoEntity","x-cache":30,"x-datastore":"user","x-shard":{"key":{"uid":1},"unique":false,"options":{}}},"AccessControlListMongo":{"description":"The access control list provides a generic interface for the storage of user and roles permissions. Each ACL object\n represents the permission set for a single entity within the system. The entity is identified generically by its\n universally unique identifier (`uuid`). Each entry in the ACL records the permissions available to a particular user\n or role.\n\n Each permission can be one of the following actions:\n - `Create` - The user or role can create a new record or object.\n - `Read` - The user or role can read the record or object.\n - `Update` - The user or role can modify existing records or objects.\n - `Delete` - The user or role can delete existing records or objects.\n - `Special` - The user or role has special prilieges to edit the ACL permissions.\n - `Full` - The user or role has total control over the record or object and supersedes any of the above.\n\n For each of the above actions the user or role will be granted either an `allow` permission or a `deny` permission.\n If an `allow` is granted, the user or role has permission to perform that action. If a `deny` is set, then the user\n or role is denied that action. If no explicit `allow` or `deny` is set then the user or role will inherit the\n permission from a parent role or ACL.\n\n ACLs can be chained via single inheritance through the specification of the `parentUid`. This allows the ability to\n create complex trees of permissions that can easily inherit control schemes to make the definition of permissions\n easier.","type":"object","properties":{"uid":{"default":"randomUUID()","description":"The universally unique identifier of the entity.","type":"string","x-identifier":true},"dateCreated":{"default":"new Date()","description":"The date and time that the entity was created.","format":"date","type":"string"},"dateModified":{"default":"new Date()","description":"The date and time that the entity was last modified.","format":"date","type":"string"},"version":{"default":0,"description":"The optimistic lock version.","type":"number"},"records":{"default":[],"description":"The list of all permission records associated with this access control list.","type":"array","items":{"$ref":"#/components/schemas/ACLRecordMongo"}}},"required":["uid","dateCreated","dateModified","version","records"],"x-baseClass":"BaseMongoEntity","x-cache":3600,"x-datastore":"acl"},"models.Achievement":{"description":"Describes a single achievement that a given user has already unlocked.","type":"object","properties":{"uid":{"default":"randomUUID()","description":"The universally unique identifier of the entity.","type":"string","x-identifier":true},"dateCreated":{"default":"new Date()","description":"The date and time that the entity was created.","format":"date","type":"string"},"dateModified":{"default":"new Date()","description":"The date and time that the entity was last modified.","format":"date","type":"string"},"version":{"default":0,"description":"The optimistic lock version.","type":"number"},"achievementUid":{"default":"","description":"The unique identifier of the achievement that the user has unlocked.","type":"string"},"userUid":{"default":"","description":"The unique identifier of the user that unlocked the achievement.","type":"string"}},"required":["uid","dateCreated","dateModified","version","achievementUid","userUid"],"x-baseClass":"BaseMongoEntity","x-cache":30,"x-datastore":"user","x-shard":{"key":{"uid":1},"unique":false,"options":{}}},"models.AchievementDefinition":{"type":"object","properties":{"uid":{"default":"randomUUID()","description":"The universally unique identifier of the entity.","type":"string","x-identifier":true},"dateCreated":{"default":"new Date()","description":"The date and time that the entity was created.","format":"date","type":"string"},"dateModified":{"default":"new Date()","description":"The date and time that the entity was last modified.","format":"date","type":"string"},"version":{"default":0,"description":"The optimistic lock version.","type":"number"},"name":{"default":"","type":"string","x-identifier":true},"description":{"default":"","type":"string"},"badge":{"default":"","type":"string"},"productUid":{"type":"string","x-identifier":true}},"required":["uid","dateCreated","dateModified","version","name","description","badge"],"x-baseClass":"BaseMongoEntity","x-cache":30,"x-datastore":"static"},"models.Backup":{"description":"Describes a single backup job to be executed immediately or on a schedule.","type":"object","properties":{"uid":{"default":"randomUUID()","description":"The universally unique identifier of the entity.","type":"string","x-identifier":true},"dateCreated":{"default":"new Date()","description":"The date and time that the entity was created.","format":"date","type":"string"},"dateModified":{"default":"new Date()","description":"The date and time that the entity was last modified.","format":"date","type":"string"},"version":{"default":0,"description":"The optimistic lock version.","type":"number"},"active":{"default":true,"description":"Indicates whether the backup job is currently active and will be executed.","type":"boolean"},"name":{"default":"","description":"The unique name of the backup job.","type":"string","x-identifier":true},"description":{"default":"","description":"A textual description of the backup job.","type":"string"},"events":{"default":[],"description":"The list of event messages that occurred during the last job execution.","type":"array"},"keep":{"default":5,"description":"The total number of snapshots for this job to retain.","type":"number"},"schedule":{"default":"","description":"The cron-tab style schedule of how often the job will execute. If set to `null` this job executes exactly once.","type":"string"},"status":{"default":"SCHEDULED","description":"The current state of the backup job.","type":"string"}},"required":["uid","dateCreated","dateModified","version","active","name","description","events","keep","schedule","status"],"x-baseClass":"BaseMongoEntity","x-datastore":"static"},"models.Restore":{"description":"Describes a single restoration job to be executed immediately for a given snapshot.","type":"object","properties":{"uid":{"default":"randomUUID()","description":"The universally unique identifier of the entity.","type":"string","x-identifier":true},"dateCreated":{"default":"new Date()","description":"The date and time that the entity was created.","format":"date","type":"string"},"dateModified":{"default":"new Date()","description":"The date and time that the entity was last modified.","format":"date","type":"string"},"version":{"default":0,"description":"The optimistic lock version.","type":"number"},"drop":{"default":true,"description":"Indicates whether all existing data should be dropped during the restoration process.","type":"boolean"},"events":{"default":[],"description":"The list of event messages that occurred during the last job execution.","type":"array"},"exclude":{"default":["admin.*","config.*"],"description":"A list of database/collection/table name patters to exclude during the restoration process.","type":"array"},"include":{"default":[],"description":"A list of database/collection/table name patters to include during the restoration process. Only those items matching the provided list are restored. An empty set restores everything.","type":"array"},"snapshot":{"default":"","description":"The unique id or object data of the snapshot that will be restored.","type":"object"},"status":{"default":"PENDING","description":"The current state of the restoration job.","type":"string"}},"required":["uid","dateCreated","dateModified","version","drop","events","exclude","include","snapshot","status"],"x-baseClass":"BaseMongoEntity","x-datastore":"static"},"models.Snapshot":{"description":"Defines a single backup snapshot of a database that has been taken.","type":"object","properties":{"uid":{"default":"randomUUID()","description":"The universally unique identifier of the entity.","type":"string","x-identifier":true},"dateCreated":{"default":"new Date()","description":"The date and time that the entity was created.","format":"date","type":"string"},"dateModified":{"default":"new Date()","description":"The date and time that the entity was last modified.","format":"date","type":"string"},"version":{"default":0,"description":"The optimistic lock version.","type":"number"},"backupUid":{"default":"","description":"The unique id of the backup job that created this snapshot.","type":"string"},"name":{"default":"","description":"The unique name of the snapshot.","type":"string","x-identifier":true},"comments":{"default":"","description":"Descriptive comments and notes associated with this snapshot.","type":"string"},"filename":{"default":"","description":"The filename of the snapshot file as stored.","type":"string"},"sha512":{"default":"","description":"*DEPRECATED* The SHA512 checksum of the snapshot contents.","type":"string"},"checksum":{"default":"","description":"The checksum of the snapshot contents, in format algorithm:checksum.","type":"string"},"size":{"default":0,"description":"The total file size of the snapshot.","type":"number"},"type":{"default":"MONGODB","description":"The type of database.","type":"string"}},"required":["uid","dateCreated","dateModified","version","backupUid","name","comments","filename","sha512","checksum","size","type"],"x-baseClass":"BaseMongoEntity","x-datastore":"static"},"models.StorageLocation":{"description":"Defines a single location of remote storage that will be used to maintain backup snapshots.","type":"object","properties":{"uid":{"default":"randomUUID()","description":"The universally unique identifier of the entity.","type":"string","x-identifier":true},"dateCreated":{"default":"new Date()","description":"The date and time that the entity was created.","format":"date","type":"string"},"dateModified":{"default":"new Date()","description":"The date and time that the entity was last modified.","format":"date","type":"string"},"version":{"default":0,"description":"The optimistic lock version.","type":"number"},"name":{"default":"","description":"The unique name of the storage location.","type":"string","x-identifier":true},"description":{"default":"","description":"A textual description of the storage location.","type":"string"},"accessKey":{"default":"","description":"The API access key to authenticate with the remote server with.","type":"string"},"active":{"default":true,"description":"Indicates if the backup location is currently active for storing database snapshots. An inactive location can still be used to search and retrieve existing snapshots.","type":"boolean"},"bucket":{"default":"","description":"The name of the remote storage bucket.","type":"string"},"host":{"default":"","description":"The host of the remote storage provider.","type":"string"},"options":{"description":"Additional configuration options used by the storage provider.","type":"object"},"path":{"default":"","description":"The path prefix or subdirectory to store files.","type":"string"},"provider":{"default":"LOCAL","description":"Describes the provider type of storage location.","type":"string"},"region":{"default":"","description":"The region that the bucket is located in. Note this is not supported by all providers.","type":"string"},"secret":{"default":"","description":"The API secret to authenticate with the remote server with.","type":"string"},"excludes":{"default":[],"description":"A list of regex patterns, of asset names that will be ignored from being stored in this location.","type":"array"},"includes":{"default":[],"description":"A list of regex patterns, of asset names that will be stored in this location.","type":"array"},"url":{"default":"","description":"The public base URL that assets stored in this location will use.","type":"string"}},"required":["uid","dateCreated","dateModified","version","name","description","accessKey","active","bucket","host","path","provider","region","secret","region","secret","url"],"x-baseClass":"BaseMongoEntity","x-datastore":"static"},"models.Cost":{"description":"Describes a single cost for a resource.","type":"object","properties":{"resourceUid":{"default":"","description":"The unique identifier of the resource.","type":"string"},"value":{"default":1,"description":"The amount of the resource","type":"number"}},"required":["resourceUid","value"],"x-baseClass":""},"models.Defaults":{"description":"Describes a set of properties that new inventory resources will be given on creation.","type":"object","properties":{"quantity":{"default":1,"description":"The initial quantity of a resource that will be given on creation.","type":"number"},"data":{"default":null,"description":"A map of default metadata to initialize a resource with.","type":"object"},"stats":{"default":[],"description":"The list of default stats to assign to new resource instances.","type":"array"}},"required":["quantity","data","stats"],"x-baseClass":""},"models.PersonaResource":{"description":"Describes a single resource associated with a specific user or persona.","type":"object","properties":{"uid":{"default":"randomUUID()","description":"The universally unique identifier of the entity.","type":"string","x-identifier":true},"dateCreated":{"default":"new Date()","description":"The date and time that the entity was created.","format":"date","type":"string"},"dateModified":{"default":"new Date()","description":"The date and time that the entity was last modified.","format":"date","type":"string"},"version":{"default":0,"description":"The optimistic lock version.","type":"number"},"personaUid":{"default":"","description":"The unique identifier of the persona or user that this resource belongs to.","type":"string"},"resourceUid":{"default":"","description":"The UUID of the resource definition.","type":"string"},"quantity":{"default":-1,"description":"The number of resources in the inventory. A negative value indicates an unlimited quantity. A positive value indicates a finite quantity.","type":"number"},"data":{"default":null,"description":"An arbitrary map of additional data about the instance of the resource for the persona.","type":"object"},"stats":{"default":[],"description":"The list of unique stats for the resource. Stats are not applicable on stackable resources.","type":"array"}},"required":["uid","dateCreated","dateModified","version","personaUid","resourceUid","quantity","data","stats"],"x-baseClass":"BaseMongoEntity","x-datastore":"user"},"models.Resource":{"description":"Describes a single resource type of the virtual economy.","type":"object","properties":{"uid":{"default":"randomUUID()","description":"The universally unique identifier of the entity.","type":"string","x-identifier":true},"dateCreated":{"default":"new Date()","description":"The date and time that the entity was created.","format":"date","type":"string"},"dateModified":{"default":"new Date()","description":"The date and time that the entity was last modified.","format":"date","type":"string"},"version":{"default":0,"description":"The optimistic lock version.","type":"number"},"name":{"default":"","description":"The unique name of the resource.","type":"string","x-identifier":true},"cost":{"default":[],"description":"The costs associated with the resource","type":"array"},"data":{"default":null,"description":"An arbitrary map of additional data about the resource.","type":"object"},"defaults":{"default":{"quantity":1,"data":null,"stats":[]},"description":"The defaults to use when creating new instances of the resource.","$ref":null},"description":{"default":"","description":"Description of the resource","type":"string"},"parentUid":{"default":"","description":"The UUID of the parent resource to inherit stats, description, etc.","type":"string"},"stackable":{"default":false,"description":"Indicates if the resource can be copied and stacked or if each instance is considered unique.","type":"boolean"},"stats":{"default":[],"description":"The list of stat definitions for the resource.","type":"array"},"title":{"default":"","description":"The name to display to the user.","type":"string"}},"required":["uid","dateCreated","dateModified","version","name","cost","data","defaults","description","parentUid","stackable","stats","title"],"x-baseClass":"BaseMongoEntity","x-datastore":"static"},"models.Stat":{"description":"Describes a single stat for a resource","type":"object","properties":{"name":{"default":"","description":"The unique name of the stat.","type":"string"},"value":{"default":null,"description":"The value of the stat","type":"object"},"type":{"default":"OBJECT","description":"The type of value of the stat.","type":"string"}},"required":["name","value","type"],"x-baseClass":""},"models.Transaction":{"description":"Describes a transfer of resources two parties, a sender and a receiver. Transactions may include resources owned by both sender and recipient.\n\nIn such cases, a trade is performed. In the event that the sender or recipient is specified as `null`, the transaction will perform a populated or consume action, respectively.\n\nIf the user creating the transaction is the sender, their approval is automatically implied and granted. If the recipient makes any changes to the transaction, the sender must approve those changes before proceeding.\n\nIn the event a transaction is created by a trusted role user and both sender/receiver approval is set as `true`, the transaction is automatically executed without notifying the affected parties.\n\nCanceled or completed transactions cannot be modified. Canceled transactions will not be executed. Only transactions that have been approved by both parties (or a trusted role) will be executed.\n\nCanceled or failed transactions may be periodically removed from the database. Transactions with any other state are permanently stored.\n\n*A note on performance.* Given the sheer volume of transactions and the speed at which they must be processed, record level ACLs are not used. Instead, class-level ACLs are used with explicit permission verification implemented as code.","type":"object","properties":{"uid":{"default":"randomUUID()","description":"The universally unique identifier of the entity.","type":"string","x-identifier":true},"dateCreated":{"default":"new Date()","description":"The date and time that the entity was created.","format":"date","type":"string"},"dateModified":{"default":"new Date()","description":"The date and time that the entity was last modified.","format":"date","type":"string"},"version":{"default":0,"description":"The optimistic lock version.","type":"number"},"approval":{"default":{"from":false,"to":false},"description":"The transaction's current approval status for each party.","type":"object"},"from":{"default":"","description":"The unique identifier of the persona that is sending resources to a recipient persona. If `undefined` the user must be a trusted role.","type":"string"},"to":{"default":"","description":"The unique identifier of the persona is receiving the resources from the sender. If `undefined` the resources will be destroyed.","type":"string"},"resources":{"default":[],"description":"The list of resources involved in the transaction. If one or more resource(s) are specified belonging to the recipient, then it will be transferred to the sender upon execution.","type":"array"},"status":{"default":"PENDING","description":"The current status of the transaction","type":"string"}},"required":["uid","dateCreated","dateModified","version","approval","from","to","resources","status"],"x-baseClass":"BaseMongoEntity","x-datastore":"user"},"models.Leaderboard":{"description":"Describes a single leaderboard.","type":"object","properties":{"uid":{"default":"randomUUID()","description":"The universally unique identifier of the entity.","type":"string","x-identifier":true},"dateCreated":{"default":"new Date()","description":"The date and time that the entity was created.","format":"date","type":"string"},"dateModified":{"default":"new Date()","description":"The date and time that the entity was last modified.","format":"date","type":"string"},"version":{"default":0,"description":"The optimistic lock version.","type":"number"},"name":{"default":"","description":"The unique name of the leaderboard.","type":"string","x-identifier":true},"description":{"default":"","description":"A textual description of the leaderboard.","type":"string"},"icon":{"default":"","description":"The icon to display when representing the leaderboard.","type":"string"},"productUid":{"description":"The uid of the product that this server instance is associated with.","type":"string","x-identifier":true},"rankingSchedule":{"description":"The cron-tab like schedule that will rank the leaderboard records. Setting to `undefined` will rank all records in real-time. Make sure to use a staggered schedule when also setting a value for `resetSchedule` to prevent from trying to rank the leaderboard at the same time the reset operation is occurring.","type":"string"},"resetSchedule":{"description":"The cron-tab like schedule that will reset all leaderboard records. Setting to `undefined` will retain all records indefinitely. Make sure to use a staggered schedule when also setting a value for `rankingSchedule` to prevent from trying to reset the leaderboard at the same time the ranking operation is occurring.","type":"string"},"sort":{"default":"DESC","description":"The direction to sort the leaderboard record set. `SortDirection.ASCENDING` will sort from records from lowest to highest score, `SortDirection.DESCENDING` sorts from highest to lowest score.","type":"string"},"sortBy":{"default":"score","description":"The name of the leaderboard stat that records will be sorted by. Default is `score`.","type":"string"},"updateMethod":{"default":"BEST","description":"The method that will be used to accept new leaderboard records submissions. Default is `BEST_SCORE`.","type":"string"}},"required":["uid","dateCreated","dateModified","version","name","description","icon","sort","sortBy","updateMethod"],"x-baseClass":"BaseMongoEntity","x-cache":30,"x-datastore":"static"},"models.LeaderboardRecord":{"description":"Describes a persona's single score record within a given leaderboard.","type":"object","properties":{"uid":{"default":"randomUUID()","description":"The universally unique identifier of the entity.","type":"string","x-identifier":true},"dateCreated":{"default":"new Date()","description":"The date and time that the entity was created.","format":"date","type":"string"},"dateModified":{"default":"new Date()","description":"The date and time that the entity was last modified.","format":"date","type":"string"},"version":{"default":0,"description":"The optimistic lock version.","type":"number"},"leaderboardUid":{"default":"","description":"The unique identifier of the leaderboard that the record belongs to.","type":"string"},"personaUid":{"default":"","description":"The unique identifier of the persona that submitted the record.","type":"string"},"rank":{"default":-1,"description":"The global rank of the record in relation to other records within the leaderboard (lower is better).","type":"number"},"rankBy":{"default":"score","description":"The name of the stat to sort this record's rank by. This should match the `sortBy` value of the corresponding Leaderboard definition.","type":"string"},"stats":{"default":{},"description":"The persona's submitted stats for the leaderboard. This object can contain any number of key-value pairs, but there must be at least one that has the same name as the `sortBy` listed in the Leaderboard definition.","type":"object"}},"required":["uid","dateCreated","dateModified","version","leaderboardUid","personaUid","rank","rankBy","stats"],"x-baseClass":"BaseMongoEntity","x-cache":30,"x-datastore":"user"},"models.Criteria":{"description":"Describes a single statistic by which to filter all matchmaking search results.\n\nEach criterion must have a corresponding `Statistic` object with the same `name`.","type":"object","properties":{"name":{"default":"","description":"The unique name of the criteria to consider.","type":"string"},"value":{"description":"The comparison value that the criteria will consider.","type":"object"}},"required":["name"],"x-baseClass":""},"models.Session":{"description":"A session describes a real-time interaction between a group of one or more players. Sessions can be public or private, where members can either freely join or require direct invitation by the session host. The `Session` object contains metadata specific to the product for purposes of state initialization and synchronization. Note that the session is not intended to replace a real-time communication server but instead serves as a metadata description of such a discrete server instance.\n\n## Visibility\nEach session has a `visibility` property that determines whether the session can be included in public searches for sessions. The value of the `visibility` property is an enumerator with the following possible values:\n\n* `PUBLIC` - A session that is considered public. Anyone can freely join. If a `password` is set, only those who provide the correct password may join.\n* `FRIENDS_EXTENDED` - A session considered private, where immediate friends of the host and their friends may freely join.\n* `FRIENDS_ONLY` - A session considered private, where only the host's immediate friends may freely join.\n* `INVITE_ONLY` - A session considered private, where only explicitly invited individuals may join.\n* `LOCKED` - A session that cannot be modified or joined after creation. This visibility is often used by other systems such as matchmaking or tournaments.\n\n## Session Hosts\nThe session may optionally also set a `hostUid`, designating a user, often the one who created the session, with the power to modify the session. If no host is specified, any session member can make modifications.\n\n## Session Data\nThe `data` property allows setting arbitrary information specific to the session's product, such as the selected game mode, map, rules, time limits, or other attributes that the game server will use once the session begins.\n\n## Status\nThe `status` property indicates the current state of the session. The value is encoded as an enumerator with the following possible values:\n\n* `WAITING_FOR_PLAYERS` - The session is currently waiting for players to join.\n* `IDLE` - The session is in an idle state where players are not actively engaged in real-time interaction, often in a lobby or post-session screen.\n* `IN_PROGRESS` - The session is actively in progress with real-time player interaction.\n* `ENDED` - The session has concluded, and no players are actively participating.","type":"object","properties":{"uid":{"default":"randomUUID()","description":"The universally unique identifier of the entity.","type":"string","x-identifier":true},"dateCreated":{"default":"new Date()","description":"The date and time that the entity was created.","format":"date","type":"string"},"dateModified":{"default":"new Date()","description":"The date and time that the entity was last modified.","format":"date","type":"string"},"version":{"default":0,"description":"The optimistic lock version.","type":"number"},"data":{"default":{},"description":"The map of arbitrary data associated with the session.","type":"object"},"hostUid":{"default":"","description":"The UUID of the host user that owns the session. If no host is specified, then the session is considered to be owned by the system itself. When a session has no host, any member may modify the session data. If a host is specified, then only that user may modify the session data.","type":"string"},"invited":{"default":[],"description":"The list of UUIDs for each user that has been invited to the session by the host.","type":"array"},"numTeams":{"default":0,"description":"The total number of teams represented in the session.","type":"number"},"password":{"default":"","description":"The secret password that must be given to join the session.","type":"string"},"serverUid":{"default":"","description":"The universally unique identifier of the session server associated with the session.","type":"string"},"status":{"default":"WAITING_FOR_PLAYERS","description":"The current activity state of the session.","type":"string"},"teams":{"default":[],"description":"The list of teams, containing player assignments, for the session.","type":"array"},"teamSize":{"default":0,"description":"The maximum number of players allowed per team.","type":"number"},"users":{"default":[],"description":"The list of UUIDs for each user actively joined to the session.","type":"array"},"visibility":{"default":"PUBLIC","description":"The visibility of the session within the global roster.","type":"string"},"authority":{"default":"SERVER","description":"The authority mode of the session. This determines who has ownership rights over the session. Default is `SERVER`.","type":"string"},"mode":{"default":"realtime.SessionMode","description":"The default type of mode that will be used.","type":"string"},"productUid":{"description":"The uid of the product that this server instance is associated with.","type":"string"},"serverUrl":{"description":"The connection URL of the session server associated with the session.","type":"string"},"type":{"default":"GAME","description":"The type of session.","type":"string"}},"required":["uid","dateCreated","dateModified","version","data","hostUid","invited","numTeams","password","serverUid","status","teams","teamSize","users","visibility"],"x-baseClass":"BaseMongoEntity","x-cache":30,"x-datastore":"user","x-shard":{"key":{"uid":1},"unique":false,"options":{}}},"models.Statistic":{"description":"Describes a single metric by which users will be compared and filtered.","type":"object","properties":{"name":{"default":"","description":"The unique name of the statistic.","type":"string"},"value":{"description":"The value of the statistic representing the combined average of all users on a ticket or match.","type":"object"}},"required":["name"],"x-baseClass":""},"models.Team":{"description":"Describes a single team of players involved in a match.","type":"object","properties":{"id":{"default":0,"description":"The index or unique identifier of the team.","type":"number"},"members":{"default":[],"description":"The list of UUIDs for each user on the team.","type":"array"}},"required":["id","members"],"x-baseClass":""},"models.Ticket":{"description":"Describes one or more users wishing to find another group of users to match against.","type":"object","properties":{"uid":{"default":"randomUUID()","description":"The universally unique identifier of the entity.","type":"string","x-identifier":true},"dateCreated":{"default":"new Date()","description":"The date and time that the entity was created.","format":"date","type":"string"},"dateModified":{"default":"new Date()","description":"The date and time that the entity was last modified.","format":"date","type":"string"},"version":{"default":0,"description":"The optimistic lock version.","type":"number"},"criteria":{"default":[],"description":"The list of criteria to use when filtering other tickets while looking for a match.","type":"array"},"dedicatedServer":{"default":true,"description":"Indicates whether the user will request a dedicated server for the matched session or will self-host (P2P).","type":"boolean"},"hostUid":{"default":"","description":"The UUID of the user that is responsible for maintaining this ticket.","type":"string"},"teamSize":{"description":"The number of users desired for any given team. This can be a number such as `5` or a comparison object defining a range such as `{ gte: 1, lte: 5 }`. \n\nValid comparison operators are `lt`, `lte`, `gt` and `gte`.","type":"object"},"numTeams":{"default":0,"description":"The number of teams desired to be found.","type":"number"},"numUsers":{"default":0,"description":"The number of users represented on the ticket.","type":"number"},"sessionUid":{"description":"The UUID of the session once matchmaking has completed successfully.","type":"string"},"statistics":{"default":[{"name":"skillrating","value":null},{"name":"ip","value":null}],"description":"The list of statistics for all users represented on the ticket.\n\nBy default, all tickets should contain at least two statistics; `skillrating` and `ip`. The `skillrating` value can be either a single number or an array of numbers for each user represented on the ticket. Similarly, the `ip` statistic value can be either a single string or an array of strings containing the IP address for each user represented.","type":"array"},"status":{"default":"INITIALIZING","description":"The current state of the ticket's processing.","type":"string"},"users":{"default":[],"description":"The list of UUIDs for each user represented on the ticket.","type":"array"}},"required":["uid","dateCreated","dateModified","version","criteria","dedicatedServer","hostUid","numTeams","numUsers","statistics","status","users"],"x-baseClass":"BaseMongoEntity","x-datastore":"user"},"models.Persona":{"description":"An `Persona` is a unique persona of a user within the system. Users can have multiple personas per account and the persona can have associated data such as inventory, progress, achievements, etc.","type":"object","properties":{"uid":{"default":"randomUUID()","description":"The universally unique identifier of the entity.","type":"string","x-identifier":true},"dateCreated":{"default":"new Date()","description":"The date and time that the entity was created.","format":"date","type":"string"},"dateModified":{"default":"new Date()","description":"The date and time that the entity was last modified.","format":"date","type":"string"},"version":{"default":0,"description":"The optimistic lock version.","type":"number"},"userUid":{"default":"","description":"The universally unique identifier of the user that the persona belongs to.","type":"string"},"name":{"default":"","description":"The unique name of the persona.","type":"string","x-identifier":true},"description":{"default":"","description":"A textual description of the persona.","type":"string"},"productUid":{"description":"The uid of the product that this server instance is associated with.","type":"string","x-identifier":true},"attributes":{"default":{},"description":"An arbitrary map of key-value pairs containing the characteristics of the persona.","type":"object"}},"required":["uid","dateCreated","dateModified","version","userUid","name","description","attributes"],"x-baseClass":"BaseMongoEntity","x-cache":30,"x-datastore":"user"},"models.PersonaStat":{"description":"The `PersonaStat` is an instance of a specific `PersonaStatDefinition` that is associated with a particular `Persona`.","type":"object","properties":{"uid":{"default":"randomUUID()","description":"The universally unique identifier of the entity.","type":"string","x-identifier":true},"dateCreated":{"default":"new Date()","description":"The date and time that the entity was created.","format":"date","type":"string"},"dateModified":{"default":"new Date()","description":"The date and time that the entity was last modified.","format":"date","type":"string"},"version":{"default":0,"description":"The optimistic lock version.","type":"number"},"statUid":{"default":"","description":"The universally unique identifier of the `PersonaStatDefinition` this object represents.","type":"string"},"personaUid":{"default":"","description":"The universally unique identifier of the `Persona` that this statistic is associated with.","type":"string"},"value":{"description":"The current value of the statistic.","type":"object"}},"required":["uid","dateCreated","dateModified","version","statUid","personaUid"],"x-baseClass":"BaseMongoEntity","x-cache":30,"x-datastore":"user"},"models.PersonaStatDefinition":{"description":"The `PersonaStatDefinition` describes a single statistic that a persona can have.","type":"object","properties":{"uid":{"default":"randomUUID()","description":"The universally unique identifier of the entity.","type":"string","x-identifier":true},"dateCreated":{"default":"new Date()","description":"The date and time that the entity was created.","format":"date","type":"string"},"dateModified":{"default":"new Date()","description":"The date and time that the entity was last modified.","format":"date","type":"string"},"version":{"default":0,"description":"The optimistic lock version.","type":"number"},"name":{"default":"","description":"The universally unique identifier of the user that the persona belongs to.","type":"string","x-identifier":true},"type":{"default":"number","description":"The data type describing how the statistic's value is stored.\n\nPossible values are: `boolean`, `number`, `object`, `string`","type":"string"},"min":{"description":"The minimum possible value that can be used.","type":"object"},"max":{"description":"The maximum possible value that can be used.","type":"object"},"values":{"default":[],"description":"A list of all possible values that can be used.","type":"array"},"default":{"description":"The default value of the stat that will be designed to `Persona` instances.","type":"object"},"productUid":{"description":"The uid of the product that this server instance is associated with.","type":"string","x-identifier":true}},"required":["uid","dateCreated","dateModified","version","name","type","values"],"x-baseClass":"BaseMongoEntity","x-cache":30,"x-datastore":"static"},"models.ArchetypeActivation":{"description":"Describes whether an archetype should be enabled for the given persona.","type":"object","properties":{"enabled":{"default":true,"description":"Set to `true` to enable the archetype for the given persona. Otherwise, set to `false` to disable the archetype.","type":"boolean"}},"required":["enabled"],"x-baseClass":""},"models.ArchetypeDefinition":{"description":"An archetype is a specific subset of one or more skill trees that a persona can elect to follow.","type":"object","properties":{"uid":{"default":"randomUUID()","description":"The universally unique identifier of the entity.","type":"string","x-identifier":true},"dateCreated":{"default":"new Date()","description":"The date and time that the entity was created.","format":"date","type":"string"},"dateModified":{"default":"new Date()","description":"The date and time that the entity was last modified.","format":"date","type":"string"},"version":{"default":0,"description":"The optimistic lock version.","type":"number"},"name":{"default":"","description":"The unique name of the archetype.","type":"string","x-identifier":true},"title":{"default":"","description":"A textual title or name of the archetype.","type":"string"},"description":{"default":"","description":"A textual description of the archetype.","type":"string"},"icon":{"default":"","description":"The icon to display when representing the archetype.","type":"string"},"productUid":{"description":"The uid of the product that this server instance is associated with.","type":"string","x-identifier":true},"skills":{"default":[],"description":"The list of all root skill uid's that define this archetype. A root skill is the first skill in a tree that has few to no requirements.","type":"array"},"data":{"default":null,"description":"Stores any custom data to be used by the product.","type":"object"}},"required":["uid","dateCreated","dateModified","version","name","title","description","icon","skills","data"],"x-baseClass":"BaseMongoEntity","x-cache":30,"x-datastore":"static"},"models.Skill":{"description":"Tracks the progress of a specific skill for a given persona and archetype.","type":"object","properties":{"uid":{"default":"randomUUID()","description":"The universally unique identifier of the entity.","type":"string","x-identifier":true},"dateCreated":{"default":"new Date()","description":"The date and time that the entity was created.","format":"date","type":"string"},"dateModified":{"default":"new Date()","description":"The date and time that the entity was last modified.","format":"date","type":"string"},"version":{"default":0,"description":"The optimistic lock version.","type":"number"},"archetypeUid":{"default":"","description":"The unique identifier of the archetype associated with the persona and skill.","type":"string"},"skillUid":{"default":"","description":"The unique identifier of the skill being tracked.","type":"string"},"personaUid":{"default":"","description":"The unique identifier of the persona whose skill progress is being tracked.","type":"string"},"productUid":{"description":"The uid of the product that this server instance is associated with.","type":"string"},"enabled":{"default":true,"description":"Indicates if the skill is currently enabled and should be tracked if not already unlocked.","type":"boolean"},"progress":{"default":[],"description":"The persona's current progress towards unlocking the skill.","type":"array"},"unlocked":{"default":false,"description":"Indicates if the persona has unlocked and can begin the skill.","type":"boolean"}},"required":["uid","dateCreated","dateModified","version","archetypeUid","skillUid","personaUid","enabled","progress","unlocked"],"x-baseClass":"BaseMongoEntity","x-cache":30,"x-datastore":"user"},"models.SkillDefinition":{"type":"object","properties":{"uid":{"default":"randomUUID()","description":"The universally unique identifier of the entity.","type":"string","x-identifier":true},"dateCreated":{"default":"new Date()","description":"The date and time that the entity was created.","format":"date","type":"string"},"dateModified":{"default":"new Date()","description":"The date and time that the entity was last modified.","format":"date","type":"string"},"version":{"default":0,"description":"The optimistic lock version.","type":"number"},"name":{"default":"","description":"The unique name of the skill.","type":"string","x-identifier":true},"title":{"default":"","description":"A textual title or name of the skill.","type":"string"},"description":{"default":"","description":"A textual description of the skill.","type":"string"},"icon":{"default":"","description":"The icon to display when representing the skill.","type":"string"},"productUid":{"description":"The uid of the product that this server instance is associated with.","type":"string","x-identifier":true},"requirements":{"default":[],"description":"The list of requirements that the persona must fulfill to unlock the skill.","type":"array"},"data":{"default":null,"description":"Stores any custom data to be used by the product.","type":"object"}},"required":["uid","dateCreated","dateModified","version","name","title","description","icon","requirements","data"],"x-baseClass":"BaseMongoEntity","x-cache":30,"x-datastore":"static"},"models.SkillRequirement":{"type":"object","properties":{"type":{"default":"","description":"The unique identifier that will be used to match telemetry events.","type":"string"},"title":{"default":"","description":"The textual title or name of the requirement.","type":"string"},"description":{"default":"","description":"The textual description of the requirement.","type":"string"},"icon":{"default":"","description":"The icon to display for the requirement.","type":"string"},"value":{"default":null,"description":"The value that must be met in order for the requirement to be fulfilled.","type":"object"}},"required":["type","title","description","icon","value"],"x-baseClass":""},"models.SkillRequirementProgress":{"type":"object","properties":{"complete":{"default":false,"description":"Indicates if the requirement has been met.","type":"boolean"},"type":{"default":"","description":"The unique identifier that will be used to match telemetry events.","type":"string"},"value":{"default":null,"description":"The current value of the player's progress.","type":"object"}},"required":["complete","type","value"],"x-baseClass":""},"ScriptMongo":{"type":"object","properties":{"uid":{"default":"randomUUID()","description":"The universally unique identifier of the entity.","type":"string","x-identifier":true},"dateCreated":{"default":"new Date()","description":"The date and time that the entity was created.","format":"date","type":"string"},"dateModified":{"default":"new Date()","description":"The date and time that the entity was last modified.","format":"date","type":"string"},"version":{"default":0,"description":"The optimistic lock version.","type":"number"},"checksum":{"default":"","type":"string"},"comments":{"default":"","type":"string"},"data":{"default":"","type":"string"},"deleted":{"default":false,"type":"boolean"},"filename":{"default":"","type":"string","x-identifier":true},"language":{"default":"js","type":"string"},"name":{"default":"","type":"string","x-identifier":true},"published":{"default":false,"type":"boolean"},"source":{"default":1,"type":"number"},"type":{"default":0,"type":"number"}},"required":["uid","dateCreated","dateModified","version","checksum","comments","data","deleted","filename","language","name","published","source","type"],"x-baseClass":"BaseMongoEntity","x-datastore":"scripts","x-versioned":-1},"models.AssignServerInstance":{"description":"Describes a request to assign a new server instance for a given session.","type":"object","properties":{"assignmentId":{"default":"","description":"The UUID of the Session or Shard to request a server instance for. Values should be encoded with the object type followed by a colon and then the UUID (e.g. `session:00000000-0000-0000-0000-000000000000`). Accepted value types are `session` and `shard`.","type":"string"},"buildVersion":{"default":"","description":"The build version of the server instance desired.","type":"string"},"initOptions":{"default":[],"description":"A list of options that the server instance should initialize itself with.","type":"array"},"regions":{"default":[],"description":"The list of preferred server regions, in order from most desirable to least.","type":"array"},"tags":{"default":[],"description":"A list of descriptive labels that the requested server must have.","type":"array"},"productUid":{"description":"The uid of the product to find a server instance of.","type":"string"}},"required":["assignmentId","buildVersion","initOptions","regions","tags"],"x-baseClass":""},"models.Message":{"description":"The `Message` is a persistent message or notification sent from one user to another.","type":"object","properties":{"uid":{"default":"randomUUID()","description":"The universally unique identifier of the entity.","type":"string","x-identifier":true},"dateCreated":{"default":"new Date()","description":"The date and time that the entity was created.","format":"date","type":"string"},"dateModified":{"default":"new Date()","description":"The date and time that the entity was last modified.","format":"date","type":"string"},"version":{"default":0,"description":"The optimistic lock version.","type":"number"},"receiverUid":{"default":"","description":"The unique identifier of the user that is to receive the message.","type":"string"},"senderUid":{"default":"","description":"The unique identifier of the user that sent the message.","type":"string"},"subject":{"default":"","description":"The summary of the message contents.","type":"string"},"body":{"default":"","description":"The message contents.","type":"string"},"attachments":{"description":"A map of key-value pairs representing a list of attachments that have been appended to the message. The key of each pair is the name of the attachment, and the value must be an encoded string. \n\nThe string can represent any data including binary data using base64 encoding.","type":"object"},"hasRead":{"default":false,"description":"Indicates if the user has read the message before.","type":"boolean"}},"required":["uid","dateCreated","dateModified","version","receiverUid","senderUid","subject","body","hasRead"],"x-baseClass":"BaseMongoEntity","x-cache":30,"x-datastore":"user","x-shard":{"key":{"uid":1},"unique":false,"options":{}}},"models.PrivateMessage":{"description":"The `PrivateMessage` is an instant message or notification sent from one user to another.","type":"object","properties":{"uid":{"default":"randomUUID()","description":"The universally unique identifier of the entity.","type":"string","x-identifier":true},"dateCreated":{"default":"new Date()","description":"The date and time that the entity was created.","format":"date","type":"string"},"dateModified":{"default":"new Date()","description":"The date and time that the entity was last modified.","format":"date","type":"string"},"version":{"default":0,"description":"The optimistic lock version.","type":"number"},"senderUid":{"default":"","description":"The unique identifier of the user that sent the message.","type":"string"},"data":{"description":"The message contents.","$ref":"#/components/schemas/Buffer"},"mimeType":{"default":"text/plain","description":"The encoding type of the message data.","type":"string"},"type":{"default":"TEXT","description":"The type of message data.","type":"string"}},"required":["uid","dateCreated","dateModified","version","senderUid","mimeType","type"],"x-baseClass":"BaseEntity"},"models.Profile":{"description":"An `Profile` is an object containing a user's specific social metadata and information. Each profile can have an alias name by which to identify the user other than their real name. A `data` property is provided to allow for an arbitrary storage of any metadata desired by the application. A `presence` property is also provided for storing the applications-specific current online state of the user.","type":"object","properties":{"uid":{"default":"randomUUID()","description":"The universally unique identifier of the entity.","type":"string","x-identifier":true},"dateCreated":{"default":"new Date()","description":"The date and time that the entity was created.","format":"date","type":"string"},"dateModified":{"default":"new Date()","description":"The date and time that the entity was last modified.","format":"date","type":"string"},"version":{"default":0,"description":"The optimistic lock version.","type":"number"},"alias":{"default":"","description":"The non-unique alternate name of the user.","type":"string"},"avatar":{"default":"","description":"The URL, asset uid or another global identifier that references the user's avatar.","type":"string"},"data":{"description":"An arbitrary map of key-value pairs containing the metadata of the profile.","type":"object"},"presence":{"description":"An object containing encoded data about a user's current online state.","type":"object"}},"required":["uid","dateCreated","dateModified","version","alias","avatar"],"x-baseClass":"BaseMongoEntity","x-cache":30,"x-datastore":"user","x-shard":{"key":{"uid":1},"unique":false,"options":{}}},"models.UserLink":{"type":"object","properties":{"uid":{"default":"randomUUID()","description":"The universally unique identifier of the entity.","type":"string","x-identifier":true},"dateCreated":{"default":"new Date()","description":"The date and time that the entity was created.","format":"date","type":"string"},"dateModified":{"default":"new Date()","description":"The date and time that the entity was last modified.","format":"date","type":"string"},"version":{"default":0,"description":"The optimistic lock version.","type":"number"},"userUid":{"default":"","description":"The unique identifier of the user that owns the link.","type":"string"},"otherUid":{"default":"","description":"The unique identifier of the other user the link is for.","type":"string"},"alias":{"default":"","description":"The user defined alias that describes this relationship. (e.g., MyBFF, GuyIHateMost)","type":"string"},"type":{"default":"FOLLOW","description":"The type of the link.","type":"string"},"data":{"description":"An arbitrary field for storing custom metadata.","type":"object"}},"required":["uid","dateCreated","dateModified","version","userUid","otherUid","alias","type"],"x-baseClass":"BaseMongoEntity","x-cache":30,"x-datastore":"user","x-shard":{"key":{"uid":1},"unique":false,"options":{}}},"models.Event":{"description":"Describes a single telemetry event. A telemetry event is when something occurs in the system.","type":"object","properties":{"uid":{"default":"randomUUID()","description":"The universally unique identifier of the entity.","type":"string","x-identifier":true},"environment":{"default":"prod","description":"The name of the environment that the event originated from. This is typically `dev` or `prod`.","type":"string"},"origin":{"default":"","description":"The unique name of the service or client that the event originated from.","type":"string"},"timestamp":{"default":"2024-09-19T20:07:25.779Z","description":"The date and time that the event occurred.","format":"date","type":"string"},"type":{"default":"","description":"The type of event being recorded.","type":"string"},"userId":{"default":"","description":"The universally unique identifier of the user that sent the event.","type":"string"},"data":{"default":{},"description":"Stores all custom fields","type":"object"}},"required":["uid","environment","origin","timestamp","type","userId","data"],"x-baseClass":"SimpleMongoEntity","x-cache":30,"x-datastore":"user","x-shard":{"key":{"uid":1},"unique":false,"options":{}}},"models.Asset":{"description":"Describes a single digital asset that has been stored on a remote storage provider.","type":"object","properties":{"uid":{"default":"randomUUID()","description":"The universally unique identifier of the entity.","type":"string","x-identifier":true},"dateCreated":{"default":"new Date()","description":"The date and time that the entity was created.","format":"date","type":"string"},"dateModified":{"default":"new Date()","description":"The date and time that the entity was last modified.","format":"date","type":"string"},"version":{"default":0,"description":"The optimistic lock version.","type":"number"},"deleted":{"default":false,"type":"boolean"},"checksum":{"default":"","description":"The checksum of the asset's contents. The value is of the form `<alg>:<hash>` where `<alg>` is the hash algorithm used and `<hash>` is the value of the asset's checksum.","example":"sha512:f03298r0982309r8320r8028f3oajfoiqiuf093q2uf908u2fjqfa980yu9` represents a `SHA512` hash with value `f03298r0982309r8320r8028f3oajfoiqiuf093q2uf908u2fjqfa980yu9","type":"string"},"metadata":{"description":"A map of key-value pairs containing additional metadata about the asset.","type":"object"},"mimetype":{"default":"","description":"The type of data that the asset contains.","type":"string"},"name":{"default":"","description":"The unique name of the asset.","type":"string","x-identifier":true},"ownerUid":{"default":"","description":"The universally unique identifier of the user that owns the asset.","type":"string"},"size":{"default":0,"description":"The total size of the asset in bytes.","type":"number"},"url":{"default":"","description":"The universal resource location of the asset.","example":"it's location on the Internet or local filesystem.","type":"string"}},"required":["uid","dateCreated","dateModified","version","deleted","checksum","mimetype","name","ownerUid","size","url"],"x-baseClass":"RecoverableBaseMongoEntity","x-datastore":"user","x-shard":{"key":{"uid":1},"unique":false,"options":{}},"x-versioned":-1},"models.Quest":{"description":"Tracks the progress of a specific quest for a given persona or user.","type":"object","properties":{"uid":{"default":"randomUUID()","description":"The universally unique identifier of the entity.","type":"string","x-identifier":true},"dateCreated":{"default":"new Date()","description":"The date and time that the entity was created.","format":"date","type":"string"},"dateModified":{"default":"new Date()","description":"The date and time that the entity was last modified.","format":"date","type":"string"},"version":{"default":0,"description":"The optimistic lock version.","type":"number"},"questUid":{"default":"","description":"The unique identifier of the quest being tracked.","type":"string"},"personaUid":{"default":"","description":"The unique identifier of the persona or user whose quest progress is being tracked.","type":"string"},"productUid":{"description":"The uid of the product that this quest progress is associated with.","type":"string"},"progress":{"default":[],"description":"The persona's current progress for each of the quest requirements.","oneOf":[{"default":[],"description":"The persona's current progress for each of the quest requirements.","type":"array"},{"$ref":"#/components/schemas/models.QuestProgress"}]},"completions":{"default":0,"description":"The number of times that the quest has been completed by the persona.","type":"number"},"dateLastCompleted":{"description":"The date and time that the persona last completed the quest.","format":"date","type":"string"},"dateLastStarted":{"description":"The date and time that the persona last started the quest.","format":"date","type":"string"},"unlocked":{"default":false,"description":"Indicates if the persona has unlocked and can begin the quest.","type":"boolean"},"unlockProgress":{"default":[],"description":"The persona's current progress towards unlocking the quest.","oneOf":[{"default":[],"description":"The persona's current progress towards unlocking the quest.","type":"array"},{"$ref":"#/components/schemas/models.QuestProgress"}]}},"required":["uid","dateCreated","dateModified","version","questUid","personaUid","progress","completions","unlocked","unlockProgress"],"x-baseClass":"BaseMongoEntity","x-cache":30,"x-datastore":"user"},"models.QuestDefinition":{"description":"Describes a single quest.","type":"object","properties":{"uid":{"default":"randomUUID()","description":"The universally unique identifier of the entity.","type":"string","x-identifier":true},"dateCreated":{"default":"new Date()","description":"The date and time that the entity was created.","format":"date","type":"string"},"dateModified":{"default":"new Date()","description":"The date and time that the entity was last modified.","format":"date","type":"string"},"version":{"default":0,"description":"The optimistic lock version.","type":"number"},"name":{"default":"","description":"The unique name of the quest.","type":"string","x-identifier":true},"title":{"default":"","description":"A textual title or name of the quest.","type":"string"},"description":{"default":"","description":"A textual description of the quest.","type":"string"},"icon":{"default":"","description":"The icon to display when representing the quest.","type":"string"},"entityUid":{"description":"The universally unique identifier of the entity that gives out the quest.","type":"string"},"productUid":{"description":"The uid of the product that this definition is associated with.","type":"string","x-identifier":true},"requirements":{"default":[],"description":"The list of requirements that the persona must fulfill to complete the quest.","oneOf":[{"default":[],"description":"The list of requirements that the persona must fulfill to complete the quest.","type":"array"},{"$ref":"#/components/schemas/models.QuestRequirement"}]},"rewards":{"default":[],"description":"The list of rewards that will be given once the quest has been completed.","oneOf":[{"default":[],"description":"The list of rewards that will be given once the quest has been completed.","type":"array"},{"$ref":"#/components/schemas/models.QuestReward"}]},"dateAvailable":{"description":"The date and time that the quest will be first made available. A `null` value indicates immediately available.","format":"date","type":"string"},"dateFinished":{"description":"The date and time that the quest will no longer be available. A `null` value indicates no end date.","format":"date","type":"string"},"frequency":{"description":"The frequency that the quest can be repeated (e.g. 5m, 1h, 1w). A `null` value indicates that the quest cannot be repeated.","type":"string"},"unlockRequirements":{"default":[],"description":"The list of requirements that the persona must meet to unlock the quest.","oneOf":[{"default":[],"description":"The list of requirements that the persona must meet to unlock the quest.","type":"array"},{"$ref":"#/components/schemas/models.QuestRequirement"}]},"autostart":{"default":false,"description":"Set to `true` to have quests automatically start tracking progress once unlocked, otherwise set to `false`. Default value is `false`.","type":"boolean"},"data":{"description":"Stores any custom data to be used by the product.","type":"object"}},"required":["uid","dateCreated","dateModified","version","name","title","description","icon","requirements","rewards","unlockRequirements","autostart"],"x-baseClass":"BaseMongoEntity","x-cache":30,"x-datastore":"static"},"models.QuestProgress":{"description":"Tracks the persona's progress of a single requirement for a given quest.","type":"object","properties":{"complete":{"default":false,"description":"Indicates if the requirement has been met.","type":"boolean"},"type":{"default":"","description":"The unique identifier that will be used to match telemetry events.","type":"string"},"value":{"default":null,"description":"The current value of the player's progress.","type":"object"}},"required":["complete","type","value"],"x-baseClass":""},"models.QuestRequirement":{"description":"Defines a single requirement that must be met to fulfill a quest.","type":"object","properties":{"type":{"default":"","description":"The unique identifier that will be used to match telemetry events.","type":"string"},"title":{"default":"","description":"The textual title or name of the requirement.","type":"string"},"description":{"default":"","description":"The textual description of the requirement.","type":"string"},"icon":{"default":"","description":"The icon to display for the quest.","type":"string"},"value":{"default":null,"description":"The value that must be met in order for the requirement to be fulfilled.","type":"object"}},"required":["type","title","description","icon","value"],"x-baseClass":""},"models.QuestReward":{"description":"Defines a single reward that will be given once a quest is fulfilled.","type":"object","properties":{"type":{"default":"PROGRESS","description":"The type of reward that will be given.","type":"string"},"quantity":{"default":0,"description":"The quantity amount to reward.","type":"number"},"entityUid":{"description":"The universally unique identifier of the entity that will be rewarded.","type":"string"}},"required":["type","quantity"],"x-baseClass":""},"models.File":{"description":"Describes a single uploaded file included in a crash report.","type":"object","properties":{"mimetype":{"default":"","description":"The type of data that the file contains.","type":"string"},"name":{"default":"","description":"The unique name of the file.","type":"string"},"size":{"default":0,"description":"The total size of the file in bytes.","type":"number"},"checksum":{"default":"","description":"The checksum of the file's contents. The value is of the form `<alg>:<hash>` where `<alg>` is the hash algorithm used and `<hash>` is the value of the file's checksum. ","example":"E.g., `sha512:f03298r0982309r8320r8028f3oajfoiqiuf093q2uf908u2fjqfa980yu9` represents a `SHA512` hash with value `f03298r0982309r8320r8028f3oajfoiqiuf093q2uf908u2fjqfa980yu9`.","type":"string"},"url":{"default":"","description":"The universal resource location of the file. e.g. it's location on the Internet or local filesystem.","type":"string"}},"required":["mimetype","name","size","checksum","url"],"x-baseClass":""},"models.Report":{"description":"Describes a single event as reported by a user client or server application.","type":"object","properties":{"uid":{"default":"randomUUID()","description":"The universally unique identifier of the entity.","type":"string","x-identifier":true},"dateCreated":{"default":"new Date()","description":"The date and time that the entity was created.","format":"date","type":"string"},"dateModified":{"default":"new Date()","description":"The date and time that the entity was last modified.","format":"date","type":"string"},"version":{"default":0,"description":"The optimistic lock version.","type":"number"},"app":{"default":"","description":"The name of the application that the report originated from.","type":"string"},"appVersion":{"default":"","description":"The version string of the app that the report originated from.","type":"string"},"architecture":{"default":"","description":"The architecture of the device running the application that the report originated from.","type":"string"},"comments":{"default":"","description":"User provided comments detailing the problem being reported.","type":"string"},"environment":{"default":"","description":"The build or environment type of the application that generated the crash. (e.g. Debug, Release, Shipping, etc.)","type":"string"},"files":{"default":[],"description":"A list of files that have been included in the report.","type":"array"},"metadata":{"default":null,"description":"An arbitrary map containing additional metadata about the crash.","type":"object"},"platform":{"default":"","description":"The platform type of the device running the application that crashed.","type":"string"},"type":{"default":"OTHER","description":"The type of information contained in the report.","type":"string"},"userUid":{"default":"","description":"The uid of the user that created the report (where applicable).","type":"string"}},"required":["uid","dateCreated","dateModified","version","app","appVersion","architecture","comments","environment","files","metadata","platform","type","userUid"],"x-baseClass":"BaseMongoEntity","x-datastore":"user"},"models.ReportStorageLocation":{"description":"Defines a single location of remote storage that will be used to maintain crash dumps.","type":"object","properties":{"uid":{"default":"randomUUID()","description":"The universally unique identifier of the entity.","type":"string","x-identifier":true},"dateCreated":{"default":"new Date()","description":"The date and time that the entity was created.","format":"date","type":"string"},"dateModified":{"default":"new Date()","description":"The date and time that the entity was last modified.","format":"date","type":"string"},"version":{"default":0,"description":"The optimistic lock version.","type":"number"},"name":{"default":"","description":"The unique name of the storage location.","type":"string","x-identifier":true},"description":{"default":"","description":"A textual description of the storage location.","type":"string"},"accessKey":{"default":"","description":"The API access key to authenticate with the remote server with.","type":"string"},"active":{"default":true,"description":"Indicates if the backup location is currently active for storing database snapshots.\n\n An inactive location can still be used to search and retrieve existing snapshots.","type":"boolean"},"bucket":{"default":"","description":"The name of the remote storage bucket.","type":"string"},"host":{"default":"","description":"The host of the remote storage provider.","type":"string"},"options":{"default":null,"description":"Additional configuration options used by the storage provider.","type":"object"},"path":{"default":"","description":"The path prefix or sub-directory to store files.","type":"string"},"provider":{"default":"LOCAL","description":"Describes the provider type of storage location.","type":"string"},"region":{"default":"","description":"The region that the bucket is located in. Note this is not supported by all providers.","type":"string"},"secret":{"default":"","description":"The API secret to authenticate with the remote server with.","type":"string"},"url":{"default":"","description":"The public base URL that crash reports stored in this location will use.","type":"string"}},"required":["uid","dateCreated","dateModified","version","name","description","accessKey","active","bucket","host","options","path","provider","region","secret","url"],"x-baseClass":"BaseMongoEntity","x-datastore":"static"},"models.ServerInstance":{"description":"Describes a single server instance.","type":"object","properties":{"uid":{"default":"randomUUID()","description":"The universally unique identifier of the entity.","type":"string","x-identifier":true},"dateCreated":{"default":"new Date()","description":"The date and time that the entity was created.","format":"date","type":"string"},"dateModified":{"default":"new Date()","description":"The date and time that the entity was last modified.","format":"date","type":"string"},"version":{"default":0,"description":"The optimistic lock version.","type":"number"},"assignmentId":{"description":"The type and uid of the server's assignment (E.g., Shard or Session). The value takes the format[session|shard]:<uid>(e.g. `session:570d4dbe-4d57-4f80-aa74-4948248772a0`","type":"string"},"buildVersion":{"default":"","description":"The build version of the server instance.","type":"string"},"initOptions":{"default":[],"description":"A list of options that the server will initialize itself with when a session is assigned.","type":"array"},"lastHeartbeat":{"default":"2024-09-19T20:06:14.946Z","description":"The date and time that the server instance last sent a heartbeat.","format":"date","type":"string"},"ownerUid":{"default":"","description":"The uid of the user that created and owns the server instance.","type":"string"},"productUid":{"description":"The uid of the product that this server instance is associated with.","type":"string"},"region":{"default":"","description":"The name of the region that the server instance is running in.","type":"string"},"status":{"default":"STARTING","description":"The current runtime status of the server instance.","type":"string"},"tags":{"default":[],"description":"A list of descriptive labels associated with the server.","type":"array"},"url":{"default":"","description":"The URL that clients use to establish a connection to the server.","type":"string"}},"required":["uid","dateCreated","dateModified","version","buildVersion","initOptions","lastHeartbeat","ownerUid","region","status","tags","url"],"x-baseClass":"BaseMongoEntity","x-cache":30,"x-datastore":"user","x-shard":{"key":{"uid":1},"unique":false,"options":{}}},"models.ScalingPolicy":{"description":"Defines a single policy that determines how one or more zones will scale the number of available shards.","type":"object","properties":{"uid":{"default":"randomUUID()","description":"The universally unique identifier of the entity.","type":"string","x-identifier":true},"dateCreated":{"default":"new Date()","description":"The date and time that the entity was created.","format":"date","type":"string"},"dateModified":{"default":"new Date()","description":"The date and time that the entity was last modified.","format":"date","type":"string"},"version":{"default":0,"description":"The optimistic lock version.","type":"number"},"name":{"default":"","description":"The unique name of the object.","type":"string","x-identifier":true},"action":{"default":"ADD","description":"Indicates the scaling action that will be performed. Default is `ADD`.","type":"string"},"amount":{"default":1,"description":"The amount of resources that will be applied when the scaling action occurs.","type":"number"},"appliesTo":{"default":"ZONE","description":"Indicates the scaling action that will be performed. Default is `ZONE`.","type":"string"},"cooldown":{"default":"1m","description":"The amount of time to wait, in seconds, before this scaling policy will take effect again.","type":"string"},"cooldownFilters":{"default":["/.*/"],"description":"The list of other policy names or regular expressions to check when applying the cooldown. \n\n By default, matches with any other scaling policy.","type":"array"},"maxPopulation":{"default":1,"description":"The maximum percentage of the total shard population that triggers this policy.","type":"number"},"minPopulation":{"default":0.5,"description":"The minimum percentage of the total shard population that triggers this policy.","type":"number"},"zones":{"default":[],"description":"The list of zone uid's that the scaling rule applies to. If empty, then apply to all zones.","type":"array"}},"required":["uid","dateCreated","dateModified","version","name","action","amount","appliesTo","cooldown","cooldownFilters","maxPopulation","minPopulation","zones"],"x-baseClass":"BaseMongoEntity","x-cache":30,"x-datastore":"static"},"models.Shard":{"description":"A shard is a representation of a zone with a physical/network location that players can connect to. Shards have a one-to-one relationship with game server instances.","type":"object","properties":{"uid":{"default":"randomUUID()","description":"The universally unique identifier of the entity.","type":"string","x-identifier":true},"dateCreated":{"default":"new Date()","description":"The date and time that the entity was created.","format":"date","type":"string"},"dateModified":{"default":"new Date()","description":"The date and time that the entity was last modified.","format":"date","type":"string"},"version":{"default":0,"description":"The optimistic lock version.","type":"number"},"buildVersion":{"default":"","description":"The build version that the associated server instance is running.","type":"string"},"data":{"default":null,"description":"A map of arbitrary data.","type":"object"},"lastHeartbeat":{"default":"2024-09-19T20:06:25.094Z","description":"The last time that the associated server instance made contact with the service.","format":"date","type":"string"},"maxUsers":{"default":0,"description":"The maximum number of users that can join the shard.","type":"number"},"numUsers":{"default":0,"description":"The current number of users that have joined the shard.","type":"number"},"region":{"default":"","description":"The name of the region that the associated server instance is running in.","type":"string"},"status":{"default":"INITIALIZING","description":"The current availability status of the shard.","type":"string"},"tags":{"default":[],"description":"A list of descriptive labels that describes the shard, as inherited from the Zone and server instance.","type":"array"},"url":{"default":"","description":"The URL that players use to connect to the associated server instance.","type":"string"},"users":{"default":[],"description":"The list of user id's that are joined to this shard.","type":"array"},"zoneUid":{"default":"","description":"The zone id that the shard belongs to.","type":"string"}},"required":["uid","dateCreated","dateModified","version","buildVersion","data","lastHeartbeat","maxUsers","numUsers","region","status","tags","url","users","zoneUid"],"x-baseClass":"BaseMongoEntity","x-cache":30,"x-datastore":"user","x-shard":{"key":{"uid":1},"unique":false,"options":{}}},"models.Zone":{"description":"A zone is a representation of a particular place or region in a virtual world. Zones can be connected to others, creating a network of traversable spaces.","type":"object","properties":{"uid":{"default":"randomUUID()","description":"The universally unique identifier of the entity.","type":"string","x-identifier":true},"dateCreated":{"default":"new Date()","description":"The date and time that the entity was created.","format":"date","type":"string"},"dateModified":{"default":"new Date()","description":"The date and time that the entity was last modified.","format":"date","type":"string"},"version":{"default":0,"description":"The optimistic lock version.","type":"number"},"name":{"default":"","description":"The unique name of the zone.","type":"string","x-identifier":true},"adjacent":{"default":[],"description":"The list of other zone id's that are adjacent and directly reachable from this zone.","type":"array"},"allowed":{"default":[],"description":"The list of user id's and role names that always have permission to join this zone. Supports regex patterns. Supersedes the `denied` list.","type":"array"},"autoCreateShards":{"default":true,"description":"Set to true to have the service automatically create shards based on population demand, otherwise set to false.","type":"boolean"},"data":{"default":{"buildVersions":[],"initOptions":[]},"description":"A map of arbitrary data. Each zone must define two properties in this field; `buildVersions` and `initOptions`. These are necessary to automatically create Shards with the necessary server information. Optionally, a third field `regions` may be specified which will limit Shard creation to only the regions specified.","type":"object"},"denied":{"default":[],"description":"The list of UID and role names that do not have permission to join this zone. Supports regex patterns.","type":"array"},"description":{"default":"","description":"The textual description of the zone.","type":"string"},"desiredShards":{"default":{},"description":"The number of shards that are presently desired for this zone, expressed as a map of region name to number.","type":"object"},"maxShards":{"default":-1,"description":"The maximum number of shards that can be created for this zone. If set to `-1` there is no limit.","type":"number"},"maxShardUsers":{"default":100,"description":"The maximum number of users that can join any given shard for this zone.","type":"number"},"minShards":{"default":1,"description":"The minimum number of shards that can be created for this zone.","type":"number"},"productUid":{"description":"The uid of the product that this server instance is associated with.","type":"string","x-identifier":true},"tags":{"default":[],"description":"A list of descriptive labels that describes the zone.","type":"array"},"title":{"default":"","description":"The textual name of the zone to display to users.","type":"string"}},"required":["uid","dateCreated","dateModified","version","name","adjacent","allowed","autoCreateShards","data","denied","description","desiredShards","maxShards","maxShardUsers","minShards","tags","title"],"x-baseClass":"BaseMongoEntity","x-cache":30,"x-datastore":"static"},"models.Address":{"description":"Describes a physical mailing address.","type":"object","properties":{"address1":{"default":"","description":"The first line of the address (typically street).","type":"string"},"address2":{"default":"","description":"The second line of the address (typically suite, apt, unit).","type":"string"},"city":{"default":"","description":"The name of the city.","type":"string"},"state":{"default":"","description":"The name of the state or province.","type":"string"},"country":{"default":"","description":"The code for the country of origin.","type":"string"},"zip":{"default":"","description":"The postal code of the address.","type":"string"}},"required":["address1","address2","city","state","country","zip"],"x-baseClass":""},"models.AppleReceipt":{"description":"Describes an in-app product purchase made with the Apple Store.","type":"object","properties":{"receipt":{"default":"","description":"The Apple receipt to validate.","type":"string"}},"required":["receipt"],"x-baseClass":""},"models.Contact":{"description":"Describes a single person or entity that may be contacted about an account.","type":"object","properties":{"uid":{"default":"randomUUID()","description":"The universally unique identifier of the entity.","type":"string","x-identifier":true},"dateCreated":{"default":"new Date()","description":"The date and time that the entity was created.","format":"date","type":"string"},"dateModified":{"default":"new Date()","description":"The date and time that the entity was last modified.","format":"date","type":"string"},"version":{"default":0,"description":"The optimistic lock version.","type":"number"},"name":{"default":"","description":"The full name of the contact.","type":"string"},"title":{"default":"","description":"The title or relationship of the contact to the company.","type":"string"},"company":{"default":"","description":"The legal name of the company.","type":"string"},"address":{"default":null,"description":"The physical mailing address for the contact.","$ref":null},"email":{"default":"","description":"The e-mail address of the contact.","type":"string"},"phone":{"default":"","description":"The phone number of the contact.","type":"string"},"fax":{"default":"","description":"The fax number of the contact.","type":"string"}},"required":["uid","dateCreated","dateModified","version","name","title","company","address","email","phone","fax"],"x-baseClass":"BaseMongoEntity","x-cache":30,"x-datastore":"user","x-shard":{"key":{"uid":1},"unique":false,"options":{}}},"models.GoogleReceipt":{"description":"Describes an in-app product purchase made with the Google Play Store.","type":"object","properties":{"packageName":{"default":"","description":"The unique name of the app or package involved in the purchase.","type":"string"},"productId":{"default":"","description":"The unique identifier of the product that was purchased.","type":"string"},"token":{"default":"","description":"The Google Play token to validate.","type":"string"},"type":{"default":"product","description":"Indicates whether the purchase is for a `product` or `subscription`.","type":"string"}},"required":["packageName","productId","token","type"],"x-baseClass":""},"models.LaunchProfile":{"description":"Describes a grouped series of command arguments belonging to a Product to apply to the Product upon launching through Xsolla Backend's launcher.","type":"object","properties":{"uid":{"default":"randomUUID()","description":"The universally unique identifier of the entity.","type":"string","x-identifier":true},"dateCreated":{"default":"new Date()","description":"The date and time that the entity was created.","format":"date","type":"string"},"dateModified":{"default":"new Date()","description":"The date and time that the entity was last modified.","format":"date","type":"string"},"version":{"default":0,"description":"The optimistic lock version.","type":"number"},"name":{"default":"","description":"The unique name of the profile.","type":"string","x-identifier":true},"title":{"default":"","description":"The name to display to the user.","type":"string"},"description":{"default":"","description":"The description of the launch profile","type":"string"},"cmd":{"default":"","description":"The launch command to execute","type":"string"},"args":{"default":[],"description":"The list of arguments to be applied to the Product upon on launch","type":"array"},"roles":{"default":[],"description":"The list of roles the user needs to have to access the launch profile","type":"array"},"webLaunchable":{"default":false,"description":"If the launch profile is able to be launched on the web app or not.","type":"boolean"}},"required":["uid","dateCreated","dateModified","version","name","title","description","cmd","args","roles","webLaunchable"],"x-baseClass":"BaseMongoEntity","x-cache":30,"x-datastore":"static"},"models.Order":{"description":"A detailed list of products and services that a customer wishes to or has purchased.","type":"object","properties":{"uid":{"default":"randomUUID()","description":"The universally unique identifier of the entity.","type":"string","x-identifier":true},"dateCreated":{"default":"new Date()","description":"The date and time that the entity was created.","format":"date","type":"string"},"dateModified":{"default":"new Date()","description":"The date and time that the entity was last modified.","format":"date","type":"string"},"version":{"default":0,"description":"The optimistic lock version.","type":"number"},"id":{"default":0,"description":"The unique order number.","type":"number","x-identifier":true},"items":{"default":[],"description":"The list of all items, of products and services included.","type":"array"},"promoCode":{"default":null,"description":"The unique identifier of the promotional code to apply to this order.","type":"string"},"referral":{"default":"","description":"The unique identifier of the third party that referred this subscription sale.","type":"string"},"subtotal":{"default":0,"description":"The sum number of all items listed in the order.","type":"number"},"tax":{"default":0,"description":"The tax to apply, if applicable, expressed as a percent.","type":"number"},"total":{"default":0,"description":"The total amount to be paid.","type":"number"},"status":{"default":"CREATED","description":"The current processing status of the order.","type":"string"},"walletUid":{"default":"","description":"The unique identifier of the wallet that wants to purchase the order.","type":"string"}},"required":["uid","dateCreated","dateModified","version","id","items","promoCode","referral","subtotal","tax","total","status","walletUid"],"x-baseClass":"BaseMongoEntity","x-cache":30,"x-datastore":"user","x-shard":{"key":{"uid":1},"unique":false,"options":{}}},"models.OrderItem":{"description":"A line item of an order for a particular service or product.","type":"object","properties":{"productUid":{"default":"","description":"The unique identifier of the desired product or service.","type":"string"},"currency":{"default":"usd","description":"The form of currency pertaining to the price.","type":"string"},"description":{"default":"","description":"The detailed description of the desired product or service.","type":"string"},"listPrice":{"default":0,"description":"The original listed price of the product.","type":"number"},"price":{"default":0,"description":"The adjusted price after discounts have been applied.","type":"number"},"quantity":{"default":0,"description":"The quantity of the product desired.","type":"number"},"renewal":{"default":false,"description":"Indicates if this item represents a renewal of an existing product or service.","type":"boolean"}},"required":["productUid","currency","description","listPrice","price","quantity","renewal"],"x-baseClass":""},"models.Payment":{"description":"Tracks the lifecycle of a payment for a given customer.","type":"object","properties":{"uid":{"default":"randomUUID()","description":"The universally unique identifier of the entity.","type":"string","x-identifier":true},"dateCreated":{"default":"new Date()","description":"The date and time that the entity was created.","format":"date","type":"string"},"dateModified":{"default":"new Date()","description":"The date and time that the entity was last modified.","format":"date","type":"string"},"version":{"default":0,"description":"The optimistic lock version.","type":"number"},"amount":{"default":0,"description":"The amount of the payment to be made.","type":"number"},"currency":{"default":"usd","description":"The form of currency pertaining to the price.","type":"string"},"confirmation":{"default":null,"description":"The digital confirmation code that was received from the payment processor.","type":"string"},"data":{"default":{},"description":"Custom data to store about this payment.","type":"object"},"offline":{"default":false,"description":"Indicates that the payment will be made when the customer is offline.","type":"boolean"},"orderUid":{"default":null,"description":"The optional unique identifier of the order that the payment is being made for.","type":"string"},"provider":{"default":"Null","description":"The backend provider that will process this payment.","type":"string"},"status":{"default":"CREATED","description":"The current status of the payment.","type":"string"},"walletUid":{"default":"","description":"The unique identifier of the wallet that the payment was made with.","type":"string"}},"required":["uid","dateCreated","dateModified","version","amount","currency","confirmation","data","offline","orderUid","provider","status","walletUid"],"x-baseClass":"BaseMongoEntity","x-cache":30,"x-datastore":"user","x-shard":{"key":{"uid":1},"unique":false,"options":{}}},"models.PaymentMethod":{"description":"Stores information needed to collect a future payment on behalf of a customer.","type":"object","properties":{"uid":{"default":"randomUUID()","description":"The universally unique identifier of the entity.","type":"string","x-identifier":true},"dateCreated":{"default":"new Date()","description":"The date and time that the entity was created.","format":"date","type":"string"},"dateModified":{"default":"new Date()","description":"The date and time that the entity was last modified.","format":"date","type":"string"},"version":{"default":0,"description":"The optimistic lock version.","type":"number"},"data":{"default":null,"description":"The payment processor's private data used to perform transactions.","type":"object"},"default":{"default":false,"description":"Indicates if this the default payment method for a given wallet.","type":"boolean"},"provider":{"default":"Stripe","description":"The payment provider type that the method uses.","type":"string"},"status":{"default":"CREATED","description":"Indicates whether this payment method can be used for transactions.","type":"string"},"walletUid":{"default":"","description":"The unique identifier of the wallet associated with this payment method.","type":"string"}},"required":["uid","dateCreated","dateModified","version","data","default","provider","status","walletUid"],"x-baseClass":"BaseMongoEntity","x-cache":30,"x-datastore":"user","x-shard":{"key":{"uid":1},"unique":false,"options":{}}},"models.Product":{"description":"Describes a single product that can be purchased by a customer.","type":"object","properties":{"uid":{"default":"randomUUID()","description":"The universally unique identifier of the entity.","type":"string","x-identifier":true},"dateCreated":{"default":"new Date()","description":"The date and time that the entity was created.","format":"date","type":"string"},"dateModified":{"default":"new Date()","description":"The date and time that the entity was last modified.","format":"date","type":"string"},"version":{"default":0,"description":"The optimistic lock version.","type":"number"},"name":{"default":"","description":"The unique name of the product.","type":"string","x-identifier":true},"title":{"default":"","description":"The name to display to the user.","type":"string"},"background":{"default":"","description":"The URL to the background media or CSS style to display on the product page.","type":"string"},"categories":{"default":[],"description":"The list of product category identifiers that this product belongs to.","type":"array"},"cover":{"default":{"hero":"","landscape":"","square":"","portrait":"","mini":""},"description":"The set of cover images to use when showing the product.","type":"object"},"currency":{"default":"usd","description":"The form of currency pertaining to the price.","type":"string"},"description":{"default":"","description":"A textual description of the product.","type":"string"},"features":{"description":"The map of feature uid's to a quantity value that the product offers.","type":"object"},"icon":{"default":"","description":"The icon to display when showing the product description.","type":"string"},"logo":{"default":"","description":"The image to display when viewing the product in a table or grid.","type":"string"},"license":{"default":"PERPETUAL","description":"The length of time that the product license is good for.","type":"string"},"parentUid":{"default":null,"description":"An optional uid of the parent that this product is a child of. A child product may represent an add-on, expansion pack, special bundle or other.","type":"string"},"msrp":{"default":0,"description":"The manufacturer suggested the retail price of the product.","type":"number"},"price":{"default":0,"description":"The amount of money that the product costs to purchase.","type":"number"},"requires":{"default":[],"description":"The list of other product or category identifiers that must be purchased before this product can be acquired.","type":"array"},"reserved":{"default":0,"description":"The number of units that have been reserved for purchasing through pending orders.","type":"number"},"roles":{"default":[],"description":"A list of roles that users must have to view/buy this product.","type":"array"},"sold":{"default":0,"description":"The number of units, of this product that have been sold.","type":"number"},"slideshow":{"default":[],"description":"A list of media URLs to display at the top of the product information page.","type":"array"},"summary":{"default":"","description":"A brief textual overview of the product.","type":"string"},"tags":{"default":[],"description":"The list of tags associated with the product.","type":"array"},"type":{"default":"OTHER","description":"The type that determines the of the product.","type":"string"},"units":{"default":-1,"description":"The maximum number of units, of this product that are for sale. A negative value indicates an unlimited quantity.","type":"number"},"data":{"default":null,"description":"An arbitrary map of metadata associated with this product.","type":"object"},"featured":{"default":-1,"description":"The featured display index of the product, if any. If the product is not featured, the index is set to -1.","type":"number"},"defaultLaunchProfile":{"default":"","description":"The default LaunchProfile uid to launch the product with.","type":"string"},"launchProfiles":{"default":[],"description":"The optional list of LaunchProfile uid's available to the product.","type":"array"}},"required":["uid","dateCreated","dateModified","version","name","title","background","categories","cover","currency","description","icon","logo","license","parentUid","msrp","price","requires","reserved","roles","sold","slideshow","summary","tags","type","units","data","featured","defaultLaunchProfile","launchProfiles"],"x-baseClass":"BaseMongoEntity","x-cache":30,"x-datastore":"static"},"models.ProductCategory":{"description":"Describes a group of products that have similar characteristics.","type":"object","properties":{"uid":{"default":"randomUUID()","description":"The universally unique identifier of the entity.","type":"string","x-identifier":true},"dateCreated":{"default":"new Date()","description":"The date and time that the entity was created.","format":"date","type":"string"},"dateModified":{"default":"new Date()","description":"The date and time that the entity was last modified.","format":"date","type":"string"},"version":{"default":0,"description":"The optimistic lock version.","type":"number"},"name":{"default":"","description":"The unique name of the category","type":"string","x-identifier":true},"title":{"default":"","description":"The textual name of the category","type":"string"},"description":{"default":"","description":"The textual description of the category","type":"string"},"icon":{"default":"","description":"The asset to display for the category's icon","type":"string"},"data":{"default":null,"description":"An arbitrary map of metadata associated with this category.","type":"object"},"roles":{"default":[],"description":"A list of roles that users must have to view/buy this category.","type":"array"}},"required":["uid","dateCreated","dateModified","version","name","title","description","icon","data","roles"],"x-baseClass":"BaseMongoEntity","x-cache":30,"x-datastore":"static"},"models.ProductFeature":{"description":"Describes a single feature assignable to a product.","type":"object","properties":{"uid":{"default":"randomUUID()","description":"The universally unique identifier of the entity.","type":"string","x-identifier":true},"dateCreated":{"default":"new Date()","description":"The date and time that the entity was created.","format":"date","type":"string"},"dateModified":{"default":"new Date()","description":"The date and time that the entity was last modified.","format":"date","type":"string"},"version":{"default":0,"description":"The optimistic lock version.","type":"number"},"name":{"default":"","description":"The unique name of the feature","type":"string","x-identifier":true},"title":{"default":"","description":"The textual name of the feature","type":"string"},"description":{"default":"","description":"The textual description of the feature","type":"string"},"icon":{"default":"","description":"The asset to display for the feature's icon","type":"string"},"data":{"default":null,"description":"An arbitrary map of metadata associated with this feature.","type":"object"}},"required":["uid","dateCreated","dateModified","version","name","title","description","icon","data"],"x-baseClass":"BaseMongoEntity","x-cache":30,"x-datastore":"static"},"models.PromoCode":{"description":"A promotional code that can be applied to an order to get a pricing discount, cash back or free product.","type":"object","properties":{"uid":{"default":"randomUUID()","description":"The universally unique identifier of the entity.","type":"string","x-identifier":true},"dateCreated":{"default":"new Date()","description":"The date and time that the entity was created.","format":"date","type":"string"},"dateModified":{"default":"new Date()","description":"The date and time that the entity was last modified.","format":"date","type":"string"},"version":{"default":0,"description":"The optimistic lock version.","type":"number"},"name":{"default":"","description":"The unique name of the promotional code.","type":"string","x-identifier":true},"description":{"default":"","description":"The textual description of the promotion.","type":"string"},"maxUses":{"default":0,"description":"The maximum number of times that the promotion can be redeemed. If `-1` or `null` indicates no limit.","type":"number"},"expires":{"default":null,"description":"The date and time that the promotion expires and can no longer be redeemed. A `null` value indicates no expiration date.","format":"date","type":"string"},"starts":{"default":"2024-09-19T20:07:22.586Z","description":"The date and time that the promotion begins and can be redeemed.","format":"date","type":"string"},"redeemed":{"default":0,"description":"The number of times that this promotion has been redeemed.","type":"number"},"products":{"default":[],"description":"The list of product uid's that this promotion can be applied to. If `null` then applies to all products.","type":"array"},"customers":{"default":[],"description":"The list of customer uid's that can redeem this promotion. If `null` then anyone can redeem.","type":"array"},"amount":{"default":1,"description":"The amount of the promotion to apply when redeemed. The value can be a number indicating a percent or cash value. The value can also be a string or an array containing a list of product uid's to grant when applied.","type":"object"},"type":{"default":"PERCENT","description":"The type of promotion that will be applied when redeemed.","type":"string"}},"required":["uid","dateCreated","dateModified","version","name","description","maxUses","expires","starts","redeemed","products","customers","amount","type"],"x-baseClass":"BaseMongoEntity","x-cache":30,"x-datastore":"static"},"models.Purchase":{"description":"Describes a single product that has been purchased by a user.","type":"object","properties":{"uid":{"default":"randomUUID()","description":"The universally unique identifier of the entity.","type":"string","x-identifier":true},"dateCreated":{"default":"new Date()","description":"The date and time that the entity was created.","format":"date","type":"string"},"dateModified":{"default":"new Date()","description":"The date and time that the entity was last modified.","format":"date","type":"string"},"version":{"default":0,"description":"The optimistic lock version.","type":"number"},"productUid":{"default":"","description":"The unique identifier of the product that has been subscribed to.","type":"string"},"expirationDate":{"default":null,"description":"The date and time that this purchase will expire. An ` undefined` value indicates no expiration.","format":"date","type":"string"},"referral":{"default":"","description":"The unique identifier of the third party that referred this purchase sale.","type":"string"},"renewalDate":{"default":null,"description":"The date and time that the purchase will be automatically renewed. A `undefined` value indicates that either the purchase does not require renewal (perpetual license) or will not be automatically renewed at the end of the licensing term.","format":"date","type":"string"},"startDate":{"default":"2024-09-19T20:07:22.586Z","description":"The date and time that the license to the purchase began.","format":"date","type":"string"},"data":{"default":null,"description":"An arbitrary map of metadata associated with this purchase.","type":"object"},"walletUid":{"default":"","description":"The unique identifier of the wallet that owns the product purchase.","type":"string"}},"required":["uid","dateCreated","dateModified","version","productUid","expirationDate","referral","renewalDate","startDate","data","walletUid"],"x-baseClass":"BaseMongoEntity","x-cache":30,"x-datastore":"user","x-shard":{"key":{"uid":1},"unique":false,"options":{}}},"models.Wallet":{"description":"Manages information about the current account balance and payment information for a given customer. The uid of this object should map to a user or organization's uid.","type":"object","properties":{"uid":{"default":"randomUUID()","description":"The universally unique identifier of the entity.","type":"string","x-identifier":true},"dateCreated":{"default":"new Date()","description":"The date and time that the entity was created.","format":"date","type":"string"},"dateModified":{"default":"new Date()","description":"The date and time that the entity was last modified.","format":"date","type":"string"},"version":{"default":0,"description":"The optimistic lock version.","type":"number"},"billing":{"default":null,"description":"The uid of the billing contact for the wallet.","type":"string"},"balance":{"default":0,"description":"The current balance of the customer's funds with the wallet.","type":"number"},"contacts":{"default":[],"description":"The list of uid's, of additional contacts associated with the wallet.","type":"array"},"currency":{"default":"usd","description":"The current that the balance is represented as.","type":"string"},"data":{"default":null,"description":"An arbitrary map of metadata associated with this wallet.","type":"object"}},"required":["uid","dateCreated","dateModified","version","billing","balance","contacts","currency","data"],"x-baseClass":"BaseMongoEntity","x-cache":30,"x-datastore":"user","x-shard":{"key":{"uid":1},"unique":false,"options":{}}}},"responses":{},"parameters":{"id":{"description":"The unique identifier of the resource.","name":"id","in":"path","required":true,"schema":{"type":"string"}},"page":{"description":"The index of the current page when retrieving paginated results.","name":"page","in":"query","required":false,"schema":{"type":"number"}},"limit":{"description":"The maximum number of records to retrieve.","name":"limit","in":"query","required":false,"schema":{"type":"number"}},"sort":{"description":"The property and direction with which to sort the results by.","name":"sort","in":"query","required":false,"schema":{"oneOf":[{"description":"The name of the property to sort by, in ascending order.","type":"string","example":"propertyName"},{"description":"The name of the property to sort by, in ascending order.","type":"object","example":{"<propertyName>":"<direction>"}}]}},"version":{"description":"The unique version of the resource.","name":"version","in":"query","required":false,"schema":{"type":"number"}}},"examples":{},"requestBodies":{},"headers":{},"securitySchemes":{"jwt":{"type":"http","description":"JSON Web Token","scheme":"jwt"}},"links":{},"callbacks":{}},"tags":[],"servers":[{"url":"https://api.demo.goxbe.cloud/v1"}],"x-tagGroups":[{"name":"Accounts","tags":["IAM","Social"]},{"name":"Content","tags":["Assets"]},{"name":"Gameplay","tags":["Economy","Achievements","Persona","Quests","Progression","Leaderboards"]},{"name":"Multiplayer","tags":["Matchmaking","Sessions","Server Instances","Virtual World Services"]},{"name":"Storefront","tags":["Purchasing"]},{"name":"System","tags":["Backups","Crash Reports","Live Scripting","Telemetry","Notifications","Monitoring","Operations","Logs","Release Notes"]},{"name":"Default","tags":["Other"]}]}